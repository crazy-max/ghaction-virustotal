line.margin.width=2+
buffered.draw=0
if PLAT_WIN
	technology=1
if PLAT_MAC
	font.quality=3

caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=0
view.indentation.examine=3
highlight.indentation.guides=1
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
if PLAT_WIN
	selection.alpha=32
	selection.back=#000000
if PLAT_GTK
	selection.alpha=30
	selection.back=#000000
if PLAT_MAC
	selection.alpha=32
	selection.back=#000000

tabsize=4
indent.size=4
use.tabs=1
indent.automatic=1
indent.opening=0
indent.closing=0

clear.before.execute=0
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0



export.html.wysiwyg=1
export.html.styleused=1
export.rtf.font.size=12


chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåú?¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂ?


source.files=$(star *source.patterns.)
source.all.filter=All Source|$(source.files)|

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
	top.filters=$(source.all.filter)$(all.files)
if PLAT_MAC
	all.files=All Files (*.*)|*.*|
	top.filters=$(all.files)$(source.all.filter)

list.filters=$(star *filter.)

open.filter=$(top.filters)$(list.filters)


if PLAT_WIN
	font.base=font:Consolas,size:9
	font.small=font:Consolas,size:8
	font.comment=font:Consolas,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Consolas,size:9
	font.text.comment=font:Consolas,size:9
	font.embedded.base=font:Consolas,size:9
	font.embedded.comment=font:Consolas,size:9
	font.monospace=font:Consolas,size:9
	font.vbs=font:Consolas,size:9
	font.linenumber=font:Segoe UI,size:9
if PLAT_MAC
	font.base=font:Verdana,size:12
	font.small=font:Verdana,size:10
	font.comment=font:Georgia,size:13
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:13
	font.text.comment=font:Verdana,size:11
	font.embedded.base=font:Verdana,size:11
	font.embedded.comment=font:Comic Sans MS,size:10
	font.monospace=font:Courier New,size:12
	font.vbs=font:Lucida Sans Unicode,size:12
	font.linenumber=$(font.base)
font.js=$(font.comment)

colour.code.comment.box=fore:#00AF00
colour.code.comment.line=fore:#00AF00
colour.code.comment.doc=fore:#00AF00
colour.code.comment.nested=fore:#00AF00
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#00AF00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#00AFAF
colour.keyword=fore:#0000CF
colour.string=fore:#CF00CF
colour.char=fore:#CF00CF
colour.operator=fore:#000000
colour.preproc=fore:#CFCF00
colour.error=fore:#FFFF00,back:#FF0000

style.*.32=$(font.base)
style.*.33=back:#F8F8F8,$(font.linenumber)
style.*.34=fore:#0000FF,bold
style.*.35=fore:#FF0000,bold
style.*.36=
style.*.37=fore:#C0C0C0,back:#FFFFFF



menu.language=$(star *language.)




#imports.exclude=abaqus asl asn1 au3 ave avs baan blitzbasic bullant \
cmake cobol coffeescript csound ecl eiffel erlang escript flagship forth freebasic \
gap haskell hex inno json \
kix latex lot lout metapost mmixal modula3 nimrod nncrontab nsis \
opal oscript pov powerpro powershell ps purebasic r rebol rust \
scriptol smalltalk sorcins spice specman \
tacl tal txt2tags verilog vhdl

#import *



module abaqus

file.patterns.abaqus=*.inp;*.dat;*.msg
filter.abaqus=ABAQUS input (inp)|$(file.patterns.abaqus)|

*filter.abaqus=$(filter.abaqus)

lexer.$(file.patterns.abaqus)=abaqus
name.$(file.patterns.abaqus)=abaqus

*language.abaqus=Abaqus|inp||

keywords=*amplitude *assembly \
*beam *boundary *buckle *bulk \
*cload *conditions *conductivity *contact \
*damping *density *dload *dsflux *dsload *dynamic \
*el *elastic *element *element output *elgen *elset *encastre *end step \
*expansion *explicit *equation *embedded element \
*field *freq *frequency *friction \
*generate \
*heading *heat transfer *history \
*imperfectio *import *include *initial *initial conditions *instance *interactio \
*internal *interval \
*marks *material *monitor *mpc \
*ncopy *nfill *ngen *nlgeom *node *node output *node print *nset *number \
*output \
*pair *parameter *part *physical constants *plastic *print *preprint \
*radiate *restart \
*shell *shell section *solid section *specific heat *sradiate *static *step \
*surface \
*temperature *time *type \
*variable *viscosity

arguments=elset engineering inc input line material name nset pin tie type write generate field variable history \
stefan boltzmann absolute zero zero frequency steady state new old set change number shift \
model position newset oldset host

keywords.$(file.patterns.abaqus)=
keywords2.$(file.patterns.abaqus)=$(keywords)
keywords3.$(file.patterns.abaqus)=
keywords4.$(file.patterns.abaqus)=
keywords5.$(file.patterns.abaqus)=$(arguments)
keywords6.$(file.patterns.abaqus)=

comment.block.abaqus=**

style.abaqus.0=fore:#000000
style.abaqus.1=fore:#999999,$(font.comment),italics
style.abaqus.2=fore:#999999,$(font.comment),italics
style.abaqus.3=$(colour.number)
style.abaqus.4=$(colour.string)
style.abaqus.5=fore:#990000
style.abaqus.6=fore:#000000
style.abaqus.7=fore:#008888,bold
style.abaqus.8=fore:#0000CC
style.abaqus.9=fore:#0000CC,bold
style.abaqus.10=fore:#6600DD,bold
style.abaqus.11=fore:#0077FF
style.abaqus.12=fore:#0077DD


autocomplete.abaqus.ignorecase=1
calltip.abaqus.ignorecase=1

module ada

filter.ada=Ada (ads adb)|*.ads;*.adb|

*filter.ada=$(filter.ada)

file.patterns.ada=*.ads;*.adb

*source.patterns.ada=$(file.patterns.ada);

lexer.$(file.patterns.ada)=ada
name.$(file.patterns.ada)=ada

*language.ada=Ada|ads||


keywordclass.ada.main=abort abstract accept access aliased all array at begin body \
case constant declare delay delta digits do else elsif end entry exception exit for \
function generic goto if in is limited loop new null of others out package pragma \
private procedure protected raise range record renames requeue return reverse \
select separate subtype tagged task terminate then type until use when while with
keywordclass.ada.operators=abs and mod not or rem xor

keywordclass.ada=$(keywordclass.ada.main) $(keywordclass.ada.operators)

keywords.$(file.patterns.ada)=$(keywordclass.ada)

style.ada.0=fore:#808080
style.ada.1=$(colour.keyword),bold
style.ada.2=
style.ada.3=$(colour.number)
style.ada.4=$(colour.operator),bold
style.ada.5=$(colour.char)
style.ada.6=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ada.7=$(colour.string)
style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ada.9=fore:#7F0000
style.ada.10=$(colour.code.comment.line),$(font.code.comment.line)
style.ada.11=fore:#FF0000

comment.block.ada=--~

braces.ada.style=4

statement.indent.$(file.patterns.ada)=1 begin declare else elsif exception for if is loop while
statement.lookback.$(file.patterns.ada)=20
block.start.$(file.patterns.ada)=10 then is
block.end.$(file.patterns.ada)=10 end

calltip.ada.word.characters=._$(chars.alpha)

adagcc=gcc -c $(FileNameExt)


module asl
file.patterns.asl=*.asl;*.dsl
lexer.$(file.patterns.asl)=cpp
name.$(file.patterns.asl)=asl

*language.asl=Asl|asl||

keywordclass.asl=\
AccessAs Acquire Add Alias And Arg0 Arg1 Arg2 Arg3 Arg4 Arg5 Arg6 \
BankField Break BreakPoint Buffer Case Concatenate ConcatenateResTemplate \
CondRefOf Connection Continue CopyObject CreateBitField CreateByteField \
CreateDWordField CreateField CreateQWordField CreateWordField DataTableRegion \
Debug Decrement Default DefinitionBlock DerefOf Device Device Divide DMA \
DWordIO DWordMemory DWordSpace EisaId ElseIf Else EndDependentFn Event \
ExtendedIO ExtendedMemory ExtendedMemory ExtendedSpace External Fatal Field \
FindSetLeftBit FindSetRightBit FixedDMA FixedIO FromBCD Function GpioInt GpioIo \
I2CSerialBus If Include Increment Index IndexField Interrupt IO IRQNoFlags IRQ \
LAnd LEqual LGreater LGreaterEqual LLess LLessEqual LNotEqual LNot Load LoadTable \
Local0 Local1 Local2 Local3 Local4 Local5 Local6 Local7 LOr Match Memory24 \
Memory32 Memory32Fixed Method Mid Mod Multiply Mutex Name NAnd NoOp NOr Not \
Notify Offset ObjectType Ones One OperationRegion Or Package PowerResource \
Processor QWordIO QWordMemory QWordSpace RawDataBuffer RefOf Register Release \
Reset ResourceTemplate Return Revision Scope ShiftLeft ShiftRight Signal SizeOf \
Sleep SPISerialBus Stall StartDependentFn StartDependentFnNoPri Store Subtract \
Switch ThermalZone Timer ToBCD ToBuffer ToDecimalString ToHexString ToInteger \
ToString ToUUID UARTSerialBus Unicode Unload VendorLong VendorShort Wait While \
WordBusNumber WordIO WordSpace XOr Zero

keywordclass2.asl=\
AttribQuick AttribSendReceive AttribByte AttribBytes AttribRawBytes \
AttribRawProcessBytes AttribWord AttribBlock AttribProcessCall AttribBlockProcessCall \
AnyAcc ByteAcc WordAcc DWordAcc QWordAcc BufferAcc AddressRangeMemory \
AddressRangeReserved AddressRangeNVS AddressRangeACPI RegionSpaceKeyword \
FFixedHW PCC AddressingMode7Bit AddressingMode10Bit DataBitsFive DataBitsSix \
DataBitsSeven DataBitsEight DataBitsNine BusMaster NotBusMaster ClockPhaseFirst \
ClockPhaseSecond ClockPolarityLow ClockPolarityHigh SubDecode PosDecode BigEndianing \
LittleEndian AttribBytes AttribRawBytes AttribRawProcessBytes FlowControlNone \
FlowControlXon FlowControlHardware Edge Level ActiveHigh ActiveLow ActiveHigh \
ActiveLow ActiveBoth Decode16 Decode10 IoRestrictionNone IoRestrictionInputOnly \
IoRestrictionOutputOnly IoRestrictionNoneAndPreserve Lock NoLock \
MTR MEQ MLE MLT MGE MGT MaxFixed MaxNotFixed Cacheable WriteCombining Prefetchable \
NonCacheable MinFixed MinNotFixed UnknownObj IntObj StrObj BuffObj PkgObj FieldUnitObj \
DeviceObj EventObj MethodObj MutexObj OpRegionObj PowerResObj ProcessorObj \
ThermalZoneObj BuffFieldObj DDBHandleObj ParityTypeNone ParityTypeSpace ParityTypeMark \
ParityTypeOdd ParityTypeEven PullDefault PullUp PullDown PullNone PolarityHigh \
PolarityLow ISAOnlyRanges NonISAOnlyRanges EntireRange ReadWrite ReadOnly \
UserDefRegionSpace SystemIO SystemMemory PCI_Config EmbeddedControl SMBus SystemCMOS \
PciBarTarget IPMI GeneralPurposeIO GenericSerialBus ResourceConsumer ResourceProducer \
Serialized NotSerialized Shared Exclusive SharedAndWake ExclusiveAndWake \
ControllerInitiated DeviceInitiated StopBitsZero StopBitsOne StopBitsOnePlusHalf \
StopBitsTwo Width8Bit Width16Bit Width32Bit Width64Bit Width128Bit Width256Bit \
SparseTranslation DenseTranslation TypeTranslation TypeStatic Preserve WriteAsOnes \
WriteAsZeros Transfer8 Transfer16 Transfer8_16 ThreeWireMode FourWireMode

keywords.$(file.patterns.asl)=$(keywordclass.asl)
keywords2.$(file.patterns.asl)=$(keywordclass2.asl)

module asm

file.patterns.asm=*.asm

*source.patterns.asm=$(file.patterns.asm);

filter.asm=Assembler x86/x64 (asm)|$(file.patterns.asm)|
filter.as=Assembler x86/x64 (as)|$(file.patterns.as)|

*filter.asm=$(filter.asm)

lexer.$(file.patterns.asm)=asm
lexer.$(file.patterns.as)=as

name.$(file.patterns.asm)=assembler

*language.assembler=Assembler|asm||

bcd_instruction=aaa aad aam aas daa das
flow_instruction=ja jae jb jbe jc jcxz je jg jge jl jle jmp jna \
	jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz \
	jo jp jpe jpo js jz \
	jcxz jecxz jrcxz \
	loop loope loopne loopz loopnz \
	call ret

alu_instruction=add sub adc sbb neg cmp inc dec \
	and or xor not test \
	shl shr sal sar shld shrd rol ror rcl rcr \
	cbw cwd cwde cdq cdqe cqo \
	bsf bsr bt btc btr bts \
	idiv imul div mul bswap \
	nop

mem_instruction=lea \
	mov movsx movsxd movzx \
	xlatb bound \
	xchg xadd cmpxchg cmpxchg8b cmpxchg16b

stack_instruction=push pop pushad popad pushf popf pushfd popfd pushfq popfq

pred_instruction=seta setae setb setbe setc sete setg setge setl \
	setle setna setnae setnb setnbe setnc setne setng setnge \
	setnl setnle setno setnp setns setnz seto setp setpe setpo \
	sets setz \
	salc

flag_instruction=clc cld stc std cmc lahf sahf

cmov_instruction=cmovo cmovno cmovb cmovc cmovnae cmovae cmovnb \
	cmovnc cmove cmovz cmovne cmovnz cmovbe cmovna cmova \
	cmovnbe cmovs cmovns cmovp cmovpe cmovnp cmovpo cmovl \
	cmovnge cmovge cmovnl cmovle cmovng cmovg cmovnle

prefix_instruction=lock rep repe repz repne repnz

string_instruction=cmpsb cmpsw cmpsq \
	movsb movsw movsq \
	scasb scasw scasd scasq \
	stosb stosw stosd stosq

info_instruction=cpuid rdtsc rdtscp rdpmc xgetbv

lwp_instruction=llwpcb slwpcb lwpval lwpins

ext_instruction=crc32 popcnt lzcnt tzcnt movbe pclmulqdq rdrand

bmi1_instruction=andn bextr blsi blsmk blsr

bmi2_instruction=bzhi mulx pdep pext rorx sarx shlx shrx

tbm_instruction=blcfill blci blcic blcmsk blcs blsfill blsic t1mskc tzmsk

fpu_instruction=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcom fcomp fcompp fdecstp \
	fdisi fdiv fdivp fdivr fdivrp feni ffree fiadd ficom ficomp fidiv \
	fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 \
	fldcw fldenv fldenvw fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul \
	fmulp fnclex fndisi fneni fninit fnop fnsave fnsavew fnstcw fnstenv \
	fnstenvw fnstsw fpatan fprem fptan frndint frstor frstorw fsave \
	fsavew fscale fsqrt fst fstcw fstenv fstenvw fstp fstsw fsub fsubp \
	fsubr fsubrp ftst fwait fxam fxch fxtract fyl2x fyl2xp1 \
	fsetpm fcos fldenvd fnsaved fnstenvd fprem1 frstord fsaved fsin fsincos \
	fstenvd fucom fucomp fucompp fcomi fcomip fucomi fucomip ffreep \
	fcmovb fcmove fcmovbe fcmovu fcmovnb fcmovne fcmovnbe fcmovnu

mmx_instruction=movd movq \
	paddb paddw paddd paddsb paddsw paddusb paddusw \
	psubb psubw psubd psubsb psubsw psubusb psubusw \
	pand pandn por pxor \
	pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw \
	pmaddwd pmulhw pmullw \
	psllw pslld psllq psrlw psrld psrlq psraw psrad \
	packuswb packsswb packssdw \
	punpcklbw punpcklwd punpckldq punpckhbw punpckhwd punpckhdq \
	emms

mmx2_instruction=pavgb pavgw \
	pextrw pinsrw pmovmskb \
	pmaxsw pmaxub pminsw pminub \
	pmulhuw psadbw pshufw \
	prefetchnta prefetcht0 prefetcht1 prefetcht2 \
	maskmovq movntq sfence

emmx_instruction=paddsiw psubsiw \
	pmulhrw pmachriw pmulhriw \
	pmagw pdistib paveb \
	pmvzb pmvnzb pmvlzb pmvgezb

k3d_instruction=pfacc pfadd pfsub pfsubr pfmul \
	pfcmpeq pfcmpge pfcmpgt \
	pfmax pfmin \
	pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt \
	pi2fd pf2id \
	pavgusb pmulhrw \
	femms

k3d2_instruction=pfnacc pfpnacc pi2fw pf2iw pswapd

k3dgeode_instruction=pfrsqrtv pfrcpv

k3dprefetch_instruction=prefetch prefetchw

sse_instruction=addss addps subss subps \
	mulss mulps divss divps sqrtss sqrtps \
	rcpss rcpps rsqrtss rsqrtps \
	maxss maxps minss minps \
	cmpss comiss ucomiss cmpps \
	cmpeqss cmpltss cmpless cmpunordss cmpneqss cmpnltss cmpnless cmpordss \
	cmpeqps cmpltps cmpleps cmpunordps cmpneqps cmpnltps cmpnleps cmpordps \
	andnps andps orps xorps \
	cvtsi2ss cvtss2si cvttss2si \
	cvtpi2ps cvtps2pi cvttps2pi \
	movss movlps movhps movlhps movhlps movaps movups movntps movmskps \
	shufps unpckhps unpcklps \
	ldmxcsr stmxcsr

sse2_instruction=addpd addsd subpd subsd \
	mulsd mulpd divsd divpd sqrtsd sqrtpd \
	maxsd maxpd minsd minpd \
	cmpsd comisd ucomisd cmppd \
	cmpeqsd cmpltsd cmplesd cmpunordsd cmpneqsd cmpnltsd cmpnlesd cmpordsd \
	cmpeqpd cmpltpd cmplepd cmpunordpd cmpneqpd cmpnltpd cmpnlepd cmpordpd \
	andnpd andpd orpd xorpd \
	cvtsd2ss cvtpd2ps cvtss2sd cvtps2pd \
	cvtdq2ps cvtps2dq cvttps2dq \
	cvtdq2pd cvtpd2dq cvttpd2dq \
	cvtsi2sd cvtsd2si cvttsd2si \
	cvtpi2pd cvtpd2pi cvttpd2pi \
	movsd movlpd movhpd movapd movupd movntpd movmskpd \
	shufpd unpckhpd unpcklpd \
	movnti movdqa movdqu movntdq maskmovdqu \
	movdq2q movq2dq \
	paddq psubq pmuludq \
	pslldq psrldq \
	punpcklqdq punpckhqdq \
	pshufhw pshuflw pshufd \
	lfence mfence

sse3_instruction=addsubps addsubpd \
	haddps haddpd hsubps hsubpd \
	movsldup movshdup movddup \
	lddqu \
	fisttp

ssse3_instruction=psignb psignw psignd \
	pabsb pabsw pabsd \
	palignr pshufb \
	pmulhrsw pmaddubsw \
	phaddw phaddd phaddsw \
	phsubw phsubd phsubsw

sse4a_instruction=extrq insertq \
	movntsd movntss

sse41_instruction=mpsadbw phminposuw \
	pmuldq pmulld \
	dpps dppd \
	blendps blendpd blendvps blendvpd pblendvb pblendw \
	pmaxsb pmaxuw pmaxsd pmaxud pminsb pminuw pminsd pminud \
	roundps roundss roundpd roundsd \
	insertps pinsrb pinsrd pinsrq \
	extractps pextrb pextrd pextrq \
	pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq \
	pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq \
	ptest \
	pcmpeqq \
	packusdw \
	movntdqa

sse42_instruction=pcmpgtq \
	pcmpestri pcmpestrm pcmpistri pcmpistrm

aes_instruction=aesenc aesenclast aesdec aesdeclast aeskeygenassist aesimc

padlock_instruction=xcryptcbc xcryptcfb xcryptctr xcryptecb xcryptofb \
	xsha1 xsha256 montmul xstore


avx_instruction=vaddss vaddps vaddsd vaddpd vsubss vsubps vsubsd vsubpd \
	vaddsubps vaddsubpd \
	vhaddps vhaddpd vhsubps vhsubpd \
	vmulss vmulps vmulsd vmulpd \
	vmaxss vmaxps vmaxsd vmaxpd vminss vminps vminsd vminpd \
	vandps vandpd vandnps vandnpd vorps vorpd vxorps vxorpd \
	vblendps vblendpd vblendvps vblendvpd \
	vcmpss vcomiss vucomiss vcmpsd vcomisd vucomisd vcmpps vcmppd \
	vcmpeqss vcmpltss vcmpless vcmpunordss vcmpneqss vcmpnltss vcmpnless vcmpordss \
	vcmpeq_uqss vcmpngess vcmpngtss vcmpfalsess vcmpneq_oqss vcmpgess vcmpgtss vcmptruess \
	vcmpeq_osss vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss \
	vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss \
	vcmpeqps vcmpltps vcmpleps vcmpunordps vcmpneqps vcmpnltps vcmpnleps vcmpordps \
	vcmpeq_uqps vcmpngeps vcmpngtps vcmpfalseps vcmpneq_oqps vcmpgeps vcmpgtps vcmptrueps \
	vcmpeq_osps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps \
	vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps \
	vcmpeqsd vcmpltsd vcmplesd vcmpunordsd vcmpneqsd vcmpnltsd vcmpnlesd vcmpordsd \
	vcmpeq_uqsd vcmpngesd vcmpngtsd vcmpfalsesd vcmpneq_oqsd vcmpgesd vcmpgtsd vcmptruesd \
	vcmpeq_ossd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd \
	vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd \
	vcmpeqpd vcmpltpd vcmplepd vcmpunordpd vcmpneqpd vcmpnltpd vcmpnlepd vcmpordpd \
	vcmpeq_uqpd vcmpngepd vcmpngtpd vcmpfalsepd vcmpneq_oqpd vcmpgepd vcmpgtpd vcmptruepd \
	vcmpeq_ospd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd \
	vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd \
	vcvtsd2ss vcvtpd2ps vcvtss2sd vcvtps2pd \
	vcvtsi2ss vcvtss2si vcvttss2si \
	vcvtpi2ps vcvtps2pi vcvttps2pi \
	vcvtdq2ps vcvtps2dq vcvttps2dq \
	vcvtdq2pd vcvtpd2dq vcvttpd2dq \
	vcvtsi2sd vcvtsd2si vcvttsd2si \
	vcvtpi2pd vcvtpd2pi vcvttpd2pi \
	vdivss vdivps vdivsd vdivpd vsqrtss vsqrtps vsqrtsd vsqrtpd \
	vdpps vdppd \
	vmaskmovps vmaskmovpd \
	vmovss vmovsd vmovaps vmovapd vmovups vmovupd vmovntps vmovntpd \
	vmovhlps vmovlhps vmovlps vmovlpd vmovhps vmovhpd \
	vmovsldup vmovshdup vmovddup \
	vmovmskps vmovmskpd \
	vroundss vroundps vroundsd vroundpd \
	vrcpss vrcpps vrsqrtss vrsqrtps \
	vunpcklps vunpckhps vunpcklpd vunpckhpd \
	vbroadcastss vbroadcastsd vbroadcastf128 \
	vextractps vinsertps vextractf128 vinsertf128 \
	vshufps vshufpd vpermilps vpermilpd vperm2f128 \
	vtestps vtestpd \
	vpaddb vpaddusb vpaddsb vpaddw vpaddusw vpaddsw vpaddd vpaddq \
	vpsubb vpsubusb vpsubsb vpsubw vpsubusw vpsubsw vpsubd vpsubq \
	vphaddw vphaddsw vphaddd vphsubw vphsubsw vphsubd \
	vpsllw vpslld vpsllq vpsrlw vpsrld vpsrlq vpsraw vpsrad \
	vpand vpandn vpor vpxor \
	vpblendwb vpblendw \
	vpsignb vpsignw vpsignd \
	vpavgb vpavgw \
	vpabsb vpabsw vpabsd \
	vmovd vmovq vmovdqa vmovdqu vlddqu vmovntdq vmovntdqa vmaskmovdqu \
	vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq \
	vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq \
	vpackuswb vpacksswb vpackusdw vpackssdw \
	vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq \
	vpmaddubsw vpmaddwd \
	vpmullw vpmulhuw vpmulhw vpmulhrsw vpmulld vpmuludq vpmuldq \
	vpmaxub vpmaxsb vpmaxuw vpmaxsw vpmaxud vpmaxsd \
	vpminub vpminsb vpminuw vpminsw vpminud vpminsd \
	vpmovmskb vptest \
	vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq \
	vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq \
	vpslldq vpsrldq vpalignr \
	vpshufb vpshuflw vpshufhw vpshufd \
	vpextrb vpextrw vpextrd vpextrq vpinsrb vpinsrw vpinsrd vpinsrq \
	vpsadbw vmpsadbw vphminposuw \
	vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm \
	vpclmulqdq vaesenc vaesenclast vaesdec vaesdeclast vaeskeygenassist vaesimc \
	vldmxcsr vstmxcsr vzeroall vzeroupper

avx2_instruction=vbroadcasti128 vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq \
	vpblendd \
	vpermd vpermq vperm2i128 \
	vextracti128 vinserti128 \
	vpmaskmovd vpmaskmovq \
	vpsllvd vpsllvq vpsravd vpsrlvd vpsrldq \
	vpgatherdd vpgatherqd vgatherdq vgatherqq \
	vpermps vpermpd \
	vgatherdpd vgatherqpd vgatherdps vgatherqps

xop_instruction=vfrczss vfrczps vfrczsd vfrczpd \
	vpermil2ps vperlil2pd \
	vtestps vtestpd \
	vpcomub vpcomb vpcomuw vpcomw vpcomud vpcomd vpcomuq vpcomq \
	vphaddubw vphaddbw vphaddubd vphaddbd vphaddubq vphaddbq \
	vphadduwd vphaddwd vphadduwq vphaddwq vphaddudq vphadddq \
	vphsubbw vphsubwd vphsubdq \
	vpmacsdd vpmacssdd vpmacsdql vpmacssdql vpmacsdqh vpmacssdqh \
	vpmacsww vpmacssww vpmacswd vpmacsswd \
	vpmadcswd vpmadcsswd \
	vpcmov vpperm \
	vprotb vprotw vprotd vprotq \
	vpshab vpshaw vpshad vpshaq \
	vpshlb vpshlw vpshld vpshlq

cvt16_instruction=vcvtph2ps vcvtps2ph

fma4_instruction=vfmaddss vfmaddps vfmaddsd vfmaddpd \
	vfmsubss vfmsubps vfmsubsd vfmsubpd \
	vnfmaddss vnfmaddps vnfmaddsd vnfmaddpd \
	vnfmsubss vnfmsubps vnfmsubsd vnfmsubpd \
	vfmaddsubps vfmaddsubpd vfmsubaddps vfmsubaddpd

fma3_instruction=vfmadd132ss vfmadd213ss vfmadd231ss \
	vfmadd132ps vfmadd213ps vfmadd231ps \
	vfmadd132sd vfmadd213sd vfmadd231sd \
	vfmadd132pd vfmadd213pd vfmadd231pd \
	vfmaddsub132ps vfmaddsub213ps vfmaddsub231ps \
	vfmaddsub132pd vfmaddsub213pd vfmaddsub231pd \
	vfmsubadd132ps vfmsubadd213ps vfmsubadd231ps \
	vfmsubadd132pd vfmsubadd213pd vfmsubadd231pd \
	vfmsub132ss vfmsub213ss vfmsub231ss \
	vfmsub132ps vfmsub213ps vfmsub231ps \
	vfmsub132sd vfmsub213sd vfmsub231sd \
	vfmsub132pd vfmsub213pd vfmsub231pd \
	vfnmadd132ss vfnmadd213ss vfnmadd231ss \
	vfnmadd132ps vfnmadd213ps vfnmadd231ps \
	vfnmadd132sd vfnmadd213sd vfnmadd231sd \
	vfnmadd132pd vfnmadd213pd vfnmadd231pd \
	vfnmsub132ss vfnmsub213ss vfnmsub231ss \
	vfnmsub132ps vfnmsub213ps vfnmsub231ps \
	vfnmsub132sd vfnmsub213sd vfnmsub231sd \
	vfnmsub132pd vfnmsub213pd vfnmsub231pd

register=al ah bl bh cl ch dl dh \
	ax bx cx dx si di bp \
	eax ebx ecx edx esi edi ebx esp \
	st0 st1 st2 st3 st4 st5 st6 st7 \
	mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 \
	xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 \
	ymm0 ymm1 ymm2 ymm3 ymm4 ymm5 ymm6 ymm7 \
	fs

register_64=sil dil bpl \
	r8b r9b r10b r11b r12b r13b r14b r15b \
	r8w r9w r10w r11w r12w r13w r14w r15w \
	rax rcx rdx rbx rsp rbp rsi rdi \
	r8 r9 r10 r11 r12 r13 r14 r15 \
	xmm8 xmm9 xmm10 xmm11 xmm12 xmm13 xmm14 xmm15 \
	ymm8 ymm9 ymm10 ymm11 ymm12 ymm13 ymm14 ymm15 \
	gs

directive_nasm=db dw dd dq dt do dy \
	resb resw resd resq rest reso resy incbin equ times safeseh \
	__utf16__ __utf32__ %+ \
	default cpu float start imagebase osabi \
	..start ..imagebase ..gotpc ..gotoff ..gottpoff ..got ..plt ..sym ..tlsie \
	section segment __sect__ group absolute \
	.bss .comment .data .lbss .ldata .lrodata .rdata .rodata .tbss .tdata .text \
	alloc bss code exec data noalloc nobits noexec nowrite progbits rdata tls write \
	private public common stack overlay class \
	extern global common import export \
	%define %idefine %xdefine %ixdefine %assign %undef %? %?? \
	%defstr %idefstr %deftok %ideftok \
	%strcat %strlen %substr \
	%macro %imacro %rmacro %exitmacro %endmacro %unmacro \
	%if %ifn %elif %elifn %else %endif \
	%ifdef %ifndef %elifdef %elifndef \
	%ifmacro %ifnmacro %elifmacro %elifnmacro \
	%ifctx %ifnctx %elifctx %elifnctx \
	%ifidn %ifnidn %elifidn %elifnidn \
	%ifidni %ifnidni %elifidni %elifnidni \
	%ifid %ifnid %elifid %elifnid \
	%ifnum %ifnnum %elifnum %elifnnum \
	%ifstr %ifnstr %elifstr %elifnstr \
	%iftoken %ifntoken %eliftoken %elifntoken \
	%ifempty %elifempty %ifnempty %elifnempty \
	%ifenv %ifnenv %elifenv %elifnenv \
	%rep %exitrep %endrep \
	%while %exitwhile %endwhile \
	%include %pathsearch %depend %use \
	%push %pop %repl %arg %local %stacksize flat flat64 large small \
	%error %warning %fatal \
	%00 .nolist %rotate %line %! %final %clear \
	struc endstruc istruc at iend \
	align alignb sectalign \
	bits use16 use32 use64 \
	__nasm_major__ __nasm_minor__ __nasm_subminor__ ___nasm_patchlevel__ \
	__nasm_version_id__ __nasm_ver__ \
	__file__ __line__ __pass__ __bits__ __output_format__ \
	__date__ __time__ __date_num__ __time_num__ __posix_time__ \
	__utc_date__ __utc_time__ __utc_date_num__ __utc_time_num__ \
	__float_daz__ __float_round__ __float__ \
	__use_altreg__ altreg \
	__use_smartalign__ smartalign __alignmode__ \
	__use_fp__ __infinity__ __nan__ __qnan__ __snan__ \
	__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__

directive_operand_nasm=a16 a32 a64 o16 o32 o64 strict \
	byte word dword qword tword oword yword nosplit \
	%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 \
	abs rel \
	$ $$ \
	seg wrt

keywords.$(file.patterns.asm)=$(bcd_instruction) $(flow_instruction) $(alu_instruction) $(mem_instruction) $(stack_instruction) $(pred_instruction) $(flag_instruction) $(cmov_instruction) $(prefix_instruction) $(string_instruction) $(info_instruction) $(lwp_instruction) $(ext_instruction) $(bmi1_instruction) $(bmi2_instruction)
keywords2.$(file.patterns.asm)=$(fpu_instruction)
keywords3.$(file.patterns.asm)=$(register) $(register_64)
keywords4.$(file.patterns.asm)=$(directive_nasm)
keywords5.$(file.patterns.asm)=$(directive_operand_nasm)
keywords6.$(file.patterns.asm)=$(mmx_instruction) $(mmx2_instruction) $(emmx_instruction) $(k3d_instruction) $(k3d2_instruction) $(k3dgeode_instruction) $(k3dprefetch_instruction) $(sse_instruction) $(sse2_instruction) $(sse3_instruction) $(ssse3_instruction) $(sse4a_instruction) $(sse41_instruction) $(sse42_instruction) $(aes_instruction) $(padlock_instruction) $(avx_instruction) $(avx2_instruction) $(xop_instruction) $(cvt16_instruction) $(fma4_instruction) $(fma3_instruction)

keywords.$(file.patterns.as)=$(bcd_instruction) $(flow_instruction) $(alu_instruction) $(mem_instruction) $(stack_instruction) $(pred_instruction) $(flag_instruction) $(cmov_instruction) $(prefix_instruction) $(string_instruction) $(info_instruction) $(lwp_instruction) $(ext_instruction) $(bmi1_instruction) $(bmi2_instruction)
keywords2.$(file.patterns.as)=$(fpu_instruction)
keywords3.$(file.patterns.as)=$(register) $(register_64)
keywords4.$(file.patterns.as)=$(directive_nasm)
keywords5.$(file.patterns.as)=$(directive_operand_nasm)
keywords6.$(file.patterns.as)=$(mmx_instruction) $(mmx2_instruction) $(emmx_instruction) $(k3d_instruction) $(k3d2_instruction) $(k3dgeode_instruction) $(k3dprefetch_instruction) $(sse_instruction) $(sse2_instruction) $(sse3_instruction) $(ssse3_instruction) $(sse4a_instruction) $(sse41_instruction) $(sse42_instruction) $(aes_instruction) $(padlock_instruction) $(avx_instruction) $(avx2_instruction) $(xop_instruction) $(cvt16_instruction) $(fma4_instruction) $(fma3_instruction)

comment.block.asm=;
comment.block.as=#


style.asm.0=
style.as.0=$(style.asm.0)
style.asm.1=fore:#adadad
style.as.1=$(style.asm.1)
style.asm.2=fore:#ff0000
style.as.2=$(style.asm.2)
style.asm.3=$(colour.string)
style.as.3=$(style.asm.3)
style.asm.4=$(colour.operator),bold
style.as.4=$(style.asm.4)
style.asm.5=
style.as.5=$(style.asm.5)
style.asm.6=$(colour.keyword),bold
style.as.6=$(style.asm.6)
style.asm.7=fore:#0000ff
style.as.7=$(style.asm.7)
style.asm.8=fore:#46aa03,bold
style.as.8=$(style.asm.8)
style.asm.9=fore:#0000ff
style.as.9=$(style.asm.9)
style.asm.10=fore:#0000ff
style.as.10=$(style.asm.10)
style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)
style.as.11=$(style.asm.11)
style.asm.12=$(colour.char)
style.as.12=$(style.asm.12)
style.asm.13=fore:#000000,back:#E0C0E0,eolfilled
style.as.13=$(style.asm.13)
style.asm.14=fore:#B00040
style.as.14=$(style.asm.14)
style.asm.15=fore:#66AA00
style.as.15=$(style.asm.15)



statement.indent.$(file.patterns.asm)=9 .if
statement.indent.$(file.patterns.as)=9 .if

module asn1

filter.asn1=ASN.1 (asn1)|*.mib|

*filter.asn1=$(filter.asn1)

file.patterns.asn1=*.mib

lexer.$(file.patterns.asn1)=asn1
name.$(file.patterns.asn1)=asn1

*language.asn1=ASN.1|mib||

style.asn1.0=fore:#000000
style.asn1.1=fore:#007F00,$(font.comment)
style.asn1.2=fore:#000000,bold
style.asn1.3=fore:#7F007F
style.asn1.4=fore:#007F7F,bold
style.asn1.5=fore:#7F0000
style.asn1.6=fore:#00007F
style.asn1.7=fore:#F07800
style.asn1.8=fore:#00007F
style.asn1.9=fore:#00007F
style.asn1.10=fore:#222222

keywords.$(file.patterns.asn1)=\
ACCESS AGENT AUGMENTS \
BEGIN BITS \
CAPABILITIES CHOICE COMPLIANCE CONTACT CONVENTION \
DEFINITIONS DEFVAL DESCRIPTION DISPLAY \
END ENTERPRISE EXPORTS \
FALSE FROM \
GROUP GROUPS \
HINT \
IDENTITY IMPLIED IMPORTS INCLUDES INDEX INFO \
LAST \
MANDATORY MAX MIN MODULE \
NOTATION NOTIFICATION NULL \
OBJECTS OBJECT-TYPE OF ORGANIZATION \
PRODUCT \
RELEASE REFERENCE REQUIRES REVISION \
SEQUENCE SIZE STATUS SUPPORTS SYNTAX \
TEXTUAL TRAP TYPE TRAP-TYPE \
UPDATED \
VALUE VARIABLES VARIATION \
WRITE

keywords2.$(file.patterns.asn1)=\
accessible \
create current \
deprecated \
for \
mandatory \
not notify not-accessible \
obsolete only optional \
read read-only read-write \
write

keywords3.$(file.patterns.asn1)=\
ABSENT ANY APPLICATION \
BIT BOOLEAN BY \
COMPONENT COMPONENTS \
DEFAULT DEFINED \
ENUMERATED EXPLICIT EXTERNAL \
IMPLICIT INIFINITY \
MAX MIN MINUS \
OPTIONAL \
PRESENT PRIVATE \
REAL \
SET \
TAGS TRUE

keywords4.$(file.patterns.asn1)=\
Counter Counter32 Counter64 \
DisplayString \
Gauge Gauge32 \
IDENTIFIER INTEGER Integer32 IpAddress \
NetworkAddress NsapAddress \
OBJECT OCTET Opaque \
PhysAddress \
STRING \
TimeTicks \
UInteger32 UNITS Unsigned32


module au3

file.patterns.au3=*.au3
filter.au3=AutoIt (au3)|$(file.patterns.au3)|
lexer.$(file.patterns.au3)=au3
name.$(file.patterns.au3)=au3

*filter.au3=$(filter.au3)
*language.au3=AutoIt|au3||
*source.patterns.au3=$(file.patterns.au3);

autocomplete.au3.ignorecase=1
autocomplete.au3.start.characters=$(chars.alpha)$(chars.numeric)_@#$
calltip.au3.end.definition=)
calltip.au3.ignorecase=1
calltip.au3.use.escapes=1
calltip.au3.word.characters=$(chars.alpha)$(chars.numeric)_.
word.characters.$(file.patterns.au3)=$(chars.alpha)$(chars.numeric)$(chars.accented)_@#$.

indent.size.$(file.patterns.au3)=4
tab.size.$(file.patterns.au3)=4
use.tabs.$(file.patterns.au3)=1

block.start.$(file.patterns.au3)=5\
 case if do for func else elseif while select switch with\
 Case If Do For Func Else ElseIf While Select Switch With\
 CASE IF DO FOR FUNC ELSE ELSEIF WHILE SELECT SWITCH WITH

block.end.$(file.patterns.au3)=5\
 case else endif elseif endfunc endselect endswitch next until wend endwith\
 Case Else EndIf ElseIf EndFunc EndSelect EndSwitch Next Until WEnd EndWith Wend\
 CASE ELSE ENDIF ELSEIF ENDFUNC ENDSELECT ENDSWITCH NEXT UNTIL WEND ENDWITH

comment.block.au3=;~
comment.block.at.line.start.au3=1
comment.box.start.au3=#cs
comment.box.middle.au3=;
comment.box.end.au3=#ce
comment.stream.start.au3=#cs
comment.stream.end.au3=#ce


keywords.$(file.patterns.au3)=and byref case const continuecase continueloop default dim\
 do else elseif endfunc endif endselect endswitch endwith enum exit exitloop false\
 for func global if in local next not null or redim return select static step switch\
 then to true until volatile wend while with

keywords2.$(file.patterns.au3)=abs acos adlibregister adlibunregister asc ascw asin assign\
 atan autoitsetoption autoitwingettitle autoitwinsettitle beep binary binarylen binarymid\
 binarytostring bitand bitnot bitor bitrotate bitshift bitxor blockinput break call\
 cdtray ceiling chr chrw clipget clipput consoleread consolewrite consolewriteerror\
 controlclick controlcommand controldisable controlenable controlfocus controlgetfocus\
 controlgethandle controlgetpos controlgettext controlhide controllistview controlmove\
 controlsend controlsettext controlshow controltreeview cos dec dircopy dircreate\
 dirgetsize dirmove dirremove dllcall dllcalladdress dllcallbackfree dllcallbackgetptr\
 dllcallbackregister dllclose dllopen dllstructcreate dllstructgetdata dllstructgetptr\
 dllstructgetsize dllstructsetdata drivegetdrive drivegetfilesystem drivegetlabel\
 drivegetserial drivegettype drivemapadd drivemapdel drivemapget drivesetlabel drivespacefree\
 drivespacetotal drivestatus envget envset envupdate eval execute exp filechangedir\
 fileclose filecopy filecreatentfslink filecreateshortcut filedelete fileexists filefindfirstfile\
 filefindnextfile fileflush filegetattrib filegetencoding filegetlongname filegetpos\
 filegetshortcut filegetshortname filegetsize filegettime filegetversion fileinstall\
 filemove fileopen fileopendialog fileread filereadline filereadtoarray filerecycle\
 filerecycleempty filesavedialog fileselectfolder filesetattrib filesetend filesetpos\
 filesettime filewrite filewriteline floor ftpsetproxy funcname guicreate guictrlcreateavi\
 guictrlcreatebutton guictrlcreatecheckbox guictrlcreatecombo guictrlcreatecontextmenu\
 guictrlcreatedate guictrlcreatedummy guictrlcreateedit guictrlcreategraphic guictrlcreategroup\
 guictrlcreateicon guictrlcreateinput guictrlcreatelabel guictrlcreatelist guictrlcreatelistview\
 guictrlcreatelistviewitem guictrlcreatemenu guictrlcreatemenuitem guictrlcreatemonthcal\
 guictrlcreateobj guictrlcreatepic guictrlcreateprogress guictrlcreateradio guictrlcreateslider\
 guictrlcreatetab guictrlcreatetabitem guictrlcreatetreeview guictrlcreatetreeviewitem\
 guictrlcreateupdown guictrldelete guictrlgethandle guictrlgetstate guictrlread guictrlrecvmsg\
 guictrlregisterlistviewsort guictrlsendmsg guictrlsendtodummy guictrlsetbkcolor guictrlsetcolor\
 guictrlsetcursor guictrlsetdata guictrlsetdefbkcolor guictrlsetdefcolor guictrlsetfont\
 guictrlsetgraphic guictrlsetimage guictrlsetlimit guictrlsetonevent guictrlsetpos\
 guictrlsetresizing guictrlsetstate guictrlsetstyle guictrlsettip guidelete guigetcursorinfo\
 guigetmsg guigetstyle guiregistermsg guisetaccelerators guisetbkcolor guisetcoord\
 guisetcursor guisetfont guisethelp guiseticon guisetonevent guisetstate guisetstyle\
 guistartgroup guiswitch hex hotkeyset httpsetproxy httpsetuseragent hwnd inetclose\
 inetget inetgetinfo inetgetsize inetread inidelete iniread inireadsection inireadsectionnames\
 inirenamesection iniwrite iniwritesection inputbox int isadmin isarray isbinary isbool\
 isdeclared isdllstruct isfloat isfunc ishwnd isint iskeyword isnumber isobj isptr\
 isstring log memgetstats mod mouseclick mouseclickdrag mousedown mousegetcursor mousegetpos\
 mousemove mouseup mousewheel msgbox number objcreate objcreateinterface objevent\
 objevent objget objname onautoitexitregister onautoitexitunregister opt ping pixelchecksum\
 pixelgetcolor pixelsearch processclose processexists processgetstats processlist\
 processsetpriority processwait processwaitclose progressoff progresson progressset\
 ptr random regdelete regenumkey regenumval regread regwrite round run runas runaswait\
 runwait send sendkeepactive seterror setextended shellexecute shellexecutewait shutdown\
 sin sleep soundplay soundsetwavevolume splashimageon splashoff splashtexton sqrt\
 srandom statusbargettext stderrread stdinwrite stdioclose stdoutread string stringaddcr\
 stringcompare stringformat stringfromasciiarray stringinstr stringisalnum stringisalpha\
 stringisascii stringisdigit stringisfloat stringisint stringislower stringisspace\
 stringisupper stringisxdigit stringleft stringlen stringlower stringmid stringregexp\
 stringregexpreplace stringreplace stringreverse stringright stringsplit stringstripcr\
 stringstripws stringtoasciiarray stringtobinary stringtrimleft stringtrimright stringupper\
 tan tcpaccept tcpclosesocket tcpconnect tcplisten tcpnametoip tcprecv tcpsend tcpshutdown\
 tcpstartup timerdiff timerinit tooltip traycreateitem traycreatemenu traygetmsg trayitemdelete\
 trayitemgethandle trayitemgetstate trayitemgettext trayitemsetonevent trayitemsetstate\
 trayitemsettext traysetclick trayseticon traysetonevent traysetpauseicon traysetstate\
 traysettooltip traytip ubound udpbind udpclosesocket udpopen udprecv udpsend udpshutdown\
 udpstartup vargettype winactivate winactive winclose winexists winflash wingetcaretpos\
 wingetclasslist wingetclientsize wingethandle wingetpos wingetprocess wingetstate\
 wingettext wingettitle winkill winlist winmenuselectitem winminimizeall winminimizeallundo\
 winmove winsetontop winsetstate winsettitle winsettrans winwait winwaitactive winwaitclose\
 winwaitnotactive

keywords3.$(file.patterns.au3)=@appdatacommondir @appdatadir @autoitexe @autoitpid @autoitversion\
 @autoitx64 @com_eventobj @commonfilesdir @compiled @computername @comspec @cpuarch\
 @cr @crlf @desktopcommondir @desktopdepth @desktopdir @desktopheight @desktoprefresh\
 @desktopwidth @documentscommondir @error @exitcode @exitmethod @extended @favoritescommondir\
 @favoritesdir @gui_ctrlhandle @gui_ctrlid @gui_dragfile @gui_dragid @gui_dropid @gui_winhandle\
 @homedrive @homepath @homeshare @hotkeypressed @hour @ipaddress1 @ipaddress2 @ipaddress3\
 @ipaddress4 @kblayout @lf @localappdatadir @logondnsdomain @logondomain @logonserver\
 @mday @min @mon @msec @muilang @mydocumentsdir @numparams @osarch @osbuild @oslang\
 @osservicepack @ostype @osversion @programfilesdir @programscommondir @programsdir\
 @scriptdir @scriptfullpath @scriptlinenumber @scriptname @sec @startmenucommondir\
 @startmenudir @startupcommondir @startupdir @sw_disable @sw_enable @sw_hide @sw_lock\
 @sw_maximize @sw_minimize @sw_restore @sw_show @sw_showdefault @sw_showmaximized\
 @sw_showminimized @sw_showminnoactive @sw_showna @sw_shownoactivate @sw_shownormal\
 @sw_unlock @systemdir @tab @tempdir @tray_id @trayiconflashing @trayiconvisible @username\
 @userprofiledir @wday @windowsdir @workingdir @yday @year

keywords4.$(file.patterns.au3)={!} {#} {^} {{} {}} {+} {alt} {altdown} {altup} {appskey}\
 {asc} {backspace} {break} {browser_back} {browser_favorites} {browser_forward} {browser_home}\
 {browser_refresh} {browser_search} {browser_stop} {bs} {capslock} {ctrldown} {ctrlup}\
 {del} {delete} {down} {end} {enter} {esc} {escape} {f1} {f10} {f11} {f12} {f2} {f3}\
 {f4} {f5} {f6} {f7} {f8} {f9} {home} {ins} {insert} {lalt} {launch_app1} {launch_app2}\
 {launch_mail} {launch_media} {lctrl} {left} {lshift} {lwin} {lwindown} {lwinup} {media_next}\
 {media_play_pause} {media_prev} {media_stop} {numlock} {numpad0} {numpad1} {numpad2}\
 {numpad3} {numpad4} {numpad5} {numpad6} {numpad7} {numpad8} {numpad9} {numpadadd}\
 {numpaddiv} {numpaddot} {numpadenter} {numpadmult} {numpadsub} {oem_102} {pause}\
 {pgdn} {pgup} {printscreen} {ralt} {rctrl} {right} {rshift} {rwin} {rwindown} {rwinup}\
 {scrolllock} {shiftdown} {shiftup} {sleep} {space} {tab} {up} {volume_down} {volume_mute}\
 {volume_up}

keywords5.$(file.patterns.au3)=#ce #comments-end #comments-start #cs #include #include-once\
 #notrayicon #onautoitstartregister #requireadmin

keywords6.$(file.patterns.au3)=#endregion #forcedef #forceref #ignorefunc #pragma #region\
 $(autoit3wrapper.keywords.special)

keywords7.$(file.patterns.au3)=$(au3.keywords.abbrev) $(au3.keywords.userabbrev)

keywords8.$(file.patterns.au3)=$(au3.keywords.udfs)


style.au3.0=fore:#000000
style.au3.1=$(colour.code.comment.line)
style.au3.2=back:#F7F7F7,eolfilled,$(colour.code.comment.box)
style.au3.3=$(colour.number)
style.au3.4=$(colour.keyword)
style.au3.5=$(colour.keyword)
style.au3.6=$(style.au3.9)
style.au3.7=back:#FFF9FF,$(colour.string)
style.au3.8=$(colour.operator)
style.au3.9=fore:#800000
style.au3.10=back:#FFF9FF,bold,$(colour.string)
style.au3.11=back:#FFFFF8,$(colour.preproc)
style.au3.12=fore:#B00000,back:#FFFDFD
style.au3.13=fore:#FF0000
style.au3.14=$(style.au3.9)
style.au3.15=fore:#0080FF


autoit3dir=$(SciteDefaultHome)\..

api.$(file.patterns.au3)=$(SciteDefaultHome)\api\au3.api;$(SciteDefaultHome)\api\au3.autoit3wrapper.api;$(SciteUserHome)\au3.user.calltips.api


module ave

filter.ave=AVE (ave)|*.ave|

*filter.ave=$(filter.ave)

file.patterns.ave=*.ave

lexer.*.ave=ave
lexer.$(file.patterns.ave)=ave
name.$(file.patterns.ave)=avenue

*language.avenue=Avenue|ave||


keywords.$(file.patterns.ave)=nil true false else for if while then elseif end av self in exit
word.chars.ave=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ave)=$(word.chars.ave)

statement.indent.$(file.patterns.ave)=1 else for if while then
statement.lookback.$(file.patterns.ave)=1 end



comment.block.ave='--

comment.box.start.ave='--
comment.box.middle.ave='--
comment.box.end.ave='--
autocomplete.ave.ignorecase=1
calltip.ave.ignorecase=1
autocomplete.ave.start.characters=.
calltip.ave.word.characters=.$(word.chars.ave)

style.ave.32=$(font.code.base),fore:#000000
style.ave.0=fore:#FF0000
style.ave.1=$(colour.code.comment.line),$(font.code.comment.line)
style.ave.2=$(colour.number),bold
style.ave.3=$(colour.keyword),bold
style.ave.6=$(colour.string)
style.ave.7=$(colour.preproc),bold
style.ave.8=back:#E0C0E0,eolfilled
style.ave.10=$(colour.operator)
style.ave.9=$(font.code.base),fore:#000000
style.ave.11=back:#FF0000
style.ave.12=$(font.code.base),fore:#003355,bold
style.ave.13=$(font.code.base),fore:#005533,bold
style.ave.14=$(colour.keyword)
style.ave.15=$(colour.keyword)
style.ave.16=$(colour.keyword)
braces.ave.style=10


avenue=ave "$(FilePath)"
avenueGo=avego "$(FilePath)"
avenueBuild=avebuild "$(FilePath)"





module avs

file.patterns.avs=*.avs;*.avsi

filter.avs=AviSynth (avs avsi)|$(file.patterns.avs)|

lexer.$(file.patterns.avs)=avs
name.$(file.patterns.avs)=avs

*language.avs=AviSynth|avs||

word.chars.avs=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.avs)=$(word.chars.avs)

autocomplete.avs.ignorecase=1
autocomplete.avs.fillups=(
calltip.avs_quote.ignorecase=1
calltip.avs.word.characters=$(word.chars.avs)

comment.block.at.line.start.avs=1
comment.block.avs=#~
comment.stream.start.avs=/*
comment.stream.end.avs=*/
comment.box.start.avs=/*
comment.box.middle.avs= *
comment.box.end.avs= */

keywords.$(file.patterns.avs)=true false return global

keywords2.$(file.patterns.avs)=addborders alignedsplice amplify amplifydb animate applyrange assumebff \
assumefieldbased assumefps assumeframebased assumesamplerate assumescaledfps assumetff audiodub audiodubex \
avifilesource avisource bicubicresize bilinearresize blackmanresize blackness blankclip blur bob cache \
changefps colorbars colorkeymask coloryuv compare complementparity conditionalfilter conditionalreader \
convertaudio convertaudioto16bit convertaudioto24bit convertaudioto32bit convertaudioto8bit convertaudiotofloat \
convertbacktoyuy2 convertfps converttobackyuy2 converttomono converttorgb converttorgb24 converttorgb32 \
converttoy8 converttoyv16 converttoyv24 converttoyv411 converttoyuy2 converttoyv12 crop cropbottom delayaudio \
deleteframe dissolve distributor doubleweave duplicateframe ensurevbrmp3sync fadein fadein0 fadein2 fadeio fadeio0 \
fadeio2 fadeout fadeout0 fadeout2 fixbrokenchromaupsampling fixluminance fliphorizontal flipvertical frameevaluate \
freezeframe gaussresize generalconvolution getchannel getchannels getmtmode getparity grayscale greyscale histogram \
horizontalreduceby2 imagereader imagesource imagewriter info interleave internalcache internalcachemt invert killaudio \
killvideo lanczos4resize lanczosresize layer letterbox levels limiter loop mask maskhs max merge mergeargb mergechannels \
mergechroma mergeluma mergergb messageclip min mixaudio monotostereo normalize null opendmlsource overlay peculiarblend \
pointresize pulldown reduceby2 resampleaudio resetmask reverse rgbadjust scriptclip segmentedavisource segmenteddirectshowsource \
selecteven selectevery selectodd selectrangeevery separatefields setmtmode sharpen showalpha showblue showfiveversions \
showframenumber showgreen showred showsmpte showtime sincresize skewrows spatialsoften spline16resize spline36resize \
spline64resize ssrc stackhorizontal stackvertical subtitle subtract supereq swapfields swapuv temporalsoften timestretch \
tone trim turn180 turnleft turnright tweak unalignedsplice utoy utoy8 version verticalreduceby2 vtoy vtoy8 wavsource \
weave writefile writefileend writefileif writefilestart ytouv

keywords3.$(file.patterns.avs)=addgrain addgrainc agc_hdragc analyzelogo animeivtc asharp audiograph autocrop \
autoyuy2 avsrecursion awarpsharp bassaudiosource bicublinresize bifrost binarize blendfields blindpp blockbuster \
bordercontrol cfielddiff cframediff chromashift cnr2 colormatrix combmask contra convolution3d convolution3dyv12 \
dctfilter ddcc deblendlogo deblock deblock_qed decimate decomb dedup deen deflate degrainmedian depan depanestimate \
depaninterleave depanscenes depanstabilize descratch despot dfttest dgbob dgsource directshowsource distancefunction \
dss2 dup dupmc edeen edgemask ediupsizer eedi2 eedi3 eedi3_rpow2 expand faerydust fastbicubicresize fastbilinearresize \
fastediupsizer dedgemask fdecimate ffaudiosource ffdshow ffindex ffmpegsource ffmpegsource2 fft3dfilter fft3dgpu \
ffvideosource fielddeinterlace fielddiff fillmargins fity2uv fity2u fity2v fitu2y fitv2y fluxsmooth fluxsmoothst fluxsmootht \
framediff framenumber frfun3b frfun7 gicocu golddust gradfun2db grapesmoother greedyhma grid guavacomb hqdn3d hybridfupp \
hysteresymask ibob improvesceneswitch inflate inpand inpaintlogo interframe interlacedresize interlacedwarpedresize \
interleaved2planar iscombed iscombedt iscombedtivtc kerneldeint leakkernelbob leakkerneldeint limitedsharpen limitedsharpenfaster \
logic lsfmod lumafilter lumayv12 manalyse maskeddeinterlace maskedmerge maskedmix mblockfps mcompensate mctemporaldenoise \
mctemporaldenoisepp mdegrain1 mdegrain2 mdegrain3 mdepan medianblur mergehints mflow mflowblur mflowfps mflowinter minblur mipsmooth \
mmask moderatesharpen monitorfilter motionmask mpasource mpeg2source mrecalculate mscdetection msharpen mshow msmooth msu_fieldshiftfixer \
msu_frc msuper mt mt_adddiff mt_average mt_binarize mt_circle mt_clamp mt_convolution mt_deflate mt_diamond mt_edge mt_ellipse \
mt_expand mt_freeellipse mt_freelosange mt_freerectangle mt_hysteresis mt_infix mt_inflate mt_inpand mt_invert mt_logic mt_losange \
mt_lut mt_lutf mt_luts mt_lutspa mt_lutsx mt_lutxy mt_lutxyz mt_makediff mt_mappedblur mt_merge mt_motion mt_polish mt_rectangle \
mt_square mti mtsource multidecimate mvanalyse mvblockfps mvchangecompensate mvcompensate mvdegrain1 mvdegrain2 mvdegrain3 mvdenoise \
mvdepan mvflow mvflowblur mvflowfps mvflowfps2 mvflowinter mvincrease mvmask mvrecalculate mvscdetection mvshow nicac3source nicdtssource \
niclpcmsource nicmpasource nicmpg123source nnedi nnedi2 nnedi2_rpow2 nnedi3 nnedi3_rpow2 nomosmooth overlaymask peachsmoother pixiedust \
planar2interleaved qtgmc qtinput rawavsource rawsource reduceflicker reinterpolate411 removedirt removedust removegrain removegrainhd \
removetemporalgrain repair requestlinear reversefielddominance rgb3dlut rgdeinterlace rgsdeinterlace rgblut rotate sangnom seesaw sharpen2 \
showchannels showcombedtivtc smartdecimate smartdeinterlace smdegrain smoothdeinterlace smoothuv soothess soxfilter spacedust sshiq ssim \
ssiq stmedianfilter t3dlut tanisotropic tbilateral tcanny tcomb tcombmask tcpserver tcpsource tdecimate tdeint tedgemask telecide \
temporalcleaner temporalrepair temporalsmoother tfieldblank tfm tisophote tivtc tmaskblank tmaskedmerge tmaskedmerge3 tmm tmonitor tnlmeans \
tomsmocomp toon textsub ttempsmooth ttempsmoothf tunsharp unblock uncomb undot unfilter unsharpmask vaguedenoiser variableblur verticalcleaner \
videoscope vinverse vobsub vqmcalc warpedresize warpsharp xsharpen yadif yadifmod yuy2lut yv12convolution yv12interlacedreduceby2 \
yv12interlacedselecttopfields yv12layer yv12lut yv12lutxy yv12substract yv12torgb24 yv12toyuy2

keywords4.$(file.patterns.avs)=abs apply assert bool ceil chr clip continueddenominator continuednumerator cos default defined \
eval averagechromau averagechromav averageluma chromaudifference chromavdifference lumadifference exist exp findstr float floor \
frac hexvalue import int isbool isclip isfloat isint isstring lcase leftstr load_stdcall_plugin loadcplugin loadplugin loadvfapiplugin \
loadvirtualdubplugin log midstr muldiv nop opt_allowfloataudio opt_avipadscanlines opt_dwchannelmask opt_usewaveextensible \
opt_vdubplanarhack pi pow rand revstr rightstr round scriptdir scriptfile scriptname select setmemorymax setplanarlegacyalignment \
rgbdifference rgbdifferencefromprevious rgbdifferencetonext udifferencefromprevious udifferencetonext setworkingdir sign sin spline \
sqrt string strlen time ucase undefined value versionnumber versionstring uplanemax uplanemedian uplanemin uplaneminmaxdifference \
vdifferencefromprevious vdifferencetonext vplanemax vplanemedian vplanemin vplaneminmaxdifference ydifferencefromprevious \
ydifferencetonext yplanemax yplanemedian yplanemin yplaneminmaxdifference

keywords5.$(file.patterns.avs)=audiobits audiochannels audiolength audiolengthf audiorate framecount framerate frameratedenominator \
frameratenumerator getleftchannel getrightchannel hasaudio hasvideo height isaudiofloat isaudioint isfieldbased isframebased \
isinterleaved isplanar isrgb isrgb24 isrgb32 isyuv isyuy2 isyv12 width

keywords6.$(file.patterns.avs)=


style.avs.32=$(font.base)
style.avs.0=fore:#000000,$(font.base)
style.avs.1=$(colour.code.comment.box),$(font.code.comment.box)
style.avs.2=$(colour.code.comment.box),$(font.code.comment.box)
style.avs.3=$(colour.code.comment.line),$(font.code.comment.line)
style.avs.4=$(colour.number)
style.avs.5=$(colour.operator)
style.avs.6=
style.avs.7=$(colour.string)
style.avs.8=$(colour.string)
style.avs.9=fore:#00007F,bold
style.avs.10=fore:#00007F,bold
style.avs.11=fore:#0080C0,bold
style.avs.12=fore:#007F7F
style.avs.13=fore:#00007F
style.avs.14=fore:#8000FF
braces.avs.style=5

module baan
font.baan.monospace=font:Consolas,size:10

fold.baan.keywords.based=1
fold.baan.syntax.based=0
fold.baan.sections=1
fold.baan.inner.level=0
lexer.baan.styling.within.preprocessor=1



file.patterns.baan=*.bc;*.cln

filter.baan=Baan (baan)|$(file.patterns.baan)|

*filter.baan=$(filter.baan)

lexer.$(file.patterns.baan)=baan
name.$(file.patterns.baan)=baan

*language.baan=Baan|bc||

word.characters.$(file.patterns.baan)=$(chars.alpha)$(chars.numeric)_#.$
calltip.baan.word.characters=$(chars.alpha)$(chars.numeric)_#.$
autocomplete.baan.ignorecase=1
calltip.baan.ignorecase=1
autocomplete.baan.start.characters="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_."

preprocessor.symbol.$(file.patterns.baan)=#
preprocessor.start.$(file.patterns.baan)=if ifdef ifndef
preprocessor.middle.$(file.patterns.baan)=else elif
preprocessor.end.$(file.patterns.baan)=endif

comment.block.baan=|
comment.block.at.line.start.baan=1
	
block.start.$(file.patterns.baan)=4 case  else for  if repeat selectdo selectempty selecteos selecterror
block.end.$(file.patterns.baan)=4 else endcase  endfor  endif endselect endwhile selectempty selecteos selecterror
statement.lookback.$(file.patterns.baan)=0

colour.baan.whitespace=fore:#808080
colour.baan.preproc=fore:#808000
colour.baan.string=fore:#FF00FF
colour.baan.comment.doc=fore:#008080
colour.baan.comment.line=fore:#008000
colour.baan.numbers=fore:#FF0000
colour.baan.keyword=fore:#800000
colour.baan.keyword2=fore:#0000FF
colour.baan.keyword3=fore:#0000FF
colour.baan.keyword4=fore:#FF4500 
colour.baan.keyword5=fore:#800080
colour.baan.keyword6=fore:#FF00FF,back:#4EE2EC
colour.baan.keyword7=fore:#FF0000,back:#90EE90
colour.baan.keyword8=fore:#CC00CC,back:#FFFF99
colour.baan.keyword9=fore:#00FFFF
colour.baan.tabledef=fore:#9932CC 
colour.baan.tablesql=fore:#8A2BE2
colour.baan.functions=fore:#000080
colour.baan.domaindef=fore:#B8860B
colour.baan.funcdefs=fore:#B22222
colour.baan.objdefs=fore:#FF4500
colour.baan.definedefs=fore:#556B2F

colour.baan.braces.highlight=fore:#0000FF
colour.baan.braces.incomplete=fore:#FF0000
colour.baan.eol.string.not.closed=fore:#000000,back:#E0C0E0
colour.baan.operator=fore:#007F00	

style.baan.32=$(font.baan.monospace)
style.baan.0=$(colour.baan.whitespace),$(font.baan.monospace)
style.baan.1=$(colour.baan.comment.line),$(font.baan.monospace),bold,italics
style.baan.2=$(colour.baan.comment.doc),$(font.baan.monospace),bold,italics
style.baan.3=$(colour.baan.numbers),$(font.baan.monospace),bold
style.baan.4=$(colour.baan.keyword),$(font.baan.monospace),bold
style.baan.5=$(colour.baan.string),$(font.baan.monospace),bold
style.baan.6=$(colour.baan.preproc),$(font.baan.monospace),bold
style.baan.7=$(colour.baan.operator),$(font.baan.monospace),bold
style.baan.8=$(font.baan.monospace)
style.baan.9=$(colour.baan.eol.string.not.closed),$(font.baan.monospace),eolfilled
style.baan.10=$(colour.baan.keyword2),$(font.baan.monospace),bold
style.baan.11=$(colour.baan.keyword3),$(font.baan.monospace),bold
style.baan.12=$(colour.baan.keyword4),$(font.baan.monospace),bold
style.baan.13=$(colour.baan.keyword5),$(font.baan.monospace),bold
style.baan.14=$(colour.baan.keyword6),$(font.baan.monospace),bold
style.baan.15=$(colour.baan.keyword7),$(font.baan.monospace),bold
style.baan.16=$(colour.baan.keyword8),$(font.baan.monospace),bold
style.baan.17=$(colour.baan.keyword9),$(font.baan.monospace),bold
style.baan.18=$(colour.baan.tabledef),$(font.baan.monospace),bold
style.baan.19=$(colour.baan.tablesql),$(font.baan.monospace),bold
style.baan.20=$(colour.baan.functions),$(font.baan.monospace),bold
style.baan.21=$(colour.baan.domaindef),$(font.baan.monospace),bold
style.baan.22=$(colour.baan.funcdefs),$(font.baan.monospace),bold
style.baan.23=$(colour.baan.objdefs),$(font.baan.monospace),bold
style.baan.24=$(colour.baan.definedefs),$(font.baan.monospace),bold

braces.baan.style=7
style.baan.34=$(colour.baan.braces.highlight),bold
style.baan.35=$(colour.baan.braces.incomplete),bold

statement.indent.$(file.patterns.baan)=12 after.choice: after.delete: after.display: after.field: after.form.read: after.form: \
after.group: after.input: after.layout: after.program: after.receive.data: after.rewrite: after.skip.delete: after.skip.rewrite: \
after.skip.write: after.update.db.commit: after.write: after.zoom: before.checks: before.choice: before.delete: before.display.object: \
before.display: before.field: before.form: before.group: before.input: before.layout: before.new.object: before.print: before.program: \
before.read: before.rewrite: before.write: before.zoom: check.input: declaration: domain.error: init.field: init.form: init.group: on.choice: \
on.display.total.line: on.entry: on.error: on.exit: on.input: read.view: ref.display: ref.input: selection.filter: when.field.changes:

keywords.$(file.patterns.baan)=alike all and array as asc at avg base based between boolean both break bset buffer by call case cast chart clear \
clearunref common const continue count cross current_date current_timestamp date date.num date.to.num debug default delete deleteempty \
deleteerror desc dim distinct dll dllusage domain double else empty end endcase enddelete enddllusage endfor endfunctionusage endif endselect \
endupdate endwhile enum_description eq escape exists extern false fatal fetching field first fixed for from full function functionusage ge global goto \
group gt having hint hints if in include index inner input inrange integer is join label last le leading left like long lt max mb menu message min multibyte \
ne no nodebug not notransactions nowarnings null on or order ordered outer path pi prepared print prompt question raw real ref reference refers repeat \
retry return right row rows select selectbind selectdo selectempty selecteos selecterror session set setunref size skip static step sticky stop strict_boolean \
string subhint sum table text_content then timestamp to trailing trim true union unref until update updateempty updateerror use used void warning warnings \
when where wherebind whereused while with

keywords2.$(file.patterns.baan)=abort abort.io  \
db.after.delete db.after.insert db.after.update \
xmlSetData \
zoom.to$

keywords3.$(file.patterns.baan)=~.is.mandatory 

keywords4.$(file.patterns.baan)=after.choice: after.delete: after.display: after.field: after.form: after.group: after.input: after.layout: after.read: after.rewrite: \
after.skip.delete: after.skip.rewrite: after.skip.write: after.write: after.zoom: before.checks:  before.choice: before.delete: before.display: before.field: before.form: \
before.group: before.input: before.layout: before.print: before.read: before.rewrite: before.write: before.zoom: check.input: domain.error: init.field: init.form: \
init.group: on.choice: on.entry: on.exit: on.input: read.view: ref.display: ref.input: selection.filter: when.field.changes:

keywords5.$(file.patterns.baan)=after.~: before.~: choice.abort.program: choice.abort.work: choice.add.set: choice.ask.helpinfo: choice.attachments: \
choice.bms: choice.calculator: choice.calender: choice.cancel.work: choice.change.frm: choice.change.order: choice.cmd.about.baan: choice.cmd.copy: \
choice.cmd.cut: choice.cmd.options: choice.cmd.paste: choice.cont.process: choice.create.job: choice.current.work: choice.cust.grid: choice.def.find: \
choice.display.set: choice.dupl.occur: choice.end.program: choice.field.browse: choice.field.help: choice.find.data: choice.first.frm: choice.first.set: \
choice.first.view: choice.freeze.columns: choice.get.defaults: choice.global.copy: choice.global.delete: choice.glossary: choice.help.index: choice.hide.fields: \
choice.interrupt: choice.last.frm: choice.last.set: choice.last.view: choice.mark.delete: choice.mark.occur: choice.modify.set: choice.next.frm: choice.next.set: \
choice.next.view: choice.next.work: choice.prev.frm: choice.prev.set: choice.prev.view: choice.print.data: choice.processes: choice.recover.set: choice.reference: \
choice.resize.frm: choice.rotate.curr: choice.run.job: choice.save.defaults: choice.select.all: choice.send.data: choice.sendto.desktop: choice.sendto.editor: \
choice.sendto.mail: choice.sendto.tasklst: choice.start.chart: choice.start.query: choice.start.set: choice.suspend.work: choice.switch.windows: choice.synchronize: \
choice.text.manager: choice.to.clipboard: choice.unfreeze.colum: choice.update.db: choice.user.0: choice.user.1: choice.user.2: choice.user.3: choice.user.4: choice.user.5: \
choice.user.6: choice.user.7: choice.user.8: choice.user.9: choice.using.help: choice.zoom:  declaration: detail.~: field.~: footer.~: form.~: functions: group.~: \
header.~:  main.table.io: on.display.total.line: on.error: zoom.from.~:

keywords6.$(file.patterns.baan)=actual.occ \
zoomreturn$

keywords7.$(file.patterns.baan)=__file__ \
z.session

keywords8.$(file.patterns.baan)=^tcyesno. ^tdsls.corg.

keywords9.$(file.patterns.baan)=dalnew dalupdate


module blitzbasic

file.patterns.blitzbasic=*.bb

filter.blitzbasic=BlitzBasic (bb)|$(file.patterns.blitzbasic)|

*filter.blitzbasic=$(filter.blitzbasic)

lexer.$(file.patterns.blitzbasic)=blitzbasic
name.$(file.patterns.blitzbasic)=blitzbasic

*language.blitzbasic=BlitzBasic|bb||


keywordclass.blitzbasic=abs accepttcpstream acos after and apptitle asc asin atan atan2 \
automidhandle autosuspend availvidmem backbuffer banksize before bin calldll \
case ceil changedir channelpan channelpitch channelplaying channelvolume chr \
closedir closefile closemovie closetcpserver closetcpstream closeudpstream cls \
clscolor color colorblue colorgreen colorred commandline const copybank copyfile \
copyimage copypixel copypixelfast copyrect copystream cos countgfxdrivers \
countgfxmodes counthostips createbank createdir createimage createnetplayer \
createprocess createtcpserver createtimer createudpstream currentdate currentdir \
currenttime data debuglog default delay delete deletedir deletefile \
deletenetplayer desktopbuffer dim dottedip drawblock drawblockrect drawimage \
drawimagerect drawmovie each else else if elseif end end function end if end \
select end type endgraphics endif eof execfile exit exp false field filepos \
filesize filetype first flip float floor flushjoy flushkeys flushmouse \
fontheight fontname fontsize fontstyle fontwidth for forever freebank freefont \
freeimage freesound freetimer frontbuffer function gammablue gammagreen gammared \
getcolor getenv getkey getmouse gfxdrivername gfxmodedepth gfxmodeexists \
gfxmodeformat gfxmodeheight gfxmodewidth global gosub goto grabimage graphics \
graphicsbuffer graphicsdepth graphicsformat graphicsheight graphicswidth \
handleimage hex hidepointer hostip hostnetgame if imagebuffer imageheight \
imagerectcollide imagerectoverlap imagescollide imagesoverlap imagewidth \
imagexhandle imageyhandle include input insert instr int joinnetgame joydown \
joyhat joyhit joypitch joyroll joytype joyu joyudir joyv joyvdir joyx joyxdir \
joyy joyyaw joyydir joyz joyzdir keydown keyhit keywait last left len line \
loadanimimage loadbuffer loadfont loadimage loadsound local lockbuffer \
lockedformat lockedpitch lockedpixels log log10 loopsound lower lset maskimage \
mid midhandle millisecs mod morefiles mousedown mousehit mousex mousexspeed \
mousey mouseyspeed mousez mousezspeed movemouse movieheight movieplaying \
moviewidth netmsgdata netmsgfrom netmsgto netmsgtype netplayerlocal \
netplayername new next nextfile not null openfile openmovie opentcpstream or \
origin oval pausechannel pausetimer peekbyte peekfloat peekint peekshort pi \
playcdtrack playmusic playsound plot pokebyte pokefloat pokeint pokeshort print \
queryobject rand read readavail readbyte readbytes readdir readfile readfloat \
readint readline readpixel readpixelfast readshort readstring rect rectsoverlap \
recvnetmsg recvudpmsg repeat replace resettimer resizebank resizeimage restore \
resumechannel resumetimer return right rnd rndseed rotateimage rset runtimeerror \
sar savebuffer saveimage scaleimage scanline seedrnd seekfile select sendnetmsg \
sendudpmsg setbuffer setenv setfont setgamma setgfxdriver sgn shl showpointer \
shr sin soundpan soundpitch soundvolume sqr startnetgame step stop stopchannel \
stopnetgame str string stringheight stringwidth systemproperty tan tcpstreamip \
tcpstreamport tcptimeouts text tformfilter tformimage then tileblock tileimage \
timerticks to totalvidmem trim true type udpmsgip udpmsgport udpstreamip \
udpstreamport udptimeouts unlockbuffer until updategamma upper viewport vwait \
waitkey waitmouse waittimer wend while write writebyte writebytes writefile \
writefloat writeint writeline writepixel writepixelfast writeshort writestring \
xor

keywords.$(file.patterns.blitzbasic)=$(keywordclass.blitzbasic)

style.blitzbasic.0=fore:#000000
style.blitzbasic.1=$(colour.code.comment.line),$(font.code.comment.line)
style.blitzbasic.2=$(colour.number)
style.blitzbasic.3=$(colour.keyword)
style.blitzbasic.4=$(colour.string)
style.blitzbasic.6=$(colour.operator)
style.blitzbasic.7=$(style.blitzbasic.0)
style.blitzbasic.10=$(colour.keyword)
style.blitzbasic.11=$(colour.keyword)
style.blitzbasic.12=$(colour.keyword)
style.blitzbasic.15=$(colour.preproc)
style.blitzbasic.16=$(colour.error)
style.blitzbasic.17=$(colour.number)
style.blitzbasic.18=$(colour.number)


module bullant

filter.bullant=Bullant (.ant)|*.ant|

*filter.bullant=$(filter.bullant)

file.patterns.bullant=*.ant

lexer.$(file.patterns.bullant)=bullant
name.$(file.patterns.bullant)=bullant

*language.bullant=Bullant|ant||

keywordclass.bullant=abstract all ancestor and application \
assert attributes author \
begin \
callback class concrete config constants construct continue \
depends description downcast driver \
elif else ensures error exception exposure extension \
false fatal final function \
generics glyph \
help hidden host \
immutable in inherits is \
kernel \
label leave library locals \
mutable \
none not null \
obsolete options or other \
parameters peer private public \
raise reason restricted retry return \
returns rollback route \
security self settings severity step \
task test transaction true \
unknown \
varying \
warning when \
method end if until while trap case debug for foreach lock \
boolean \
character character$ \
date date$ datetime datetime$ \
float \
hex$ \
identifier identifier$ integer interval interval$ \
money money$ \
raw raw$ \
string \
tick tick$ time time$ \
version version$


keywords.$(file.patterns.bullant)=$(keywordclass.bullant)

style.bullant.0=fore:#000000,$(font.monospace)
style.bullant.1=fore:#007F00,$(font.monospace)
style.bullant.2=fore:#007F00,$(font.monospace)
style.bullant.3=fore:#7F7F7F
style.bullant.4=fore:#007F7F


style.bullant.5=fore:#00007F,bold
style.bullant.6=fore:#7F007F,$(font.monospace)
style.bullant.7=fore:#7F007F,$(font.monospace)
style.bullant.8=fore:#007F7F
style.bullant.9=fore:#7F7F00



module caml

file.patterns.caml=*.ml;*.mli
file.patterns.sml=*.sml

*filter.objectivecaml=$(filter.caml)

filter.caml=Objective Caml (ml mli)|$(file.patterns.caml)|
filter.sml=Standard ML 97 (sml ml)|$(file.patterns.sml)|

lexer.*.caml=caml
lexer.$(file.patterns.caml)=caml
lexer.$(file.patterns.sml)=caml

name.$(file.patterns.caml)=ocaml
name.$(file.patterns.sml)=sml

*language.ocaml=Objective Caml|ml||
*language.sml=Standard ML|sml||

keywordstandard.caml= \
and as assert asr begin class \
constraint do done downto else end \
exception external false for fun function \
functor if in include inherit initializer \
land lazy let lor lsl lsr \
lxor match method mod module mutable \
new object of open or private \
rec sig struct then to true \
try type val virtual when while \
with
keywords.$(file.patterns.caml)=$(keywordstandard.caml)

keywordstandard.sml= \
abstype andalso and as case datatype div do \
else end eqtype exception \
false fn fun functor handle if infixr infix include in let local \
mod nonfix not of open op orelse raise rec \
sharing signature sig structure struct then true type use \
val while withtype with
keywords.$(file.patterns.sml)=$(keywordstandard.sml)

keywordoptional1.caml= \
option Some None ignore ref lnot succ pred parser
keywords2.$(file.patterns.caml)=$(keywordoptional1.caml)

keywordoptional1.sml= \
option SOME NONE ignore ref \
chr explode implode ord size
keywords2.$(file.patterns.sml)=$(keywordoptional1.sml)

keywordoptional2.caml= \
array bool char float int list string unit
keywords3.$(file.patterns.caml)=$(keywordoptional2.caml)

keywordoptional2.sml= \
array bool char int list nil real string unit vector word
keywords3.$(file.patterns.sml)=$(keywordoptional2.sml)

word.characters.$(file.patterns.caml)=$(chars.alpha)$(chars.numeric)_'`
word.characters.$(file.patterns.sml)=$(chars.alpha)$(chars.numeric)_'

comment.stream.start.caml=(*
comment.stream.end.caml=*)
comment.box.start.caml=(*
comment.box.middle.caml= *
comment.box.end.caml= *)


style.caml.32=$(font.base)
style.caml.0=fore:#808080
style.caml.1=
style.caml.2=fore:#000000,back:#ffe0ff
style.caml.3=$(colour.keyword),bold
style.caml.4=fore:#000000,back:#e0e0ff
style.caml.5=fore:#a0000,bold
style.caml.6=back:#C0C0C0,$(font.base)
style.caml.7=$(colour.operator),bold
style.caml.8=fore:#000000,back:#ffff00
style.caml.9=fore:#000000,back:#ffff00
style.caml.10=fore:#000000,back:#e0e0e0
style.caml.11=fore:#000000,back:#ffff00
style.caml.12=$(colour.code.comment.box),$(font.code.comment.box)
style.caml.13=$(colour.embedded.comment),$(font.code.comment.box)
style.caml.14=$(colour.embedded.comment),$(font.code.comment.box)
style.caml.15=$(colour.embedded.comment),$(font.code.comment.box)

braces.caml.style=7



module cil

file.patterns.cil=*.il
filter.cil=CIL (il)|$(file.patterns.cil)|
lexer.$(file.patterns.cil)=cil
name.$(file.patterns.cil)=cil

*filter.cil=$(filter.cil)
*language.cil=CIL|il||
*source.patterns.cil=$(file.patterns.cil);

keywordclass.cil.main=abstract ansi assembly auto autochar beforefieldinit \
catch cdecl cil class compilercontrolled explicit extends extern famandassem \
family famorassem fastcall final finally forwardref hidebysig implements \
initonly instance interface internalcall lasterr literal managed nested \
newslot noinlining nomangle nooptimization notserialized optil pinvokeimpl \
platformapi preservesig private privatescope public reqsecobj rtspecialname \
runtime sealed sequential serializable specialname static stdcall strict \
synchronized thiscall unicode unmanaged unmanagedexp valuetype vararg virtual \
void winapi

keywordclass.cil.main.extras=bool char float32 float64 int int8 int16 int32 \
int64 native nullref object string typedref uint8 uint32 unsigned

keywordclass.cil.metadata=.addon .assembly .cctor .class .corflags .ctor \
.custom .data .emitbyte .entrypoint .event .export .field .file .fire .get \
.hash .imagebase .import .language .line .locale .localized .locals \
.manifestres .maxstack .method .module .mresource .namespace .other .override \
.pack .param .pdirect .permission .permissionset .property .property \
.publickey .publickeytoken .removeon .set .size .stackreserve .subsystem .try \
.ver .vtable .vtentry .vtfixup .zeroinit

keywordclass.cil.opcode=add add.ovf add.ovf.un and arglist beq beq.s \
bge bge.s bge.un bge.un.s bgt bgt.s bgt.un bgt.un.s ble ble.s ble.un ble.un.s \
blt blt.s blt.un blt.un.s bne.un bne.un.s box br br.s break brfalse brfalse.s \
brinst brinst.s brnull brnull.s brtrue brtrue.s brzero brzero.s bstr call \
calli callmostderived callvirt castclass ceq cgt cgt.un ckfinite ckfinite clt \
clt.un constrained. conv.i conv.i1 conv.i2 conv.i4 conv.i8 conv.ovf.i \
conv.ovf.i.un conv.ovf.i1 conv.ovf.i1.un conv.ovf.i2 conv.ovf.i2.un \
conv.ovf.i4 conv.ovf.i4.un conv.ovf.i8 conv.ovf.i8.un conv.ovf.u \
conv.ovf.u.un conv.ovf.u1 conv.ovf.u1.un conv.ovf.u2 conv.ovf.u2.un \
conv.ovf.u4 conv.ovf.u4.un conv.ovf.u8 conv.ovf.u8.un conv.r.un conv.r4 \
conv.r8 conv.u conv.u1 conv.u2 conv.u4 conv.u8 cpblk cpobj div div.un dup \
endfault endfilter endfinally initblk initobj isinst jmp ldarg ldarg.0 ldarg.1 \
ldarg.2 ldarg.3 ldarg.s ldarga ldarga.s ldc.i4 ldc.i4.0 ldc.i4.1 ldc.i4.2 \
ldc.i4.3 ldc.i4.4 ldc.i4.5 ldc.i4.6 ldc.i4.7 ldc.i4.8 ldc.i4.m1 ldc.i4.s \
ldc.i8 ldc.r4 ldc.r8 ldelem ldelem.i ldelem.i1 ldelem.i2 ldelem.i4 ldelem.i8 \
ldelem.r4 ldelem.r8 ldelem.ref ldelem.u1 ldelem.u2 ldelem.u4 ldelema ldfld \
ldflda ldftn ldind.i ldind.i1 ldind.i2 ldind.i4 ldind.i8 ldind.r4 ldind.r8 \
ldind.ref ldind.u1 ldind.u2 ldind.u4 ldlen ldloc ldloc.0 ldloc.1 ldloc.2 \
ldloc.3 ldloc.s ldloca ldloca.s ldnull ldobj ldsfld ldsflda ldstr ldtoken \
ldvirtftn leave leave.s localloc mkrefany mul mul.ovf mul.ovf.un neg newarr \
newobj no. nop not or pop readonly. refanytype refanyval rem rem.un ret \
rethrow shl shr shr.un sizeof starg starg.s stelem stelem.i stelem.i1 \
stelem.i2 stelem.i4 stelem.i8 stelem.r4 stelem.r8 stelem.ref stfld stind.i \
stind.i1 stind.i2 stind.i4 stind.i8 stind.r4 stind.r8 stind.ref stloc stloc.0 \
stloc.1 stloc.2 stloc.3 stloc.s stobj stsfld sub sub.ovf sub.ovf.un switch \
tail. throw unaligned. unbox unbox.any volatile. xor

keywords.$(file.patterns.cil)=$(keywordclass.cil.main)
keywords2.$(file.patterns.cil)=$(keywordclass.cil.metadata)
keywords3.$(file.patterns.cil)=$(keywordclass.cil.opcode)

comment.block.cil=//
comment.stream.start.cil=/*
comment.stream.end.cil=*/
comment.box.start.cil=/*
comment.box.middle.cil= *
comment.box.end.cil=*/

block.start.$(file.patterns.cil)=8 {
block.end.$(file.patterns.cil)=8 }

fold.cil.comment.multiline=0

style.cil.0=fore:#000000
style.cil.1=$(colour.code.comment.box),$(font.comment)
style.cil.2=$(colour.code.comment.line),$(font.comment)
style.cil.3=fore:#00007F,bold
style.cil.4=fore:#C80000,bold
style.cil.5=fore:#0040E0
style.cil.6=fore:#7F007F
style.cil.7=fore:#808080
style.cil.8=$(colour.operator),bold
style.cil.9=fore:#000000
style.cil.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled



module cmake

filter.cmake=CMake (CMakeLists.txt cmake ctest)|CMakeLists.txt;*.cmake;*.cmake.in;*.ctest;*.ctest.in|
*filter.cmake=$(filter.cmake)
file.patterns.cmake=CMakeLists.txt;*.cmake;*.cmake.in;*.ctest;*.ctest.in
lexer.$(file.patterns.cmake)=cmake
name.$(file.patterns.cmake)=cmake
*language.cmake=CMake|cmake||

keywords.$(file.patterns.cmake)= add_custom_command \
add_compile_definitions \
add_compile_options \
add_custom_command \
add_custom_target \
add_definitions \
add_dependencies \
add_executable \
add_library \
add_link_options \
add_subdirectory \
add_test \
aux_source_directory \
build_command \
build_name \
cmake_minimum_required \
configure_file \
create_test_sourcelist \
else \
elseif \
enable_language \
enable_testing \
endforeach \
endfunction \
endif \
endmacro \
endwhile \
exec_program \
execute_process \
export \
export_library_dependencies \
file \
find_file \
find_library \
find_package \
find_path \
find_program \
fltk_wrap_ui \
foreach \
function \
get_cmake_property \
get_directory_property \
get_filename_component \
get_source_file_property \
get_target_property \
get_test_property \
if \
include \
include_directories \
include_external_msproject \
include_regular_expression \
install \
install_files \
install_programs \
install_targets \
link_directories \
link_libraries \
list \
load_cache \
load_command \
macro \
make_directory \
mark_as_advanced \
math \
message \
option \
output_required_files \
project \
qt_wrap_cpp \
qt_wrap_ui \
remove \
remove_definitions \
separate_arguments \
set \
set_directory_properties \
set_source_files_properties \
set_target_properties \
set_tests_properties \
site_name \
source_group \
string \
subdir_depends \
subdirs \
target_compile_definitions \
target_compile_features \
target_compile_options \
target_include_directories \
target_link_directories \
target_link_libraries \
target_link_options \
target_sources \
try_compile \
try_run \
use_mangled_mesa \
utility_source \
variable_requires \
vtk_make_instantiator \
vtk_wrap_java \
vtk_wrap_python \
vtk_wrap_tcl \
while \
write_file

keywords2.$(file.patterns.cmake)= ABSOLUTE \
ABSTRACT \
ADDITIONAL_MAKE_CLEAN_FILES \
ALL \
AND \
APPEND \
ARGS \
ASCII \
BEFORE \
CACHE \
CACHE_VARIABLES \
CLEAR \
COMMAND \
COMMANDS \
COMMAND_NAME \
COMMENT \
COMPARE \
COMPILE_FLAGS \
COPYONLY \
DEFINED \
DEFINE_SYMBOL \
DEPENDS \
DOC \
EQUAL \
ESCAPE_QUOTES \
EXCLUDE \
EXCLUDE_FROM_ALL \
EXISTS \
EXPORT_MACRO \
EXT \
EXTRA_INCLUDE \
FATAL_ERROR \
FILE \
FILES \
FORCE \
FUNCTION \
GENERATED \
GLOB \
GLOB_RECURSE \
GREATER \
GROUP_SIZE \
HEADER_FILE_ONLY \
HEADER_LOCATION \
IMMEDIATE \
INCLUDES \
INCLUDE_DIRECTORIES \
INCLUDE_INTERNALS \
INCLUDE_REGULAR_EXPRESSION \
LESS \
LINK_DIRECTORIES \
LINK_FLAGS \
LOCATION \
MACOSX_BUNDLE \
MACROS \
MAIN_DEPENDENCY \
MAKE_DIRECTORY \
MATCH \
MATCHALL \
MATCHES \
MODULE \
NAME \
NAME_WE \
NOT \
NOTEQUAL \
NO_SYSTEM_PATH \
OBJECT_DEPENDS \
OPTIONAL \
OR \
OUTPUT \
OUTPUT_VARIABLE \
PATH \
PATHS \
POST_BUILD \
POST_INSTALL_SCRIPT \
PREFIX \
PREORDER \
PRE_BUILD \
PRE_INSTALL_SCRIPT \
PRE_LINK \
PROGRAM \
PROGRAM_ARGS \
PROPERTIES \
QUIET \
RANGE \
READ \
REGEX \
REGULAR_EXPRESSION \
REPLACE \
REQUIRED \
RETURN_VALUE \
RUNTIME_DIRECTORY \
SEND_ERROR \
SHARED \
SOURCES \
STATIC \
STATUS \
STREQUAL \
STRGREATER \
STRLESS \
SUFFIX \
TARGET \
TOLOWER \
TOUPPER \
VAR \
VARIABLES \
VERSION \
WIN32 \
WRAP_EXCLUDE \
WRITE \
APPLE  \
MINGW \
MSYS \
CYGWIN  \
BORLAND \
WATCOM \
MSVC MSVC_IDE MSVC60 MSVC70 MSVC71 MSVC80 CMAKE_COMPILER_2005 \
OFF ON \


statement.indent.$(file.patterns.cmake)=5 if while foreach macro
comment.block.cmake=#~
comment.block.at.line.start.cmake=1
calltip.cmake.ignorecase=1
calltip.cmake.parameters.start=(
calltip.cmake.parameters.separators=,
calltip.cmake.parameters.end=)

style.cmake.0=fore:#000000,$(font.base)
style.cmake.1=fore:#007F00,$(font.comment)
style.cmake.2=fore:#7F007F,back:#EEEEEE
style.cmake.3=fore:#7F007F,back:#EEEEEE
style.cmake.4=fore:#7F007F,back:#EEEEEE
style.cmake.5=fore:#00007F,bold
style.cmake.6=fore:#800000
style.cmake.7=fore:#CC3300
style.cmake.8=fore:#000000
style.cmake.9=fore:#00007F,bold
style.cmake.10=fore:#00007F,bold
style.cmake.11=fore:#00007F,bold
style.cmake.12=fore:#00007F,bold
style.cmake.13=fore:#CC3300,back:#EEEEEE
style.cmake.14=$(colour.number)

module cobol

file.patterns.COBOL=*.cob;*.cbl;*.cpy;*.copy
filter.cobol=COBOL (cob cbl cpy copy)|$(file.patterns.COBOL)|
*filter.cobol=$(filter.cobol)

lexer.$(file.patterns.COBOL)=COBOL
name.$(file.patterns.COBOL)=cobol

*language.cobol=COBOL|cob||

word.characters.$(file.patterns.COBOL)=$(chars.alpha)$(chars.numeric)$(chars.accented)_-

keywords.$(file.patterns.COBOL)=configuration data declaratives division environment file file-control function function-id i-o i-o-control identification input input-output linkage local-storage output procedure program program-id screen section special-names working-storage exec end-exec .
keywords2.$(file.patterns.COBOL)=accept add allocate alter call cancel close commit compute continue delete destroy disable display divide enable entry evaluate also when exit free generate go to goback if else initialize initiate inquire invoke inspect merge modify move multiply next sentence \
open perform purge raise read ready receive release reset resume return rewrite rollback search send set sort start stop string subtract suppress terminate transform unlock unstring use validate write \
end-accept end-add end-call end-compute end-delete end-display end-divide end-evaluate end-if end-multiply end-of-page end-perform end-read end-receive end-return end-rewrite end-search end-start end-string end-subtract end-unstring end-write \
copy replace \
abs acos annuity asin atan boolean-of-integer byte-length char char-national combined-datetime concatenate cos currency-symbol current-date date-of-integer date-to-yyyymmdd day-of-integer day-to-yyyyddd display-of \
e exception-file exception-file-n exception-location exception-location-n exception-statement exception-status exp exp10 factorial formatted-current-date formatted-date formatted-datetime formatted-time fraction-part highest-algebraic \
integer integer-of-boolean integer-of-date integer-of-day integer-of-formatted-date integer-part length length-an locale-compare locale-date locale-time locale-time-from-seconds log log10 lower-case lowest-algebraic \
max mean median midrange min mod module-caller-id module-date module-formatted-date module-id module-path module-source module-time monetary-decimal-point monetary-thousands-separator national-of numeric-decimal-point numeric-thousands-separator numval numval-c numval-f \
ord ord-max ord-min pi present-value random range rem reverse seconds-from-formatted-time seconds-past-midnight sign sin sqrt standard-compare standard-deviation stored-char-length substitute substitute-case sum \
tan test-date-yyyymmdd test-day-yyyyddd test-formatted-datetime test-numval test-numval-c test-numval-f trim upper-case variance when-compiled year-to-yyyy
keywords3.$(file.patterns.COBOL)=high-value high-values low-value low-values space spaces quote quotes zero zeroes zeros \
author date-compiled date-modified date-written installation remarks security \
cob-crt-status debug-item debug-line debug-name debug-sub-1 debug-sub-2 debug-sub-3 debug-contents number-of-call-parameters return-code return-code-unsigned sort-return \
tally dialect-all jnienvptr json-code linage-counter shift-in shift-out sort-control sort-core-size sort-file-size sort-message sort-mode-size \
xml-code xml-event xml-information xml-namespace xml-namespace-prefix xml-nnamespace xml-nnamespace-prefix xml-ntext xml-text \
sysin sysipt stdin sysout syslist syslst stdout print printer printer-1 syserr stderr console c01 c02 c03 c04 c05 c06 c07 c08 c09 c10 c11 c12 csp formfeed call-convention \
switch-0 switch-1 switch-2 switch-3 switch-4 switch-5 switch-6 switch-7 switch-8 switch-9 switch-10 switch-11 switch-12 switch-13 switch-14 switch-15 switch-16 switch-17 switch-18 \
switch-19 switch-20 switch-21 switch-22 switch-23 switch-24 switch-25 switch-26 switch-27 switch-28 switch-29 switch-30 switch-31 switch-32 switch-33 switch-34 switch-35 switch-36 \
upsi-0 upsi-1 upsi-2 upsi-3 upsi-4 upsi-5 upsi-6 upsi-7 \
access active-class address advancing after aligned all alphabet alphabetic alphabetic-lower alphabetic-upper alphanumeric alphanumeric-edited alternate and any anycase are area areas as ascending assign at automatic \
b-and b-not b-or b-xor based before binary binary-char binary-double binary-long binary-sequential binary-short bit blank block boolean bottom by \
cd cf ch character characters class class-id clock-units code-set col collating cols column columns comma common communication comp comp-3 comp-5 computational computational-3 computational-5 condition constant contains content control controls converting corr corresponding count crt currency cursor \
data-pointer date day day-of-week de debugging decimal-point default delimited delimiter depending descending destination detail down duplicates dynamic ec egi emi end enter eo eop equal equals error esi every exception exception-object exclusive extend external \
factory false farthest-from-zero fd filler final first float-binary-128 float-binary-32 float-binary-64 float-decimal-16 float-decimal-34 float-extended float-infinity float-long float-not-a-number-quiet float-not-a-number-signaling float-short footing for format from function-pointer \
get giving global greater group group-usage heading in in-arithmetic-range index indexed indicate inherits initial initialized interface interface-id into invalid is just justified key label last leading left less limit limits linage line line-counter line-sequential lines locale lock \
manual message method method-id minus mode modules multiple national national-edited native nearest-to-zero negative negative-infinity nested no not null number numbers numeric numeric-edited\
object object-computer object-reference occurs of off omitted on only optional options or order organization other overflow override \
packed-decimal padding page page-counter pf ph physical pic picture plus pointer position positive positive-infinity present previous printing procedures proceed program-pointer property prototype queue \
raising rd record records redefines reel reference references relative remainder removal renames replacing report reporting reports repository rerun reserve retry returning reversed rewind rf rh right rounded run \
same sd segment segment-limit select self separate sequence sequential sharing signed size sort-merge source source-computer sources standard standard-1 standard-2 status step sub-queue-1 sub-queue-2 sub-queue-3 super symbolic sync synchronized system-default \
table tallying terminal test text than then through thru time times top trailing true type typedef unit universal unsigned until up upon usage user-default using val-status valid validate-status value values varying with words \
arithmetic attribute auto away-from-zero background-color bell binary-c-long binary-encoding blink capacity center chaining classification cobol comp-1 comp-4 comp-6 comp-x computational-1 computational-4 computational-6 computational-x cycle \
decimal-encoding entry-convention eol eos erase expands float-binary float-decimal float-not-a-number foreground-color forever full high-order-left high-order-right highlight ignoring implements intermediate intrinsic lc_all lc_collate lc_ctype lc_messages lc_monetary lc_numeric lc_time lowlight \
memory nearest-away-from-zero nearest-even-intermediate nearest-toward-zero none normal \
paragraph prefixed prohibited recursive relation required reverse-video rounding seconds secure short standard-binary standard-decimal statement strong structure symbol tape toward-greater toward-lesser truncation ucs-4 underline utf-16 utf-8 yyyyddd yyyymmdd \
3-d apply background background-high background-low bar blob bold box busy cbl clob combo-box dbclob dbcs draw drop grid grip high hot-track hscroll hscroll-pos id imp kanji low num-rows o-fill oostackptr pos prompt public rowid scroll scroll-bar shadow skip1 skip2 skip3 sql \
tab track-thumb unbounded variant virtual-width vscroll vscroll-bar vscroll-pos wait width wrap xml


style.COBOL.0=fore:#808080,$(font.monospace)

style.COBOL.2=$(colour.code.comment.line),$(font.code.comment.line)
style.COBOL.3=$(colour.code.comment.document),$(font.code.comment.document)
style.COBOL.4=$(colour.number),$(font.monospace)
style.COBOL.5=$(colour.keyword),bold,$(font.monospace)
style.COBOL.6=$(colour.string),$(font.monospace)
style.COBOL.7=$(colour.char),$(font.monospace)
style.COBOL.8=$(colour.keyword),bold,$(font.monospace)
style.COBOL.9=$(colour.preproc),$(font.preproc)
style.COBOL.10=$(colour.operator),bold,$(font.monospace)
style.COBOL.11=$(colour.identifier),$(font.identifier),$(font.monospace)
style.COBOL.16=$(colour.keyword),bold,$(font.monospace)




module coffeescript

filter.coffeescript=CoffeeScript (coffee)|*.coffee|

file.patterns.coffeescript=*.coffee

lexer.$(file.patterns.coffeescript)=coffeescript
name.$(file.patterns.coffeescript)=coffeescript

*language.coffeescript=CoffeeScript|coffee||

style.coffeescript.32=$(font.base)
style.coffeescript.0=fore:#808080
style.coffeescript.1=$(colour.code.comment.box),$(font.code.comment.box)
style.coffeescript.2=$(colour.code.comment.line),$(font.code.comment.line)
style.coffeescript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.coffeescript.4=$(colour.number)
style.coffeescript.5=$(colour.keyword),bold
style.coffeescript.6=$(colour.string)
style.coffeescript.7=$(colour.char)
style.coffeescript.8=fore:#804080
style.coffeescript.9=$(colour.preproc)
style.coffeescript.10=$(colour.operator),bold
style.coffeescript.11=
style.coffeescript.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.coffeescript.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
style.coffeescript.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
style.coffeescript.15=$(colour.code.comment.doc),$(font.code.comment.doc)
style.coffeescript.16=fore:#B00040
style.coffeescript.17=fore:#3060A0,$(font.code.comment.doc)
style.coffeescript.18=fore:#804020,$(font.code.comment.doc)
style.coffeescript.19=fore:#DD9900
style.coffeescript.20=$(colour.string),back:#FFF3FF,eolfilled
style.coffeescript.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
style.coffeescript.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled
style.coffeescript.23=fore:#659900
style.coffeescript.24=$(colour.code.comment.doc)
style.coffeescript.25=fore:#C06000

module conf

file.patterns.conf=*.conf;.htaccess
*source.patterns.conf=$(file.patterns.conf);
filter.conf=Apache Conf (conf)|$(file.patterns.conf)|
*filter.apacheconfig=$(filter.conf)
lexer.$(file.patterns.conf)=conf
name.$(file.patterns.conf)=conf

*language.conf=Conf(Apache)|conf||

keywords.$(file.patterns.conf)=\
acceptmutex acceptpathinfo accessconfig accessfilename \
action addalt addaltbyencoding addaltbytype addcharset \
adddefaultcharset adddescription addencoding \
addhandler addicon addiconbyencoding addiconbytype \
addinputfilter addlanguage addmodule addmoduleinfo \
addoutputfilter addoutputfilterbytype addtype agentlog \
alias aliasmatch all allow allowconnect \
allowencodedslashes allowoverride anonymous \
anonymous_authoritative anonymous_logemail \
anonymous_mustgiveemail anonymous_nouserid \
anonymous_verifyemail assignuserid authauthoritative \
authdbauthoritative authdbgroupfile \
authdbmauthoritative authdbmgroupfile authdbmtype \
authdbmuserfile authdbuserfile authdigestalgorithm \
authdigestdomain authdigestfile authdigestgroupfile \
authdigestnccheck authdigestnonceformat \
authdigestnoncelifetime authdigestqop \
authdigestshmemsize authgroupfile \
authldapauthoritative authldapbinddn \
authldapbindpassword authldapcharsetconfig \
authldapcomparednonserver authldapdereferencealiases \
authldapenabled authldapfrontpagehack \
authldapgroupattribute authldapgroupattributeisdn \
authldapremoteuserisdn authldapurl authname authtype \
authuserfile bindaddress browsermatch \
browsermatchnocase bs2000account bufferedlogs \
cachedefaultexpire cachedirlength cachedirlevels \
cachedisable cacheenable cacheexpirycheck cachefile \
cacheforcecompletion cachegcclean cachegcdaily \
cachegcinterval cachegcmemusage cachegcunused \
cacheignorecachecontrol cacheignoreheaders \
cacheignorenolastmod cachelastmodifiedfactor \
cachemaxexpire cachemaxfilesize cacheminfilesize \
cachenegotiateddocs cacheroot cachesize \
cachetimemargin cgimapextension charsetdefault \
charsetoptions charsetsourceenc checkspelling \
childperuserid clearmodulelist contentdigest \
cookiedomain cookieexpires cookielog cookiename \
cookiestyle cookietracking coredumpdirectory customlog \
dav davdepthinfinity davlockdb davmintimeout \
defaulticon defaultlanguage defaulttype define \
deflatebuffersize deflatecompressionlevel \
deflatefilternote deflatememlevel deflatewindowsize \
deny directory directoryindex directorymatch \
directoryslash documentroot dumpioinput dumpiooutput \
enableexceptionhook enablemmap enablesendfile \
errordocument errorlog example expiresactive \
expiresbytype expiresdefault extendedstatus \
extfilterdefine extfilteroptions fancyindexing \
fileetag files filesmatch forcelanguagepriority \
forcetype forensiclog from group header headername \
hostnamelookups identitycheck ifdefine ifmodule \
imapbase imapdefault imapmenu include indexignore \
indexoptions indexorderdefault isapiappendlogtoerrors \
isapiappendlogtoquery isapicachefile isapifakeasync \
isapilognotsupported isapireadaheadbuffer keepalive \
keepalivetimeout languagepriority ldapcacheentries \
ldapcachettl ldapconnectiontimeout ldapopcacheentries \
ldapopcachettl ldapsharedcachefile ldapsharedcachesize \
ldaptrustedca ldaptrustedcatype limit limitexcept \
limitinternalrecursion limitrequestbody \
limitrequestfields limitrequestfieldsize \
limitrequestline limitxmlrequestbody listen \
listenbacklog loadfile loadmodule location \
locationmatch lockfile logformat loglevel maxclients \
maxkeepaliverequests maxmemfree maxrequestsperchild \
maxrequestsperthread maxspareservers maxsparethreads \
maxthreads maxthreadsperchild mcachemaxobjectcount \
mcachemaxobjectsize mcachemaxstreamingbuffer \
mcacheminobjectsize mcacheremovalalgorithm mcachesize \
metadir metafiles metasuffix mimemagicfile \
minspareservers minsparethreads mmapfile \
modmimeusepathinfo multiviewsmatch namevirtualhost \
nocache noproxy numservers nwssltrustedcerts \
nwsslupgradeable options order passenv pidfile port \
protocolecho proxy proxybadheader proxyblock \
proxydomain proxyerroroverride proxyiobuffersize \
proxymatch proxymaxforwards proxypass proxypassreverse \
proxypreservehost proxyreceivebuffersize proxyremote \
proxyremotematch proxyrequests proxytimeout proxyvia \
qsc readmename redirect redirectmatch \
redirectpermanent redirecttemp refererignore \
refererlog removecharset removeencoding removehandler \
removeinputfilter removelanguage removeoutputfilter \
removetype requestheader require resourceconfig \
rewritebase rewritecond rewriteengine rewritelock \
rewritelog rewriteloglevel rewritemap rewriteoptions \
rewriterule rlimitcpu rlimitmem rlimitnproc satisfy \
scoreboardfile script scriptalias scriptaliasmatch \
scriptinterpretersource scriptlog scriptlogbuffer \
scriptloglength scriptsock securelisten sendbuffersize \
serveradmin serveralias serverlimit servername \
serverpath serverroot serversignature servertokens \
servertype setenv setenvif setenvifnocase sethandler \
setinputfilter setoutputfilter singlelisten ssiendtag \
ssierrormsg ssistarttag ssitimeformat ssiundefinedecho \
sslcacertificatefile sslcacertificatepath \
sslcarevocationfile sslcarevocationpath \
sslcertificatechainfile sslcertificatefile \
sslcertificatekeyfile sslciphersuite sslengine \
sslmutex ssloptions sslpassphrasedialog sslprotocol \
sslproxycacertificatefile sslproxycacertificatepath \
sslproxycarevocationfile sslproxycarevocationpath \
sslproxyciphersuite sslproxyengine \
sslproxymachinecertificatefile \
sslproxymachinecertificatepath sslproxyprotocol \
sslproxyverify sslproxyverifydepth sslrandomseed \
sslrequire sslrequiressl sslsessioncache \
sslsessioncachetimeout sslusername sslverifyclient \
sslverifydepth startservers startthreads \
suexecusergroup threadlimit threadsperchild \
threadstacksize timeout transferlog typesconfig \
unsetenv usecanonicalname user userdir \
virtualdocumentroot virtualdocumentrootip virtualhost \
virtualscriptalias virtualscriptaliasip \
win32disableacceptex xbithack

keywords2.$(file.patterns.conf)=\
on off standalone inetd \
force-response-1.0 downgrade-1.0 nokeepalive \
indexes includes followsymlinks none \
x-compress x-gzip

style.conf.0=fore:#808080,$(font.base)
style.conf.1=fore:#007F00,$(font.comment)
style.conf.2=fore:#007F7F
style.conf.9=fore:#00007F,bold
style.conf.4=fore:#000000,back:#FFE0FF
style.conf.5=fore:#000000,back:#FFE0FF
style.conf.6=fore:#7F007F,$(font.monospace)
style.conf.7=bold
style.conf.8=fore:#007F7F,bold
style.conf.3=fore:#000000,back:#A0FFA0


module cpp

file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.h;*.hh;*.hpp;*.hxx;*.ipp;*.sma
file.patterns.cplusplus=*.cc;*.cpp;*.cxx
file.patterns.java=*.java;*.jad;*.pde
file.patterns.test=*.pln;*.inc;*.t
file.patterns.js=*.js;*.es;*.ts;*.jse;*.jsm;*.mjs;*.qs
file.patterns.cs=*.cs
file.patterns.rc=*.rc;*.rc2;*.dlg
file.patterns.idl=*.idl;*.odl
file.patterns.flash=*.as;*.asc;*.jsfl
file.patterns.ch=*.ch;*.chf;*.chs
file.patterns.vala=*.vala
file.patterns.go=*.go
file.patterns.pike=*.pike
file.patterns.swift=*.swift
file.patterns.objc=*.m;*.mm;
file.patterns.c.like=$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.idl);$(file.patterns.java);$(file.patterns.js);$(file.patterns.flash);$(file.patterns.ch);$(file.patterns.vala);$(file.patterns.pike);$(file.patterns.objc)
file.patterns.meson=*.meson_build

*source.patterns.cpp=$(file.patterns.c.like);
*source.patterns.resource=$(file.patterns.rc);*.def;

shbang.tcc=cpp
shbang.tinycc=cpp

filter.cpp=C/C++ (c cc cpp cxx cs vala h hh hxx hpp ipp dlg rc rc2 mak)|\
$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.rc);$(file.patterns.vala);*.mak;make*|
filter.java=Java (java)|*.java|
filter.js=JavaScript (js es ts)|$(file.patterns.js)|
filter.idl=IDL (idl odl)|$(file.patterns.idl)|
filter.test=SilkTest (pln inc t)|$(file.patterns.test)|
filter.flash=Flash (as asc jsfl)|$(file.patterns.flash)|
filter.ch=Ch (ch chf chs)|$(file.patterns.ch)|
filter.go=Go (go)|$(file.patterns.go)|
filter.pike=Pike (pike)|$(file.patterns.pike)|
filter.swift=Swift (swift)|$(file.patterns.swift)|

*filter.cpp=$(filter.cpp)
*filter.java=$(filter.java)
*filter.javascript=$(filter.js)
*filter.idl=$(filter.idl)

lexer.$(file.patterns.java)=cpp
lexer.$(file.patterns.cpp)=cpp
lexer.$(file.patterns.rc)=cpp
lexer.$(file.patterns.idl)=cpp
lexer.$(file.patterns.cs)=cpp
lexer.$(file.patterns.js)=cpp
lexer.$(file.patterns.test)=cpp
lexer.$(file.patterns.flash)=cpp
lexer.$(file.patterns.ch)=cpp
lexer.$(file.patterns.vala)=cpp
lexer.$(file.patterns.go)=cpp
lexer.$(file.patterns.pike)=cpp
lexer.$(file.patterns.swift)=cpp
lexer.$(file.patterns.meson)=cpp
lexer.$(file.patterns.objc)=cpp

name.$(file.patterns.java)=java
name.$(file.patterns.cpp)=c
name.$(file.patterns.rc)=c
name.$(file.patterns.idl)=idl
name.$(file.patterns.cs)=csharp
name.$(file.patterns.js)=javascript
name.$(file.patterns.test)=silktest
name.$(file.patterns.flash)=flash
name.$(file.patterns.ch)=ch
name.$(file.patterns.vala)=vala
name.$(file.patterns.go)=go
name.$(file.patterns.pike)=pike
name.$(file.patterns.swift)=swift
name.$(file.patterns.objc)=objc
name.$(file.patterns.meson)=meson

*language.c=C/C++|c||
*language.csharp=C#|cs||
*language.java=Java|java||
*language.javascript=JavaScript|js||
*language.idl=IDL|idl||
*language.silktest=SilkTest|pln||
*language.flash=Flash|asc||
*language.ch=Ch|ch||
*language.go=Go|go||
*language.pike=Pike|pike||
*language.swift=Swift|swift||
*language.vala=Vala|vala||
*language.objc=Objective-C|mm||
*language.meson=Meson|meson_build||

keywordclass.cpp=alignas alignof and and_eq asm audit auto axiom bitand bitor bool break \
case catch char char8_t char16_t char32_t class compl concept \
const consteval constexpr const_cast continue co_await co_return co_yield \
decltype default delete do double dynamic_cast else enum explicit export extern false final float for \
friend goto if import inline int long module mutable namespace new noexcept not not_eq nullptr \
operator or or_eq override private protected public \
register reinterpret_cast requires return \
short signed sizeof static static_assert static_cast struct switch \
template this thread_local throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while xor xor_eq

directives.objective.c=\
@class @defs @protocol @required @optional @end \
@interface @public @package @protected @private @property \
@implementation @synthesize @dynamic \
@throw @try @catch @finally \
@synchronized @autoreleasepool \
@selector @encode \
@compatibility_alias

keywords.$(file.patterns.cpp)=$(keywordclass.cpp)
keywords.$(file.patterns.objc)=$(keywordclass.cpp) $(directives.objective.c)

file.patterns.doxygen.langs=$(file.patterns.cpp);$(file.patterns.java)
keywordclass.doxygen=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param param[in] param[out] \
post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw throws todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }
keywords3.$(file.patterns.doxygen.langs)=$(keywordclass.doxygen)


word.chars.cxx=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.cpp)=$(word.chars.cxx)
calltip.cpp.word.characters=$(chars.alpha)$(chars.numeric)_
comment.block.cpp=//~
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */


file.patterns.c.except.cpp=$(file.patterns.cs);$(file.patterns.idl);*.java;$(file.patterns.flash);$(file.patterns.ch)
statement.indent.$(file.patterns.c.except.cpp)=5 case default do else for if while
statement.indent.$(file.patterns.cpp)=5 case default do else for if private protected public while
statement.end.$(file.patterns.c.like)=10 ;
statement.lookback.$(file.patterns.c.like)=20
block.start.$(file.patterns.c.like)=10 {
block.end.$(file.patterns.c.like)=10 }


preprocessor.symbol.$(file.patterns.cpp)=#
preprocessor.start.$(file.patterns.cpp)=if ifdef ifndef
preprocessor.middle.$(file.patterns.cpp)=else elif
preprocessor.end.$(file.patterns.cpp)=endif

preprocessor.symbol.$(file.patterns.cs)=#
preprocessor.start.$(file.patterns.cs)=if region
preprocessor.middle.$(file.patterns.cs)=else elif
preprocessor.end.$(file.patterns.cs)=endif endregion

keywordclass.ch=\
auto array bool break case char class complex ComplexInf ComplexNaN \
const continue default delete \
do double else enum export extern float for foreach goto if Inf inline int \
long namespace NaN new NULL private public register restrict return short \
signed sizeof static string_t struct switch this typedef union unsigned \
using void volatile wchar_t while __declspec
keywords.$(file.patterns.ch)=$(keywordclass.ch)
word.chars.ch=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ch)=$(word.chars.cxx)
comment.block.ch=//~
comment.stream.start.ch=/*
comment.stream.end.ch=*/
comment.box.start.ch=/*
comment.box.middle.ch= *
comment.box.end.ch= */
preprocessor.symbol.$(file.patterns.ch)=#
preprocessor.start.$(file.patterns.ch)=if ifdef ifndef
preprocessor.middle.$(file.patterns.ch)=else elif
preprocessor.end.$(file.patterns.ch)=endif

keywordclass.cs=abstract as ascending base bool break by byte case catch char checked \
class const continue decimal default delegate descending do double else enum \
equals event explicit extern false finally fixed float for foreach from goto group if \
implicit in int interface internal into is join lock let long namespace new null \
object on operator orderby out override params private protected public \
readonly ref return sbyte sealed select short sizeof stackalloc static \
string struct switch this throw true try typeof uint ulong \
unchecked unsafe ushort using var virtual void volatile where while
keywords.$(file.patterns.cs)=$(keywordclass.cs)
word.characters.$(file.patterns.cs)=$(word.chars.cxx)

keywordclass.go=\
bool byte break case chan complex64 complex128 const continue defer default  \
else  for func go goto fallthrough false float32 float64 if import int interface int8 int16 int32 int64 \
len map nil package range return select string struct switch true type \
uint uintptr uint8 uint16 uint32 uint64  var
keywords.$(file.patterns.go)=$(keywordclass.go)

keywordclass.rc=\
ACCELERATORS ALT AUTO3STATE AUTOCHECKBOX AUTORADIOBUTTON \
BEGIN BITMAP BLOCK BUTTON CAPTION CHARACTERISTICS CHECKBOX CLASS \
COMBOBOX CONTROL CTEXT CURSOR DEFPUSHBUTTON DIALOG DIALOGEX DISCARDABLE \
EDITTEXT END EXSTYLE FONT GROUPBOX ICON LANGUAGE LISTBOX LTEXT \
MENU MENUEX MENUITEM MESSAGETABLE POPUP \
PUSHBUTTON RADIOBUTTON RCDATA RTEXT SCROLLBAR SEPARATOR SHIFT STATE3 \
STRINGTABLE STYLE TEXTINCLUDE VALUE VERSION VERSIONINFO VIRTKEY
keywords.$(file.patterns.rc)=$(keywordclass.rc)

keywordclass.idl=\
aggregatable allocate appobject arrays async async_uuid \
auto_handle \
bindable boolean broadcast byte byte_count \
call_as callback char coclass code comm_status \
const context_handle context_handle_noserialize \
context_handle_serialize control cpp_quote custom \
decode default defaultbind defaultcollelem \
defaultvalue defaultvtable dispinterface displaybind dllname \
double dual \
enable_allocate encode endpoint entry enum error_status_t \
explicit_handle \
fault_status first_is float \
handle_t heap helpcontext helpfile helpstring \
helpstringcontext helpstringdll hidden hyper \
id idempotent ignore iid_as iid_is immediatebind implicit_handle \
import importlib in include in_line int __int64 __int3264 interface \
last_is lcid length_is library licensed local long \
max_is maybe message methods midl_pragma \
midl_user_allocate midl_user_free min_is module ms_union \
ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \
ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \
ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \
ncalrpc nocode nonbrowsable noncreatable nonextensible notify \
object odl oleautomation optimize optional out out_of_line \
pipe pointer_default pragma properties propget propput propputref \
ptr public \
range readonly ref represent_as requestedit restricted retval \
shape short signed size_is small source strict_context_handle \
string struct switch switch_is switch_type \
transmit_as typedef \
uidefault union unique unsigned user_marshal usesgetlasterror uuid \
v1_enum vararg version void wchar_t wire_marshal

keywordclass.msidl=handle
keywordclass.xpidl=attribute native noscript scriptable shared wstring inout
keywords.$(file.patterns.idl)=$(keywordclass.idl) $(keywordclass.xpidl)

keywordclass.java=abstract assert boolean break byte case catch char class \
const continue default do double else enum extends final finally float for \
goto if implements import instanceof int interface long \
native new package private protected public \
return short static strictfp super switch synchronized this throw throws \
transient try var void volatile while
keywords.$(file.patterns.java)=$(keywordclass.java)

keywordclass.javascript=abstract boolean break byte case catch char class \
const continue debugger default delete do double else enum export extends \
final finally float for function goto if implements import in instanceof \
int interface long native new package private protected public \
return short static super switch synchronized this throw throws \
transient try typeof var void volatile while with
keywords.$(file.patterns.js)=$(keywordclass.javascript)

keywordclass.flash=add and break case catch class continue default delete do \
dynamic else eq extends false finally for function ge get gt if implements import in \
instanceof interface intrinsic le lt ne new not null or private public return \
set static super switch this throw true try typeof undefined var void while with

keywordclass2.flash=Array Arguments Accessibility Boolean Button Camera Color \
ContextMenu ContextMenuItem Date Error Function Key LoadVars LocalConnection Math \
Microphone Mouse MovieClip MovieClipLoader NetConnection NetStream Number Object \
PrintJob Selection SharedObject Sound Stage String StyleSheet System TextField \
TextFormat TextSnapshot Video Void XML XMLNode XMLSocket \
_accProps _focusrect _global _highquality _parent _quality _root _soundbuftime \
arguments asfunction call capabilities chr clearInterval duplicateMovieClip \
escape eval fscommand getProperty getTimer getURL getVersion gotoAndPlay gotoAndStop \
ifFrameLoaded Infinity -Infinity int isFinite isNaN length loadMovie loadMovieNum \
loadVariables loadVariablesNum maxscroll mbchr mblength mbord mbsubstring MMExecute \
NaN newline nextFrame nextScene on onClipEvent onUpdate ord parseFloat parseInt play \
prevFrame prevScene print printAsBitmap printAsBitmapNum printNum random removeMovieClip \
scroll set setInterval setProperty startDrag stop stopAllSounds stopDrag substring \
targetPath tellTarget toggleHighQuality trace unescape unloadMovie unLoadMovieNum updateAfterEvent

keywords.$(file.patterns.flash)=$(keywordclass.flash)
keywords2.$(file.patterns.flash)=$(keywordclass2.flash)

keywordclass.vala=if else switch case default break continue return yield for foreach in \
do while try catch finally throw

keywordclass2.vala=namespace interface class struct enum delegate signal errordomain \
construct get set value base const static var dynamic weak unowned virtual abstract \
override public protected private extern throws requires ensures yields out ref lock \
using true false null delete generic new this typeof sizeof as owned int string char bool

keywords.$(file.patterns.vala)=$(keywordclass.vala)
keywords2.$(file.patterns.vala)=$(keywordclass2.vala)

keywordclass.pike=constant enum if do for while else foreach case switch break continue \
return typeof catch class lambda import inherit static void int string float mixed object \
function program array mapping multiset
keywords.$(file.patterns.pike)=$(keywordclass.pike)

keywordclass.swift.declarations=class deinit enum extension func import init \
internal let operator private protocol public static struct subscript typealias var
keywordclass.swift.statements=break case continue default do else fallthrough \
for if in return switch where while
keywordclass.swift.expressions=as dynamicType false is nil self Self super \
true __COLUMN__ __FILE__ __FUNCTION__ __LINE__
keywordclass.swift.contextual=associativity convenience dynamic didSet final get \
infix inout lazy left mutating none nonmutating optional override postfix \
precedence prefix Protocol required right set Type unowned weak willSet

keywords.$(file.patterns.swift)=$(keywordclass.swift.declarations) \
$(keywordclass.swift.statements) $(keywordclass.swift.expressions) \
$(keywordclass.swift.contextual)

keywords.$(file.patterns.meson)=if else elif endif
keywords2.$(file.patterns.meson)=import meson project \
executable static_library shared_library dependencies \
include_directories get_option get_compiler get_id compile_resources \
cpp_args link_args override_options name_prefix link_with






style.cpp.32=$(font.base)
style.cpp.0=fore:#808080
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.4=$(colour.number)
style.cpp.5=$(colour.keyword),bold
style.cpp.6=$(colour.string)
style.cpp.7=$(colour.char)
style.cpp.8=fore:#804080
style.cpp.9=$(colour.preproc)
style.cpp.10=$(colour.operator),bold
style.cpp.11=
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.16=fore:#B00040
style.cpp.17=fore:#3060A0,$(font.code.comment.doc)
style.cpp.18=fore:#804020,$(font.code.comment.doc)
style.cpp.19=fore:#DD9900
style.cpp.20=$(colour.string),back:#FFF3FF,eolfilled
style.cpp.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
style.cpp.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled
style.cpp.23=fore:#659900
style.cpp.24=$(colour.code.comment.doc)
style.cpp.25=fore:#C06000
style.cpp.26=fore:#BE07FF,$(font.code.comment.line)
style.cpp.27=$(colour.string)


style.cpp.64=fore:#C0C0C0
style.cpp.65=$(style.cpp.1),fore:#90B090
style.cpp.66=$(style.cpp.2),fore:#90B090
style.cpp.67=$(style.cpp.3),fore:#D0D0D0
style.cpp.68=$(style.cpp.4),fore:#90B0B0
style.cpp.69=$(style.cpp.5),fore:#9090B0
style.cpp.70=$(style.cpp.6),fore:#B090B0
style.cpp.71=$(style.cpp.7),fore:#B090B0
style.cpp.72=$(style.cpp.8),fore:#C0C0C0
style.cpp.73=$(style.cpp.9),fore:#B0B090
style.cpp.74=$(style.cpp.10),fore:#B0B0B0
style.cpp.75=$(style.cpp.11),fore:#B0B0B0
style.cpp.76=$(style.cpp.12),fore:#000000
style.cpp.77=$(style.cpp.13),fore:#90B090
style.cpp.78=$(style.cpp.14),fore:#7FAF7F
style.cpp.79=$(style.cpp.15),fore:#C0C0C0
style.cpp.80=$(style.cpp.16),fore:#C0C0C0
style.cpp.81=$(style.cpp.17),fore:#C0C0C0
style.cpp.82=$(style.cpp.18),fore:#C0C0C0
style.cpp.84=$(style.cpp.20),fore:#B090B0
style.cpp.85=$(style.cpp.21),fore:#90B090
style.cpp.86=$(style.cpp.22),fore:#90B090
style.cpp.87=$(style.cpp.23),fore:#A0C090
style.cpp.88=$(style.cpp.23),fore:#C0C0C0
style.cpp.89=fore:#D7A090
style.cpp.90=fore:#C3A1CF,$(font.code.comment.line)

braces.cpp.style=10


module csound

file.patterns.csound=*.orc;*.sco;*.csd
filter.csound=Csound (orc sco csd)|$(file.patterns.csound)|
*filter.csound=$(filter.csound)

lexer.$(file.patterns.csound)=csound
name.$(file.patterns.csound)=csound

*language.csound=Csound|orc||



csound_opcodes=\
	a i db in or zr Add Dec Div Inc Mul Sub abs and cos dam dec div exp \
	fin fof fog inh ino inq ins int inx inz lfo log mac mod mul not out \
	pan pow rms rnd shl sin sqr sub sum tab tan tb0 tb1 tb2 tb3 tb4 tb5 \
	tb6 tb7 tb8 tb9 urd vco xin xor zar zaw zir ziw zkr zkw adsr babo \
	buzz cent clip comb cosh diff divz fini fink fmb3 fof2 fold fout \
	frac ftsr gain goto in32 inch init line maca moog mute nrpn outc \
	outh outo outq outs outx outz peak port pset pvoc rand seed sinh \
	sqrt stix tabw tanh tb10 tb11 tb12 tb13 tb14 tb15 tone vadd vco2 \
	vdiv vexp vibr vmap vmul vpow wrap xout xyin zacl zarg zawm ziwm \
	zkcl zkwm FLbox FLjoy FLrun adsyn ampdb atone birnd bqrez butbp \
	butbr buthp butlp clear ctrl7 dbamp dconv delay dumpk endin endop \
	event expon fouti foutk ftgen ftlen gauss gbuzz grain guiro igoto \
	ihold instr integ kgoto limit linen log10 loopg loopl lpf18 madsr \
	max_k metro noise nsamp oscil out32 outch outic outkc outq1 outq2 \
	outq3 outq4 outs1 outs2 pareq pitch pluck portk print pvadd randh \
	randi rbjeq readk reson rezzy rnd31 scans scanu sense space tab_i \
	table tbvcf tempo timek times tival tonek tonex vaddv vbap4 vbap8 \
	vbapz vcomb vcopy vdecr vdivv veloc vexpv vibes vincr vmult voice \
	vport vpowv vpvoc vsubv vwrap wgbow xadsr zamod zkmod FLhide FLkeyb \
	FLknob FLpack FLshow FLtabs FLtext active adsynt alpass areson \
	atonek atonex bamboo bbcutm bbcuts biquad cabasa cauchy cggoto \
	cigoto ckgoto clfilt cngoto convle cosinv cpsoct cpspch cpstun \
	cpuprc cross2 crunch ctrl14 ctrl21 delay1 delayk delayr delayw \
	deltap denorm diskin dumpk2 dumpk3 dumpk4 envlpx expseg filesr \
	fiopen fmbell follow foscil foutir ftlen2 ftload ftmorf ftsave \
	grain2 grain3 harmon hrtfer initc7 interp jitter linenr lineto \
	linseg locsig loopge loople lorenz loscil lowres lpread lpslot \
	mandel mandol mclock mdelay midic7 midiin midion mirror moscil \
	mpulse mrtmsg mxadsr nlfilt noteon notnum ntrpol octave octcps \
	octpch opcode oscbnk oscil1 oscil3 oscili osciln oscils oscilx \
	outiat outipb outipc outkat outkpb outkpc pchoct phasor planet \
	poscil printk prints pvread pvsftr pvsftw random readk2 readk3 \
	readk4 reinit resonk resonr resonx resony resonz reverb rigoto \
	s16b14 s32b14 sekere sfload sfplay shaker sininv spat3d spdist \
	spsend strset table3 tablei tablew tabw_i taninv tigoto timout \
	turnon upsamp vbap16 vcella vco2ft vdel_k vdelay vlimit vmultv \
	vrandh vrandi wgclar xscans xscanu FLcolor FLcount FLgroup FLlabel \
	FLpanel FLvalue aftouch ampdbfs ampmidi aresonk balance bexprnd \
	biquada changed clockon cps2pch cpsmidi cpstmid cpstuni cpsxpch \
	dbfsamp dcblock deltap3 deltapi deltapn deltapx dispfft display \
	envlpxr exprand expsega expsegr filelen filter2 flanger fmmetal \
	fmrhode fmvoice follow2 foscili fprints ftchnls ftloadk ftlptim \
	ftsavek gogobel granule hilbert initc14 initc21 invalue jitter2 \
	jspline linrand linsegr locsend logbtwo loopseg loscil3 lowresx \
	lphasor lposcil lpreson lpshold marimba massign midic14 midic21 \
	midichn midion2 midiout moogvcf noteoff nreverb nstrnum octmidi \
	oscil1i outic14 outipat outkc14 outkpat pcauchy pchbend pchmidi \
	phaser1 phaser2 pinkish poisson polyaft poscil3 printk2 printks \
	product pvcross pvsanal pvsinfo pvsynth randomh randomi release \
	repluck reverb2 rspline rtclock seqtime sfilist sfinstr sfplay3 \
	sfplaym sfplist slider8 sndwarp soundin spat3di spat3dt specsum \
	streson tableiw tablekt tableng tablera tablewa taninv2 tempest \
	tlineto transeg trigger trigseq trirand turnoff unirand valpass \
	vco2ift vdelay3 vdelayk vdelayx vexpseg vibrato vlinseg vlowres \
	vmirror waveset weibull wgbrass wgflute wgpluck wguide1 wguide2 \
	xtratim zakinit FLbutton FLcolor2 FLprintk FLroller FLscroll \
	FLsetBox FLsetVal FLslider FLupdate betarand butterbp butterbr \
	butterhp butterlp chanctrl clockoff convolve cpsmidib ctrlinit \
	cuserrnd deltapxw distort1 downsamp duserrnd filepeak fmpercfl \
	fmwurlie fprintks hsboscil lowpass2 lpfreson lpinterp lposcil3 \
	maxalloc midictrl multitap nestedap octmidib oscilikt outvalue \
	pchmidib powoftwo prealloc pvinterp pvsadsyn pvscross pvsfread \
	pvsmaska rireturn samphold schedule semitone sensekey setksmps \
	sfinstr3 sfinstrm sfplay3m sfpreset slider16 slider32 slider64 \
	slider8f soundout specaddm specdiff specdisp specfilt spechist \
	specptrk specscal spectrum sprintks subinstr svfilter tablegpw \
	tableikt tablemix tableseg tablewkt tablexkt tb0_init tb1_init \
	tb2_init tb3_init tb4_init tb5_init tb6_init tb7_init tb8_init \
	tb9_init tempoval vco2init vdelayxq vdelayxs vdelayxw vecdelay \
	wgpluck2 wterrain xscanmap zfilter2 FLbutBank FLgetsnap FLpackEnd \
	FLprintk2 FLsetFont FLsetSize FLsetText FLsetsnap FLslidBnk \
	FLtabsEnd dripwater eventname ktableseg noteondur osciliktp \
	oscilikts pgmassign phasorbnk pitchamdf pvbufread readclock \
	sandpaper scantable schedwhen sfinstr3m sfpassign slider16f \
	slider32f slider64f sndwarpst soundoutc soundouts tablecopy \
	tableigpw tableimix tablexseg tb10_init tb11_init tb12_init \
	tb13_init tb14_init tb15_init timeinstk timeinsts vbap4move \
	vbap8move vbapzmove vdelayxwq vdelayxws xscansmap FLgroupEnd \
	FLloadsnap FLpack_end FLpanelEnd FLsavesnap FLsetAlign FLsetColor \
	FLsetVal_i FLtabs_end filenchnls noteondur2 scanhammer schedkwhen \
	tableicopy tambourine vbap16move vbaplsinit wgbowedbar FLgroup_end \
	FLpanel_end FLscrollEnd FLsetColor2 mididefault midinoteoff \
	sleighbells FLscroll_end subinstrinit FLsetPosition FLsetTextSize \
	FLsetTextType midinoteoncps midinoteonkey midinoteonoct \
	midinoteonpch midipitchbend schedwhenname FLsetTextColor \
	schedkwhenname midicontrolchange midiprogramchange \
	midipolyaftertouch midichannelaftertouch

csound_header_stmts=sr kr ar ksmps nchnls

csound_other_keywords=

keywords.$(file.patterns.csound)=$(csound_opcodes)
keywords2.$(file.patterns.csound)=$(csound_header_stmts)
keywords3.$(file.patterns.csound)=$(csound_other_keywords)

comment.block.csound=;


style.csound.0=$(font.monospace)
style.csound.1=$(font.monospace),fore:#669999
style.csound.2=$(font.monospace),fore:#339933
style.csound.3=$(font.monospace)
style.csound.4=$(font.monospace)
style.csound.5=
style.csound.6=$(font.monospace),fore:#0000FF,bold
style.csound.7=$(font.monospace),fore:#CC2200
style.csound.8=$(font.monospace)
style.csound.9=$(font.monospace)
style.csound.10=$(font.monospace),fore:#660099,bold
style.csound.11=$(font.monospace),fore:#660099
style.csound.12=$(font.monospace),fore:#660099
style.csound.13=$(font.monospace),fore:#660099
style.csound.14=$(font.monospace),fore:#660099
style.csound.15=$(font.monospace),fore:#000000,back:#E0C0E0,eolfilled

module css

filter.css=CSS (css)|*.css|
*filter.css=$(filter.css)
lexer.*.css=css
name.*.css=css
*language.css=CSS|css||

indent.size.*.css=4
tab.size.*.css=4
use.tabs.*.css=1

keywordclass.css1=\
color background-color background-image background-repeat background-attachment background-position background \
font-family font-style font-variant font-weight font-size font \
word-spacing letter-spacing text-decoration vertical-align text-transform text-align text-indent line-height \
margin-top margin-right margin-bottom margin-left margin \
padding-top padding-right padding-bottom padding-left padding \
border-top-width border-right-width border-bottom-width border-left-width border-width \
border-top border-right border-bottom border-left border \
border-color border-style width height float clear \
display white-space list-style-type list-style-image list-style-position list-style

keywordclass.values=\
auto none normal italic oblique small-caps bold bolder lighter \
xx-small x-small small medium large x-large xx-large larger smaller \
transparent repeat repeat-x repeat-y no-repeat scroll fixed \
top bottom left center right justify both \
underline overline line-through blink \
baseline sub super text-top middle text-bottom \
capitalize uppercase lowercase thin medium thick \
dotted dashed solid double groove ridge inset outset \
block inline list-item pre no-wrap inside outside \
disc circle square decimal lower-roman upper-roman lower-alpha upper-alpha \
aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal white yellow




keywordclass.css2=\
border-top-color border-right-color border-bottom-color border-left-color border-color \
border-top-style border-right-style border-bottom-style border-left-style border-style \
top right bottom left position z-index direction unicode-bidi \
min-width max-width min-height max-height overflow clip visibility content quotes \
counter-reset counter-increment marker-offset \
size marks page-break-before page-break-after page-break-inside page orphans widows \
font-stretch font-size-adjust unicode-range units-per-em src \
panose-1 stemv stemh slope cap-height x-height ascent descent widths bbox definition-src \
baseline centerline mathline topline text-shadow \
caption-side table-layout border-collapse border-spacing empty-cells speak-header \
cursor outline outline-width outline-style outline-color \
volume speak pause-before pause-after pause cue-before cue-after cue \
play-during azimuth elevation speech-rate voice-family pitch pitch-range stress richness \
speak-punctuation speak-numeral

keywordclass.values2=\
inherit \
run-in compact marker table inline-table table-row-group table-header-group table-footer-group \
table-row table-column-group table-column table-cell table-caption \
static relative absolute fixed ltr rtl embed bidi-override \
visible hidden scroll collapse open-quote close-quote no-open-quote no-close-quote \
decimal-leading-zero lower-greek lower-latin upper-latin hebrew armenian georgian \
cjk-ideographic hiragana katakana hiragana-iroha katakana-iroha \
landscape portrait crop cross always avoid \
wider narrower ultra-condensed extra-condensed condensed semi-condensed \
semi-expanded expanded extra-expanded ultra-expanded \
caption icon menu message-box small-caption status-bar \
separate show hide once crosshair default pointer move text wait help \
e-resize ne-resize nw-resize n-resize se-resize sw-resize s-resize w-resize \
ActiveBorder ActiveCaption AppWorkspace Background ButtonFace ButtonHighlight ButtonShadow \
InactiveCaptionText ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder \
InactiveCaption InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow \
ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText \
silent x-soft soft medium loud x-loud spell-out mix \
left-side far-left center-left center-right far-right right-side behind leftwards rightwards \
below level above higher lower x-slow slow medium fast x-fast faster slower \
male female child x-low low high x-high code digits continuous

keywordclass.vendor.prefixes=^-moz- ^-webkit- ^-o- ^-ms-

keywordclass.css3=background-size \
border-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius border-top-left-radius \
box-shadow \
columns column-width column-count column-rule column-gap column-rule-color column-rule-style column-rule-width \
resize opacity word-wrap

keywordclass.pseudoclass.css1=link active visited
keywordclass.pseudoclass.css2=first-child focus hover lang left right first
keywordclass.pseudoclass.css3=empty enabled disabled checked not root target \
only-child last-child nth-child nth-last-child \
first-of-type last-of-type nth-of-type nth-last-of-type only-of-type \
valid invalid required optional
keywordclass.pseudoclass.other=indeterminate default

keywordclass.pseudoelement.css=first-letter first-line before after
keywordclass.pseudoelement.css3=selection




keywords.*.css=$(keywordclass.css1)
keywords2.*.css=$(keywordclass.pseudoclass.css1) $(keywordclass.pseudoclass.css2) \
    $(keywordclass.pseudoclass.css3) $(keywordclass.pseudoelement.css)
keywords3.*.css=$(keywordclass.css2)
keywords4.*.css=$(keywordclass.css3)
keywords5.*.css=$(keywordclass.pseudoelement.css) $(keywordclass.pseudoelement.css3)
keywords6.*.css=$(keywordclass.vendor.prefixes) filter
keywords7.*.css=$(keywordclass.pseudoclass.other) $(keywordclass.vendor.prefixes)
keywords8.*.css=$(keywordclass.pseudoelement.other) $(keywordclass.vendor.prefixes)

word.characters.*.css=$(chars.alpha)$(chars.numeric)-
comment.stream.start.css=/*
comment.stream.end.css=*/

style.css.32=$(font.code.base)
style.css.0=fore:#FF0080
style.css.1=$(colour.keyword),bold
style.css.2=
style.css.3=fore:#800000
style.css.4=$(colour.error)
style.css.5=$(colour.operator)
style.css.6=fore:#0040E0
style.css.7=fore:#FF0000
style.css.8=$(colour.string)
style.css.9=$(colour.code.comment.box),$(font.code.comment.box)
style.css.10=$(colour.number),italics
style.css.11=fore:#FF8000,bold
style.css.12=$(colour.preproc)
style.css.13=$(colour.string)
style.css.14=$(colour.string)
style.css.15=fore:#0040E0
style.css.16=fore:#800000
style.css.17=fore:#00A0E0
style.css.18=fore:#C80000
style.css.19=fore:#7F7F00
style.css.20=fore:#7F7F00
style.css.21=fore:#7F7F00
style.css.22=$(colour.preproc),bold
style.css.23=fore:#DD9900

block.start.*.css=5 {
block.end.*.css=5 }

module d

file.patterns.d=*.d
filter.d=D (d)|$(file.patterns.d)|
*filter.d=$(filter.d)
lexer.$(file.patterns.d)=d
name.$(file.patterns.d)=d
*language.d=D|d||

word.chars.d=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.d)=$(word.chars.d)
calltip.d.word.characters=$(chars.alpha)$(chars.numeric)_


comment.block.d=//~
comment.stream.start.d=/+
comment.stream.end.d=+/
comment.box.start.d=/*
comment.box.middle.d= *
comment.box.end.d= */

statement.indent.$(file.patterns.d)=6 case catch class debug default do else \
finally for foreach foreach_reverse if private protected public scope struct \
try union while with
statement.end.$(file.patterns.d)=13 ;
statement.lookback.$(file.patterns.d)=20
block.start.$(file.patterns.d)=13 {
block.end.$(file.patterns.d)=13 }

keywords.$(file.patterns.d)=abstract alias align asm assert auto \
 body bool break byte \
 case cast catch cdouble cent cfloat char class const continue creal \
 dchar debug default delegate delete deprecated do double \
 else enum export extern \
 false final finally float for foreach foreach_reverse function \
 goto \
 idouble if ifloat import in inout int interface invariant ireal is \
 lazy long \
 mixin module \
 new null \
 out override \
 package pragma private protected public \
 real return \
 scope short static struct super switch synchronized \
 template this throw true try typedef typeid typeof \
 ubyte ucent uint ulong union unittest ushort \
 version void volatile \
 wchar while with


keywords3.$(file.patterns.d)=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }





style.d.32=$(font.base)
style.d.0=fore:#808080
style.d.1=$(colour.code.comment.box),$(font.code.comment.box)
style.d.2=$(colour.code.comment.line),$(font.code.comment.line)
style.d.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.d.4=$(colour.code.comment.nested),$(font.code.comment.nested)
style.d.5=$(colour.number)
style.d.6=$(colour.keyword),bold
style.d.7=$(colour.keyword),bold
style.d.8=$(colour.keyword),bold
style.d.9=$(colour.keyword),bold
style.d.10=$(colour.string)
style.d.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.d.12=$(colour.char)
style.d.13=$(colour.operator),bold
style.d.14=
style.d.15=$(colour.code.comment.doc),$(font.code.comment.doc)
style.d.16=fore:#3060A0,$(font.code.comment.doc)
style.d.17=fore:#804020,$(font.code.comment.doc)
style.d.18=fore:#DD9900
style.d.19=fore:#DD9900
style.d.20=fore:#DD9900
style.d.21=fore:#DD9900
style.d.22=fore:#DD9900
braces.d.style=13


module ecl
file.patterns.ecl=*.ecl;*.eclattr;*.hql
filter.ecl=ECL (ecl eclattr hql)|$(file.patterns.ecl)|
*filter.ecl=$(filter.ecl)
lexer.$(file.patterns.ecl)=ecl
name.$(file.patterns.ecl)=ecl

*language.ecl=ECL|ecl||

word.chars.ecl=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ecl)=$(word.chars.ecl)
calltip.ecl.word.characters=$(chars.alpha)$(chars.numeric)_

comment.block.ecl=//
comment.stream.start.ecl=/+
comment.stream.end.ecl=+/
comment.box.start.ecl=/*
comment.box.middle.ecl= *
comment.box.end.ecl= */

statement.indent.$(file.patterns.ecl)=record module
statement.end.$(file.patterns.ecl)=13 ;
statement.lookback.$(file.patterns.ecl)=20
block.start.$(file.patterns.ecl)=13 {
block.end.$(file.patterns.ecl)=13 }

style.ecl.0=fore:#00000000
style.ecl.1=fore:#00800000
style.ecl.2=fore:#00800000
style.ecl.3=fore:#00000000
style.ecl.4=fore:#80808000
style.ecl.5=fore:#0000FF00
style.ecl.6=fore:#00000000
style.ecl.7=fore:#80808000
style.ecl.8=fore:#00000000
style.ecl.9=fore:#00408000
style.ecl.10=fore:#00000000
style.ecl.11=fore:#00000000
style.ecl.12=fore:#00000000
style.ecl.13=fore:#00000000
style.ecl.14=fore:#00000000
style.ecl.15=fore:#00000000
style.ecl.16=bold,fore:#00008000
style.ecl.17=bold,fore:#7F7F7F00
style.ecl.18=fore:#FF000000
style.ecl.19=fore:#80000000
style.ecl.20=fore:#80000000
style.ecl.21=fore:#80008000
style.ecl.22=fore:#80008000
style.ecl.23=fore:#7F7F7F00
style.ecl.24=fore:#00000000
style.ecl.25=fore:#00000000
style.ecl.26=fore:#00000000
style.ecl.27=fore:#00000000
style.ecl.32=fore:#00000000,$(font.monospace)
style.ecl.34=bold,fore:#00000000
style.ecl.35=fore:#FF000000
style.ecl.36=fore:#80800000
style.ecl.37=fore:#80000000

keywords.$(file.patterns.ecl)=abs acos ascii asin asstring atan atan2 ave case choose choosen choosesets clustersize cos cosh count cron dataset dedup denormalize distribute distributed distribution ebcdic enth error evaluate event exists exp fetch fromunicode getisvalid global group hash hash32 hash64 hashcrc hashmd5 if index intformat isvalid iterate join keyunicode length limit ln log map matched matchlength matchposition matchtext matchunicode max merge min normalize parse pipe power preload project pull random rank ranked realformat recordof regexfind regexreplace rejected rollup round roundup row rowdiff sample set sin sinh sizeof soapcall sort sorted sqrt sum table tan tanh topn tounicode transfer trim truncate typeof ungroup unicodeorder which workunit xmldecode xmlencode xmltext xmlunicode
keywords2.$(file.patterns.ecl)=apply build buildindex evaluate fail keydiff keypatch loadxml notify output parallel sequential soapcall
keywords3.$(file.patterns.ecl)=__compressed__ all and any as atmost before beginc++ best between case const counter csv descend encrypt end endc++ endmacro except exclusive expire export extend false few first flat full function group header heading hole ifblock import in joined keep keyed last left limit load local locale lookup macro many maxcount maxlength min skew module named nocase( noroot noscan nosort not of only opt or outer overwrite packed partition penalty physicallength pipe quote record relationship repeat return right scan self separator service shared skew skip sql store terminator thor threshold token transform trim true type unicodeorder unsorted validate virtual whole wild within xml xpath
keywords4.$(file.patterns.ecl)=ascii big_endian boolean data decimal ebcdic integer pattern qstring real record rule set of string token udecimal unicode unsigned varstring varunicode
keywords5.$(file.patterns.ecl)=checkpoint deprecated failcode failmessage failure global independent onwarning persist priority recovery stored success wait when
keywords6.$(file.patterns.ecl)=#append #break #declare #demangle #end #for #getdatatype #if #inmodule #loop #mangle #onwarning #option #set #stored #uniquename #workunit integer symbol value text symbol value


module eiffel

filter.eiffel=Eiffel (e)|*.e|

*filter.eiffel=$(filter.eiffel)

file.patterns.eiffel=*.e

*source.patterns.eiffel=$(file.patterns.eiffel);

lexer.$(file.patterns.eiffel)=eiffel
name.$(file.patterns.eiffel)=eiffel

*language.eiffel=Eiffel|e||

keywordclass.eiffel=\
alias all and any as bit boolean \
check class character clone create creation current \
debug deferred div do double \
else elseif end ensure equal expanded export external \
false feature forget from frozen general \
if implies indexing infix inherit inspect integer invariant is \
language like local loop mod name nochange none not \
obsolete old once or platform pointer prefix precursor \
real redefine rename require rescue result retry \
select separate string strip then true undefine unique until \
variant void when xor

keywords.$(file.patterns.eiffel)=$(keywordclass.eiffel)

style.eiffel.0=fore:#808080
style.eiffelkw.0=$(style.eiffel.0)
style.eiffel.1=$(colour.code.comment.line),$(font.code.comment.line)
style.eiffelkw.1=$(style.eiffel.1)
style.eiffel.2=$(colour.number)
style.eiffelkw.2=$(style.eiffel.2)
style.eiffel.3=$(colour.keyword),bold
style.eiffelkw.3=$(style.eiffel.3)
style.eiffel.4=$(colour.string),$(font.monospace)
style.eiffelkw.4=$(style.eiffel.4)
style.eiffel.5=$(colour.char),$(font.monospace)
style.eiffelkw.5=$(style.eiffel.5)
style.eiffel.6=$(colour.operator),bold
style.eiffelkw.6=$(style.eiffel.6)
style.eiffel.7=
style.eiffelkw.7=$(style.eiffel.7)
style.eiffel.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.eiffelkw.8=$(style.eiffel.8)
braces.eiffel.style=6
braces.eiffelkw.style=$(braces.eiffel.style)

statement.indent.$(file.patterns.eiffel)=3 do else elsif rescue if is loop
statement.end.$(file.patterns.eiffel)=10 ;
statement.lookback.$(file.patterns.eiffel)=20
block.start.$(file.patterns.eiffel)=10 check debug deferred do from if inspect once
block.end.$(file.patterns.eiffel)=10 end


module erlang

file.patterns.erlang=*.erl;*.hrl

filter.erlang=Erlang (erl hrl)|$(file.patterns.erlang)|

*filter.erlang=$(filter.erlang)

lexer.$(file.patterns.erlang)=erlang
name.$(file.patterns.erlang)=erlang

*language.erlang=Erlang|erl||

keywords.$(file.patterns.erlang)=after and andalso band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse query receive rem try when xor
keywords2.$(file.patterns.erlang)=erlang: abs adler32 adler32_combine erlang:append_element apply atom_to_binary atom_to_list binary_to_atom binary_to_existing_atom binary_to_list bitstring_to_list binary_to_term bit_size erlang:bump_reductions byte_size erlang:cancel_timer check_process_code concat_binary crc32 crc32_combine date decode_packet delete_module erlang:demonitor disconnect_node erlang:display element erase erlang:error exit float float_to_list erlang:fun_info erlang:fun_to_list erlang:function_exported garbage_collect get erlang:get_cookie get_keys erlang:get_stacktrace group_leader halt erlang:hash hd erlang:hibernate integer_to_list erlang:integer_to_list iolist_to_binary iolist_size is_alive is_atom is_binary is_bitstring is_boolean erlang:is_builtin is_float is_function is_integer is_list is_number is_pid is_port is_process_alive is_record is_reference is_tuple length link list_to_atom list_to_binary list_to_bitstring list_to_existing_atom list_to_float list_to_integer erlang:list_to_integer list_to_pid list_to_tuple load_module erlang:load_nif erlang:loaded erlang:localtime erlang:localtime_to_universaltime make_ref erlang:make_tuple erlang:max erlang:md5 erlang:md5_final erlang:md5_init erlang:md5_update erlang:memory erlang:min module_loaded erlang:monitor monitor_node node nodes now open_port erlang:phash erlang:phash2 pid_to_list port_close port_command erlang:port_command port_connect port_control erlang:port_call erlang:port_info erlang:port_to_list erlang:ports pre_loaded erlang:process_display process_flag process_info processes purge_module put erlang:raise erlang:read_timer erlang:ref_to_list register registered erlang:resume_process round self erlang:send erlang:send_after erlang:send_nosuspend erlang:set_cookie setelement size spawn spawn_link spawn_monitor spawn_opt split_binary erlang:start_timer statistics erlang:suspend_process erlang:system_flag erlang:system_info erlang:system_monitor erlang:system_profile term_to_binary throw time tl erlang:trace erlang:trace_delivered erlang:trace_info erlang:trace_pattern trunc tuple_size tuple_to_list erlang:universaltime erlang:universaltime_to_localtime unlink unregister whereis erlang:yield
keywords3.$(file.patterns.erlang)=-define -else -endif -ifdef -ifndef -include -include_lib -undef
keywords4.$(file.patterns.erlang)=-behavior -behaviour -compile -created -created_by -export -file -import -module -modified -modified_by -record -revision -spec -type -vsn
keywords5.$(file.patterns.erlang)=@author @clear @copyright @deprecated @doc @docfile @end @equiv @headerfile @hidden @private @reference @see @since @spec @throws @title @todo @TODO @type @version
keywords6.$(file.patterns.erlang)=@date @docRoot @link @module @package @section @time @type @version

comment.block.erlang=%~


style.erlang.0=fore:#000000

style.erlang.1=fore:#d00000
style.erlang.14=fore:#3f5fbf
style.erlang.15=fore:#3f5fbf
style.erlang.16=fore:#3f5fbf,bold
style.erlang.17=fore:#3f5fbf,bold,italics

style.erlang.2=fore:#7f0000
style.erlang.3=fore:#007f00
style.erlang.5=fore:#ff901e
style.erlang.9=fore:#007f00
style.erlang.10=fore:#7f007f
style.erlang.19=fore:#7f007f
style.erlang.11=fore:#7f7f00,bold
style.erlang.20=fore:#7f7f00,bold
style.erlang.7=fore:#7f7f00
style.erlang.18=fore:#7f7f00
style.erlang.13=fore:#007f7f
style.erlang.21=fore:#007f7f

style.erlang.4=fore:#00007f,bold
style.erlang.22=fore:#0000ff,bold
style.erlang.8=fore:#00007f
style.erlang.23=fore:#00cccc
style.erlang.24=fore:#007f7f
style.erlang.12=fore:#007f7f
style.erlang.6=fore:#000000
style.erlang.31=back:#FF0000

module escript
ECOMPILEHOME=C:\Daten\Code\CVS Workspace\etheria-pol095\scripts

filter.escript=E-Script (src em)|$(file.patterns.escript)|
*filter.escript=$(filter.escript)

file.patterns.escript=*.src;*.em

lexer.$(file.patterns.escript)=escript
name.$(file.patterns.escript)=escript
escript.case.sensitive=0

*language.escript=E-Script|src||

style.escript.0=$(font.base)
style.escript.1=$(colour.code.comment.box),$(font.code.comment.box)
style.escript.2=$(colour.code.comment.line),$(font.code.comment.line)
style.escript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.escript.4=$(colour.number)
style.escript.5=fore:#FF4000
style.escript.6=fore:#FF8000,$(font.string.literal)
style.escript.7=fore:#FF0000
style.escript.8=
style.escript.9=fore:#0000FF
style.escript.10=fore:#B00040
style.escript.11=fore:#B00040



keywords.$(file.patterns.escript)=\
basic basicio boats \
cfgfile \
file \
http \
npc \
os \
uo util \
accessible \
addmenuitem \
appendconfigfileelem \
applyconstraint \
applydamage \
applyrawdamage \
assignrecttoweatherregion \
append \
baseskilltorawskill \
boatfromitem \
broadcast \
ban \
cdbl \
cint \
cstr \
checklineofsight \
checklosat \
checkskill \
consumemana \
consumereagents \
consumesubstance \
createaccount \
createitematlocation \
createiteminbackpack \
createitemininventory \
createitemincontainer \
createmenu \
createmultiatlocation \
createnpcfromtemplate \
createrootiteminstoragearea \
createstoragearea \
clear_script_profile_counters \
close \
damage \
destroyitem \
destroymulti \
destroyrootiteminstoragearea \
detach \
disableevents \
disconnectclient \
distance \
disable \
enableevents \
enumerateitemsincontainer \
enumerateonlinecharacters \
equipfromtemplate \
equipitem \
eraseglobalproperty \
eraseobjproperty \
enable \
enabled \
erase \
events_waiting \
exists \
findconfigelem \
findobjtypeincontainer \
findrootiteminstoragearea \
findstoragearea \
fclose \
find \
fopen \
fread \
fseek \
ftell \
fwrite \
gamestat \
getamount \
getcommandhelp \
getconfigint \
getconfigintkeys \
getconfigmaxintkey \
getconfigreal \
getconfigstring \
getconfigstringkeys \
getconfigstringarray \
getelemproperty \
getequipmentbylayer \
getglobalproperty \
getharvestdifficulty \
getmapinfo \
getmenuobjtypes \
getobjproperty \
getobjtype \
getobjtypebyname \
getproperty \
getrawskill \
getregionstring \
getskill \
getspelldifficulty \
getstandingheight \
getworldheight \
grantprivilege \
harvestresource \
healdamage \
hex \
islegalmove \
insert \
keys \
listequippeditems \
listghostsnearlocation \
listhostiles \
listitemsatlocation \
listitemsnearlocation \
listitemsnearlocationoftype \
listmobilesinlineofsight \
listmobilesnearlocation \
listmobilesnearlocationex \
listobjectsinbox \
loadtusscpfile \
left \
len \
log_profile \
lower \
makeboundingbox \
move \
moveboat \
moveboatrelative \
movecharactertolocation \
moveitemtocontainer \
moveitemtolocation \
move_offline_mobiles \
openpaperdoll \
open \
pack \
performaction \
playlightningbolteffect \
playmovingeffect \
playmovingeffectxyz \
playobjectcenteredeffect \
playsoundeffect \
playsoundeffectprivate \
playstationaryeffect \
printtextabove \
printtextaboveprivate \
packages \
polcore \
position \
print \
queryparam \
randomdiceroll \
randomint \
rawskilltobaseskill \
readconfigfile \
readgameclock \
releaseitem \
registerforspeechevents \
registeritemwithboat \
requestinput \
reserveitem \
restartscript \
resurrect \
revokeprivilege \
runawayfrom \
runawayfromlocation \
runtoward \
runtowardlocation \
reverse \
run_script_to_completion \
saveworldstate \
selectmenuitem2 \
self \
sendbuywindow \
senddialoggump \
sendevent \
sendopenspecialcontainer \
sendpacket \
sendsellwindow \
sendskillwindow \
sendstringastipwindow \
sendsysmessage \
sendtextentrygump \
setanchor \
setglobalproperty \
setname \
setobjproperty \
setopponent \
setproperty \
setrawskill \
setregionlightlevel \
setregionweatherlevel \
setscriptcontroller \
setwarmode \
shutdown \
speakpowerwords \
splitwords \
startspelleffect \
subtractamount \
systemfindboatbyserial \
systemfindobjectbyserial \
say \
set_critical \
set_debug \
set_priority \
set_priority_divide \
set_script_option \
setcmdlevel \
setdex \
setint \
setlightlevel \
setmaster \
setname \
setpassword \
setstr \
shrink \
size \
sleep \
sleepms \
sort \
spendgold \
squelch \
start_script \
syslog \
system_rpm \
target \
targetcoordinates \
targetmultiplacement \
turnawayfrom \
turnawayfromlocation \
turnboat \
turntoward \
turntowardlocation \
toggle \
unloadconfigfile \
unpack \
unban \
unload_scripts \
upper \
walkawayfrom \
walkawayfromlocation \
walktoward \
walktowardlocation \
wander \
writehtml \
writehtmlraw \
wait_for_event \
movechar_forcelocation \
moveitem_forcelocation \
moveitem_normal \
scriptopt_debug \
scriptopt_no_interrupt \
scriptopt_no_runaway \
te_cancel_disable \
te_cancel_enable \
te_style_disable \
te_style_normal \
te_style_numerical \
tgtopt_check_los \
tgtopt_harmful \
tgtopt_helpful \
tgtopt_neutral \
tgtopt_nocheck_los \
setprop \
getprop


keywords2.$(file.patterns.escript)=\
array \
const \
dictionary \
global \
local \
var \
and \
default \
in \
next not \
or \
return \
to \
include \
use \
enum


keywords3.$(file.patterns.escript)=\
while \
for \
endfor \
function \
program \
endprogram endfunction \
foreach \
case \
else elseif \
if endcase endenum endforeach endif endwhile



module flagship

file.patterns.flagship=*.prg

lexer.$(file.patterns.flagship)=flagship
name.$(file.patterns.flagship)=flagship

*language.flagship=FlagShip|prg||

keywordclass.fs6commands=\
? @ accept access all alternate announce ansi any append as assign autolock average \
begin bell bitmap blank box \
call cancel case century charset checkbox clear close cls color combobox commit \
confirm console constant continue copy count create cursor \
date dbread dbwrite decimals declare default delete deleted delimiters device dir \
directory display do draw \
edit else elseif eject end endcase enddo endif endtext epoch erase error escape eval eventmask \
exact exclusive extended external extra \
field file filter find fixed font for form format from \
get gets global global_extern go goto gotop guialign guicolor guicursor guitransl \
html htmltext \
if image index input intensity \
join \
key keyboard keytransl \
label lines list listbox local locate \
margin memory memvar menu message method multibyte multilocks \
next nfs nfslock nfs_force note \
on openerror order outmode \
pack parameters path pixel pop printer private prompt public push pushbutton \
quit \
radiobutton radiogroup read recall refresh reindex relation release rename replace report request restore \
richtext rowadapt rowalign run \
save say scoreboard scrcompress screen seek select sequence set setenhanced setstandard setunselected \
skip softseek sort source static store struct structure sum \
tag tbrowse text to total type typeahead \
unique unlock update use \
wait while with wrap \
xml zap zerobyteout

keywordclass.fs6libfunc=\
_displarr _displarrerr _displarrstd _displobj _displobjerr _displobjstd \
aadd abs achoice aclone acopy adel adir aelemtype aeval afields afill ains alert alias alltrim altd ansi2oem \
appiomode appmdimode appobject array asc ascan asize asort at atail atanychar autoxlock \
between bin2i bin2l bin2w binand binlshift binor binrshift binxor bof break browse \
cdow chr chr2screen cmonth col col2pixel color2rgb colorselect colvisible consoleopen consolesize crc32 ctod curdir \
date datevalid day dbappend dbclearfilter dbclearindex dbclearrelation dbcloseall dbclosearea dbcommit dbcommitall \
dbcreate dbcreateindex dbdelete dbedit dbeval dbf dbfilter dbfinfo dbflock dbfused dbgetlocate dbgobottom dbgoto \
dbgotop dbobject dbrecall dbreindex dbrelation dbrlock dbrlocklist dbrselect dbrunlock dbseek dbselectarea \
dbsetdriver dbsetfilter dbsetindex dbsetlocate dbsetorder dbsetrelation dbskip dbstruct dbunlock dbunlockall \
dbusearea default deleted descend devout devoutpict devpos directory diskspace dispbegin dispbox dispcount \
dispend dispout doserror doserror2str dow drawline dtoc dtos \
empty eof errorblock errorlevel eval execname execpidnum exp \
fattrib fclose fcount fcreate ferase ferror ferror2str fieldblock fielddeci fieldget fieldgetarr fieldlen fieldname \
fieldpos fieldput fieldputarr fieldtype fieldwblock file findexefile fklabel fkmax flagship_dir flock flockf fopen \
found fread freadstdin freadstr freadtxt frename fs_set fseek fwrite \
getactive getalign getapplykey getdosetkey getenv getenvarr getfunction getpostvalid getprevalid getreader guidrawline \
hardcr header hex2num \
i2bin iif indexcheck indexcount indexdbf indexext indexkey indexnames indexord infobox inkey inkey2read inkey2str inkeytrap \
instdchar instdstring int int2num isalpha isbegseq iscolor isdbexcl isdbflock isdbmultip isdbmultiple isdbmultipleopen \
isdbrlock isdigit isfunction isguimode islower isobjclass isobjequiv isobjproperty isprinter isupper \
l2bin lastkey lastrec left len listbox lock log lower ltrim lupdate \
macroeval macrosubst max max_col max_row maxcol maxrow mcol mdblck mdiclose mdiopen mdiselect memocode memodecode \
memoedit memoencode memoline memoread memory memotran memowrit memvarblock mhide min minmax mlcount mlctopos mleftdown \
mlpos mod month mpostolc mpresent mreststate mrightdown mrow msavestate msetcursor msetpos mshow mstate \
neterr netname nextkey num2hex num2int \
objclone oem2ansi onkey ordbagext ordbagname ordcond ordcondset ordcreate orddescend orddestroy ordfor ordisinique \
ordkey ordkeyadd ordkeycount ordkeydel ordkeygoto ordkeyno ordkeyval ordlistadd ordlistclear ordlistrebui ordname \
ordnumber ordscope ordsetfocu ordsetrelat ordskipunique os outerr outstd \
padc padl padr param parameters pcalls pcol pcount pixel2col pixel2row printstatus procfile procline procname procstack proper prow \
qout qout2 qqout qqout2 \
rat rddlist rddname rddsetdefault readexit readinsert readkey readkill readmodal readsave readupdated readvar reccount recno recsize \
replicate restscreen right rlock rlockverify round row row2pixel rowadapt rowvisible rtrim \
savescreen scrdos2unix screen2chr scroll scrunix2dos seconds secondscpu select serial set setansi setblink setcancel setcol2get \
setcolor setcolorba setcursor setevent setguicursor setkey setmode setpos setprc setvarempty sleep sleepms soundex space \
sqrt statbarmsg statusmessage stod str strlen strlen2col strlen2pix strlen2space strpeek strpoke strtran strzero stuff substr \
tbcolumnnew tbmouse tbrowsearr tbrowsedb tbrowsenew tempfilename time tone transform trim truepath type \
updated upper used usersactive usersdbf usersmax \
val valtype version \
webdate weberrorhandler webgetenvir webgetformdata webhtmlbegin webhtmlend weblogerr webmaildomain weboutdata websendmail word \
year

keywordclass.fs6funcproc=\
function procedure return exit

keywordclass.fs6class=\
class instance export hidden protect prototype

keywordclass.fs6doxygen=a addindex addtogroup anchor arg attention \
author b brief bug c class code date def defgroup deprecated dontinclude \
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \
f$ f[ f] file fn hideinitializer htmlinclude htmlonly \
if image include ingroup internal invariant interface latexonly li line link \
mainpage name namespace nosubgrouping note overload \
p page par param param[in] param[out] \
post pre ref relates remarks return retval \
sa section see showinitializer since skip skipline struct subsection \
test throw throws todo typedef union until \
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }

keywords.$(file.patterns.flagship)=$(keywordclass.fs6commands)
keywords2.$(file.patterns.flagship)=$(keywordclass.fs6libfunc)
keywords3.$(file.patterns.flagship)=$(keywordclass.fs6funcproc)
keywords4.$(file.patterns.flagship)=$(keywordclass.fs6class)
keywords5.$(file.patterns.flagship)=$(keywordclass.fs6doxygen)

comment.block.flagship=//~
comment.stream.start.flagship=/*
comment.stream.end.flagship=*/
comment.box.start.flagship=/*
comment.box.middle.flagship= *
comment.box.end.flagship= */



style.flagship.32=$(font.base)
style.flagship.0=
style.flagship.1=$(colour.code.comment.line),$(font.code.comment.line)
style.flagship.2=$(colour.code.comment.line),$(font.code.comment.line)
style.flagship.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.flagship.4=$(colour.code.comment.line),$(font.code.comment.line)
style.flagship.5=fore:#3060A0,$(font.code.comment.doc)
style.flagship.6=fore:#804020,$(font.code.comment.doc)

style.flagship.7=$(colour.keyword)
style.flagship.8=$(colour.keyword)
style.flagship.9=$(colour.keyword),bold
style.flagship.10=$(colour.keyword),bold

style.flagship.11=$(colour.number)
style.flagship.12=$(colour.string)
style.flagship.13=$(colour.preproc)
style.flagship.14=$(colour.operator)
style.flagship.15=
style.flagship.16=$(colour.number)
style.flagship.17=$(style.stringeol)
style.flagship.18=$(colour.number)
style.flagship.19=$(colour.operator)
style.flagship.20=
style.flagship.21=
style.flagship.22=$(colour.code.comment.doc),$(font.code.comment.doc)
style.flagship.23=$(colour.code.comment.line),$(font.code.comment.line)
style.flagship.24=$(colour.keyword)
style.flagship.25=$(colour.keyword)
style.flagship.26=$(colour.number)
style.flagship.27=$(colour.string)
style.flagship.28=$(colour.preproc)
style.flagship.29=$(colour.operator)
style.flagship.30=
style.flagship.31=$(style.stringeol)

fsOptObj=-c -q -w1 -w2 -w3
fsOptExe=-q -w1 -w2 -w3

fsObj=FlagShip $(fsOptObj) $(FileNameExt) -o $(FileName).o

fsExe=FlagShip $(fsOptExe) $(FileNameExt) -o $(FileName)


module forth

file.patterns.forth=*.forth


lexer.$(file.patterns.forth)=forth
name.$(file.patterns.forth)=forth

*language.forth=Forth|forth||

filter.forth=Forth files (f spf)|$(file.patterns.forth)|

*filter.forth=$(filter.forth)

word.characters.$(file.patterns.forth)=$(chars.alpha)$(chars.numeric)%-

comment.block.forth=\
comment.stream.start.forth=(
comment.stream.end.forth=)
comment.box.start.forth=\
comment.box.middle.forth=\
comment.box.end.forth=\


keywords.$(file.patterns.forth)=\
AGAIN BEGIN CASE DO ELSE ENDCASE ENDOF IF LOOP OF REPEAT THEN UNTIL  WHILE \
[IF] [ELSE] [THEN] ?DO

keywords2.$(file.patterns.forth)=\
DUP DROP ROT SWAP OVER @ ! 2@ 2! 2DUP 2DROP 2SWAP 2OVER NIP R@ >R R> 2R@ 2>R 2R> \
0= 0< SP@ SP! W@ W! C@ C! < > = <> 0<>\
SPACE SPACES KEY? KEY THROW CATCH ABORT */ 2* /MOD CELL+ CELLS CHAR+ \
CHARS MOVE ERASE DABS TITLE HEX DECIMAL HOLD <# # #S #> SIGN \
D. . U. DUMP (.") >NUMBER ' IMMEDIATE EXIT RECURSE UNLOOP LEAVE HERE ALLOT , \
C, W, COMPILE, BRANCH, RET, LIT, DLIT, ?BRANCH, ", >MARK >RESOLVE1 <MARK >RESOLVE \
ALIGN ALIGNED USER-ALLOT USER-HERE HEADER DOES> SMUDGE HIDE :NONAME LAST-WORD \
?ERROR ERROR2 FIND1 SFIND SET-CURRENT GET-CURRENT DEFINITIONS GET-ORDER FORTH \
ONLY SET-ORDER ALSO PREVIOUS VOC-NAME. ORDER LATEST LITERAL 2LITERAL SLITERAL \
CLITERAL ?LITERAL1 ?SLITERAL1 HEX-LITERAL HEX-SLITERAL ?LITERAL2 ?SLITERAL2 SOURCE \
EndOfChunk CharAddr PeekChar IsDelimiter GetChar OnDelimiter SkipDelimiters OnNotDelimiter \
SkipWord SkipUpTo ParseWord NextWord PARSE SKIP CONSOLE-HANDLES REFILL DEPTH ?STACK \
?COMP WORD INTERPRET BYE QUIT MAIN1 EVALUATE INCLUDE-FILE INCLUDED >BODY +WORD \
WORDLIST CLASS! CLASS@ PAR! PAR@ ID. ?IMMEDIATE ?VOC IMMEDIATE VOC WordByAddrWl \
WordByAddr NLIST WORDS SAVE OPTIONS /notransl ANSI>OEM ACCEPT EMIT CR TYPE EKEY? \
EKEY EKEY>CHAR EXTERNTASK ERASE-IMPORTS ModuleName ModuleDirName ENVIRONMENT? \
DROP-EXC-HANDLER SET-EXC-HANDLER HALT ERR CLOSE-FILE CREATE-FILE CREATE-FILE-SHARED \
OPEN-FILE-SHARED DELETE-FILE FILE-POSITION FILE-SIZE OPEN-FILE READ-FILE REPOSITION-FILE \
DOS-LINES UNIX-LINES READ-LINE WRITE-FILE RESIZE-FILE WRITE-LINE ALLOCATE FREE RESIZE \
START SUSPEND RESUME STOP PAUSE MIN MAX TRUE FALSE ASCIIZ> \
R/O W/O ;CLASS ENDWITH OR AND /STRING SEARCH COMPARE EXPORT ;MODULE SPACE

keywords3.$(file.patterns.forth)=\
VARIABLE CREATE : VALUE CONSTANT VM: M: var dvar chars OBJ \
CONSTR: DESTR: CLASS: OBJECT: POINTER \
USER USER-CREATE USER-VALUE VECT \
WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:

keywords4.$(file.patterns.forth)=\
CHAR [CHAR] POSTPONE WITH ['] TO [COMPILE] CHAR ASCII \'

keywords5.$(file.patterns.forth)=\
REQUIRE WINAPI:

keywords6.$(file.patterns.forth)=\
S" ABORT" Z" " ." C"

style.forth.0=$(font.monospace)
style.forth.1=fore:#009933,$(font.comment),$(font.monospace)
style.forth.2=fore:#007F00,$(font.comment)
style.forth.3=fore:#000000,bold
style.forth.4=fore:#00007F,bold
style.forth.5=fore:#000000,$(font.monospace),bold
style.forth.6=fore:#FF0000,bold,$(font.monospace)
style.forth.7=fore:#CC3300,bold,$(font.monospace)
style.forth.8=fore:#996633,bold,$(font.monospace)
style.forth.9=fore:#007F7F,$(font.monospace)
style.forth.10=fore:#CC3300,$(font.monospace)
style.forth.11=fore:#0000CC,$(font.monospace)


module fortran

filter.fortran=Fortran (f for f90 f95 f2k)|*.f;*.for;*.f90;*.f95;*.f2k|

*filter.fortran=$(filter.fortran)

file.patterns.f95=*.f90;*.f95;*.f2k
file.patterns.f77=*.f;*.for
file.patterns.fortran=$(file.patterns.f95);$(file.patterns.f77)

lexer.$(file.patterns.f95)=fortran
lexer.$(file.patterns.f77)=f77

name.$(file.patterns.f95)=fortran
name.$(file.patterns.f77)=fortran

*language.fortran=Fortran|f90||

keywordclass.fortran=access action advance allocatable allocate \
apostrophe assign assignment associate asynchronous backspace \
bind blank blockdata call case character class close common \
complex contains continue critical cycle data deallocate decimal delim \
default dimension direct do dowhile double doubleprecision else \
elseif elsewhere encoding end endassociate endblockdata enddo \
endfile endforall endfunction endif endinterface endmodule endprogram \
endselect endsubroutine endtype endwhere entry eor equivalence \
err errmsg exist exit external file flush fmt forall form format \
formatted function go goto id if implicit in include inout \
integer inquire intent interface intrinsic iomsg iolength \
iostat is kind len logical module name named namelist nextrec nml \
none nullify number only open opened operator optional out pad \
parameter pass pause pending pointer pos position precision \
print private procedure program protected public quote read readwrite \
real rec recl recursive result return rewind save select \
selectcase selecttype sequential sign size stat status stop stream \
subroutine target then to type unformatted unit use value \
volatile wait where while write

keywords.$(file.patterns.f95)=$(keywordclass.fortran)
keywords.$(file.patterns.f77)=$(keywordclass.fortran)

keywords2.$(file.patterns.fortran)=abs achar acos acosd adjustl adjustr \
aimag aimax0 aimin0 aint ajmax0 ajmin0 akmax0 akmin0 all allocated alog \
alog10 amax0 amax1 amin0 amin1 amod anint any asin asind associated \
atan atan2 atan2d atand bitest bitl bitlr bitrl bjtest bit_size bktest break \
btest cabs ccos cdabs cdcos cdexp cdlog cdsin cdsqrt ceiling cexp char \
clog cmplx conjg cos cosd cosh count cpu_time cshift csin csqrt dabs \
dacos dacosd dasin dasind datan datan2 datan2d datand date \
date_and_time dble dcmplx dconjg dcos dcosd dcosh dcotan ddim dexp \
dfloat dflotk dfloti dflotj digits dim dimag dint dlog dlog10 dmax1 dmin1 \
dmod dnint dot_product dprod dreal dsign dsin dsind dsinh dsqrt dtan dtand \
dtanh eoshift epsilon errsns exp exponent float floati floatj floatk floor fraction \
free huge iabs iachar iand ibclr ibits ibset ichar idate idim idint idnint ieor ifix \
iiabs iiand iibclr iibits iibset iidim iidint iidnnt iieor iifix iint iior iiqint iiqnnt iishft \
iishftc iisign ilen imax0 imax1 imin0 imin1 imod index inint inot int int1 int2 int4 \
int8 iqint iqnint ior ishft ishftc isign isnan izext jiand jibclr jibits jibset jidim jidint \
jidnnt jieor jifix jint jior jiqint jiqnnt jishft jishftc jisign jmax0 jmax1 jmin0 jmin1 \
jmod jnint jnot jzext kiabs kiand kibclr kibits kibset kidim kidint kidnnt kieor kifix \
kind kint kior kishft kishftc kisign kmax0 kmax1 kmin0 kmin1 kmod knint knot kzext \
lbound leadz len len_trim lenlge lge lgt lle llt log log10 logical lshift malloc matmul \
max max0 max1 maxexponent maxloc maxval merge min min0 min1 minexponent minloc \
minval mod modulo mvbits nearest nint not nworkers number_of_processors pack popcnt \
poppar precision present product radix random random_number random_seed range real \
repeat reshape rrspacing rshift scale scan secnds selected_int_kind \
selected_real_kind set_exponent shape sign sin sind sinh size sizeof sngl snglq spacing \
spread sqrt sum system_clock tan tand tanh tiny transfer transpose trim ubound unpack verify

keywords3.$(file.patterns.fortran)=cdabs cdcos cdexp cdlog cdsin cdsqrt cotan cotand \
dcmplx dconjg dcotan dcotand decode dimag dll_export dll_import doublecomplex dreal \
dvchk encode find flen flush getarg getcharqq getcl getdat getenv gettim hfix ibchng \
identifier imag int1 int2 int4 intc intrup invalop iostat_msg isha ishc ishl jfix \
lacfar locking locnear map nargs nbreak ndperr ndpexc offset ovefl peekcharqq precfill \
prompt qabs qacos qacosd qasin qasind qatan qatand qatan2 qcmplx qconjg qcos qcosd \
qcosh qdim qexp qext qextd qfloat qimag qlog qlog10 qmax1 qmin1 qmod qreal qsign qsin \
qsind qsinh qsqrt qtan qtand qtanh ran rand randu rewrite segment setdat settim system \
timer undfl unlock union val virtual volatile zabs zcos zexp zlog zsin zsqrt


comment.block.fortran=!~


style.fortran.0=fore:#808080
style.f77.0=fore:#808080
style.fortran.32=
style.f77.32=
style.fortran.1=$(colour.code.comment.line),$(font.code.comment.line)
style.f77.1=$(colour.code.comment.line),$(font.code.comment.line)
style.fortran.2=$(colour.number)
style.f77.2=$(colour.number)
style.fortran.3=$(colour.string)
style.f77.3=$(colour.string)
style.fortran.4=$(colour.string)
style.f77.4=$(colour.string)
style.fortran.5=fore:#000000,back:#E0C0E0,eolfilled
style.f77.5=fore:#000000,back:#E0C0E0,eolfilled
style.fortran.6=$(colour.operator),bold
style.f77.6=$(colour.operator),bold
style.fortran.7=
style.f77.7=
style.fortran.8=$(colour.keyword),case:u
style.f77.8=$(colour.keyword),case:u
style.fortran.9=fore:#B00040
style.f77.9=fore:#B00040
style.fortran.10=fore:#B04080
style.f77.10=fore:#B04080
style.fortran.11=$(colour.preproc)
style.f77.11=$(colour.preproc)
style.fortran.12=$(colour.operator),bold
style.f77.12=$(colour.operator),bold
style.fortran.13=fore:#E0C0E0
style.f77.13=fore:#E0C0E0
style.fortran.14=fore:#000000,back:#F0E080
style.f77.14=fore:#000000,back:#F0E080
braces.fortran.style=0


autocomplete.fortran.ignorecase=1
autocomplete.f77.ignorecase=1
calltip.fortran.ignorecase=1
calltip.f77.ignorecase=1

module freebasic

file.patterns.freebasic=*.bas;*.bi

filter.freebasic=FreeBasic (bb bi)|$(file.patterns.freebasic)|

*filter.freebasic=$(filter.freebasic)

lexer.$(file.patterns.freebasic)=freebasic
name.$(file.patterns.freebasic)=freebasic

*language.freebasic=FreeBasic|bas||


keywordclass.freebasic=\
append as asc asin asm atan2 atn beep bin binary bit bitreset bitset bload \
bsave byref byte byval call callocate case cbyte cdbl cdecl chain chdir chr \
cint circle clear clng clngint close cls color command common cons const \
continue cos cshort csign csng csrlin cubyte cuint culngint cunsg curdir \
cushort custom cvd cvi cvl cvlongint cvs cvshort data date deallocate declare \
defbyte defdbl defined defint deflng deflngint defshort defsng defstr defubyte \
defuint defulngint defushort dim dir do double draw dylibload dylibsymbol else \
elseif end enum environ environ$ eof eqv erase err error exec exepath exit exp \
export extern field fix flip for fre freefile function get getjoystick getkey \
getmouse gosub goto hex hibyte hiword if iif imagecreate imagedestroy imp \
inkey inp input instr int integer is kill lbound lcase left len let lib line \
lobyte loc local locate lock lof log long longint loop loword lset ltrim \
mid mkd mkdir mki mkl mklongint mks mkshort mod multikey mutexcreate \
mutexdestroy mutexlock mutexunlock name next not oct on once open option or out \
output overload paint palette pascal pcopy peek peeki peeks pipe pmap point \
pointer poke pokei pokes pos preserve preset print private procptr pset ptr \
public put random randomize read reallocate redim rem reset restore resume \
resume next return rgb rgba right rmdir rnd rset rtrim run sadd screen \
screencopy screeninfo screenlock screenptr screenres screenset screensync \
screenunlock seek statement seek function selectcase setdate setenviron \
setmouse settime sgn shared shell shl short shr sin single sizeof sleep space \
spc sqr static stdcall step stop str string string strptr sub swap system tab \
tan then threadcreate threadwait time time timer to trans trim type ubound \
ubyte ucase uinteger ulongint union unlock unsigned until ushort using va_arg \
va_first va_next val val64 valint varptr view viewprint wait wend while width \
window windowtitle with write xor zstring

keywordclass.preprocessor=\
#define #dynamic #else #endif #error #if #ifdef #ifndef #inclib #include \
#print #static #undef

keywords.$(file.patterns.freebasic)=$(keywordclass.freebasic)
keywords2.$(file.patterns.freebasic)=$(keywordclass.preprocessor)

style.freebasic.0=fore:#000000
style.freebasic.1=$(colour.code.comment.line),$(font.code.comment.line)
style.freebasic.2=$(colour.number)
style.freebasic.3=$(colour.keyword),bold
style.freebasic.4=$(colour.string)
style.freebasic.5=$(colour.preproc)
style.freebasic.6=$(colour.operator)
style.freebasic.7=$(style.freebasic.0)
style.freebasic.10=$(colour.keyword)
style.freebasic.11=$(colour.keyword)
style.freebasic.12=$(colour.keyword)
style.freebasic.15=$(colour.preproc)
style.freebasic.16=$(colour.error)
style.freebasic.17=$(colour.number)
style.freebasic.18=$(colour.number)


module gap

file.patterns.gap=*.g;*.gd;*.gi

filter.gap=Gap (g gi gd)|$(file.patterns.gap)|

*filter.gap=$(filter.gap)

lexer.$(file.patterns.gap)=gap
name.$(file.patterns.gap)=gap

*language.gap=GAP|g||

keywords.$(file.patterns.gap)=and break continue do elif else end fi for function \
if in local mod not od or quit rec repeat return then until while QUIT

keywords2.$(file.patterns.gap)=false true IsBound Unbind TryNextMethod \
Info Assert SaveWorkspace fail


comment.block.gap=#~

style.gap.0=fore:#808080
style.gap.1=
style.gap.2=$(colour.keyword),bold
style.gap.3=$(colour.keyword)
style.gap.4=$(colour.keyword)
style.gap.5=$(colour.keyword)
style.gap.6=$(colour.string)
style.gap.7=$(colour.char)
style.gap.8=$(colour.operator),bold
style.gap.9=$(colour.code.comment.line)
style.gap.10=$(colour.number)
style.gap.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled

braces.gap.style=8

module haskell

lexer.*.hs=haskell
name.*.hs=haskell
filter.hs=Haskell (hs)|*.hs|

*filter.hs=$(filter.hs)

*language.haskell=Haskell|hs||

style.haskell.0=fore:#808080
style.haskell.1=
style.haskell.2=$(colour.keyword),bold
style.haskell.3=$(colour.number)
style.haskell.4=$(colour.string)
style.haskell.5=$(colour.char)
style.haskell.6=back:#FF0000
style.haskell.7=
style.haskell.8=
style.haskell.9=back:#FF0000
style.haskell.10=back:#FF0000
style.haskell.11=$(colour.operator),bold
style.haskell.12=back:#FF0000
style.haskell.13=$(colour.code.comment.line),$(font.code.comment.line)
style.haskell.14=$(colour.code.comment.box),$(font.code.comment.box)
style.haskell.15=$(colour.code.comment.box),$(font.code.comment.box)
style.haskell.16=$(colour.code.comment.box),$(font.code.comment.box)
style.haskell.17=fore:#BF6F00
style.haskell.18=$(colour.preproc)
style.haskell.19=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.haskell.20=back:#FF8080

style.haskell.21=fore:#DD9900,$(font.code.comment.line),italics
style.haskell.22=fore:#EE00AA

keywordclass.haskell98=case class data default deriving do else hiding if \
import in infix infixl infixr instance let module \
newtype of then type where forall foreign

keywordclass.ffi=export label dynamic safe threadsafe \
unsafe stdcall ccall prim

keywords.*.hs=$(keywordclass.haskell98)

keywords2.*.hs=$(keywordclass.ffi)

module hex

file.patterns.srec=*.mot;*.srec
file.patterns.ihex=*.hex
file.patterns.tehex=*.tek

filter.srec=S-Record (mot)|$(file.patterns.srec)|
filter.ihex=Intel HEX (hex)|$(file.patterns.ihex)|
filter.tehex=Tektronix extended HEX (tek)|$(file.patterns.tehex)|

*filter.srec=$(filter.srec)
*filter.ihex=$(filter.ihex)
*filter.tehex=$(filter.tehex)

lexer.$(file.patterns.srec)=srec
lexer.$(file.patterns.ihex)=ihex
lexer.$(file.patterns.tehex)=tehex

name.$(file.patterns.srec)=srecord
name.$(file.patterns.ihex)=intelhex
name.$(file.patterns.tehex)=tektronixhex

*language.srecord=S-Record|mot||
*language.intelhex=Intel HEX|hex||
#*language.tektronixhex=Tektronix extended HEX|tek||

style.srec.0=
style.srec.1=$(style.srec.2)
style.srec.2=fore:#7F0000
style.srec.3=$(style.srec.2),$(style.srec.10)
style.srec.4=fore:#7F7F00
style.srec.5=$(colour.error)
style.srec.6=fore:#7F00FF
style.srec.7=fore:#007FFF
style.srec.8=$(style.srec.6)
style.srec.9=$(style.srec.7)
style.srec.10=italics
style.srec.12=bold
style.srec.13=
style.srec.14=$(style.srec.10)
style.srec.15=
style.srec.16=fore:#00BF00
style.srec.17=$(colour.error)
style.srec.18=$(style.srec.10)

style.ihex.0=$(style.srec.0)
style.ihex.1=$(style.srec.1)
style.ihex.2=$(style.srec.2)
style.ihex.3=$(style.srec.3)
style.ihex.4=$(style.srec.4)
style.ihex.5=$(style.srec.5)
style.ihex.6=$(style.srec.6)
style.ihex.7=$(style.srec.7)
style.ihex.9=$(style.srec.9)
style.ihex.10=$(style.srec.10)
style.ihex.11=$(style.ihex.9)
style.ihex.12=$(style.srec.12)
style.ihex.13=$(style.srec.13)
style.ihex.14=$(style.srec.14)
style.ihex.15=$(style.srec.15)
style.ihex.16=$(style.srec.16)
style.ihex.17=$(style.srec.17)
style.ihex.18=$(style.srec.18)

style.tehex.0=$(style.srec.0)
style.tehex.1=$(style.srec.1)
style.tehex.2=$(style.srec.2)
style.tehex.3=$(style.srec.3)
style.tehex.4=$(style.srec.4)
style.tehex.5=$(style.srec.5)
style.tehex.7=$(style.srec.7)
style.tehex.9=$(style.srec.9)
style.tehex.10=$(style.srec.10)
style.tehex.12=$(style.srec.12)
style.tehex.13=$(style.srec.13)
style.tehex.16=$(style.srec.16)
style.tehex.17=$(style.srec.17)
style.tehex.18=$(style.srec.18)

module html


file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd;*.jsp;*.xhtml
file.patterns.php=*.php3;*.phtml;*.php
file.patterns.html=$(file.patterns.web);*.htt;*.cfm;*.tpl;*.dtd;*.hta
file.patterns.vxml=*.vxml
file.patterns.xml=*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf
file.patterns.docbook=*.docbook
file.patterns.mako=*.mak;*.mako

*source.patterns.cgi=*.cgi;
*source.patterns.html=$(file.patterns.web);
*source.patterns.xml=$(file.patterns.xml);

lexer.$(file.patterns.html)=hypertext
lexer.$(file.patterns.vxml)=hypertext
lexer.$(file.patterns.xml)=xml
lexer.$(file.patterns.docbook)=hypertext
lexer.$(file.patterns.mako)=hypertext
lexer.$(file.patterns.php)=hypertext

name.$(file.patterns.html)=html
name.$(file.patterns.vxml)=html
name.$(file.patterns.xml)=xml
name.$(file.patterns.docbook)=html
name.$(file.patterns.mako)=html
name.$(file.patterns.php)=php

filter.web=Web (html htm asp shtml css xml docbook jsp)|$(file.patterns.web);*.css;*.xml;*.docbook|
filter.php=PHP (php php3 phtml)|$(file.patterns.php)|

*filter.web=$(filter.web)
*filter.php=$(filter.php)

*language.html=HTML|html||
*language.xml=XML|xml||
*language.php=PHP|php||

fold.html=1




hypertext.elements=\
a abbr acronym address applet area b base basefont \
bdo bgsound big blink blockquote body br button caption center \
cite code col colgroup dd del dfn dir div dl dt em \
fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \
head hr html i iframe img input ins isindex kbd label \
legend li link listing map marquee menu menuitem meta multicol nobr noembed noframes noscript \
object ol optgroup option p param plaintext pre q s samp \
script select small spacer span strike strong style sub sup \
table tbody td textarea tfoot th thead title tr tt u ul \
var xml xmlns xmp

hypertext.attributes=\
abbr accept-charset accept accesskey action align alink \
allowtransparency alt archive axis background bgcolor border bordercolor bottommargin \
cellpadding cellspacing char charoff charset checked cite \
class classid clear codebase codetype color cols colspan \
compact content coords \
data datafld dataformatas datapagesize datasrc datetime \
declare defer dir disabled enctype event \
face for frame frameborder framespacing \
headers height href hreflang hspace http-equiv \
id is ismap itemid itemprop itemref itemscope itemtype \
label lang language leftmargin link longdesc lowsrc \
marginwidth marginheight maxlength media method methods multiple \
name nohref noresize noshade nowrap \
object onblur onchange onclick ondblclick onfocus \
onkeydown onkeypress onkeyup onload onmousedown \
onmousemove onmouseover onmouseout onmouseup \
onreset onselect onsubmit onunload \
profile prompt readonly rel rev rightmargin rows rowspan rules \
scheme scope scrolling selected shape size span src standby start style \
summary tabindex target text title topmargin type usemap urn \
valign value valuetype version vlink vspace width \
text password checkbox radio submit reset \
file hidden image \
^data-

html5.elements=\
address article aside audio base bdi canvas command details datalist dialog embed \
figure figcaption footer header hgroup keygen main mark menu meter nav output \
picture progress ruby rb rt rtc rp section source template track time video wbr

html5.attributes=\
allowfullscreen allowpaymentrequest async autocomplete autofocus autoplay \
controls contenteditable contextmenu crossorigin default dirname download draggable \
form formaction formenctype formmethod formnovalidate formtarget high kind \
list low loop manifest max muted min minlength nonce novalidate open optimum \
onabort onaddtrack onafterprint onauxclick onbeforeprint onbeforeunload \
oncancel oncanplay oncanplaythrough onclose oncopy oncuechange oncut \
ondrag ondragend ondragenter ondragexit ondragleave ondragover ondragstart ondrop ondurationchange \
onemptied onended onerror onenter onexit onhashchange oninput oninvalid \
onlanguagechange onloadeddata onloadedmetadata onloadend onloadstart \
onmessage onmouseenter onmouseleave onoffline ononline \
onpagehide onpageshow onpaste onpause onplay onplaying onprogress onpopstate \
onratechange onremovetrack onresize onrejectionhandled onresize \
onscroll onseeked onseeking onshow onstalled onstorage onsuspend ontimeupdate ontoggle \
onunhandledrejection onvolumechange onwaiting onwheel \
pattern placeholder poster preload \
referrerpolicy required reversed role sandbox scoped seamless sizes spellcheck srcdoc srclang srcset step \
translate typemustmatch wrap

keywordclass.hypertext=\
$(hypertext.elements) $(hypertext.attributes) $(html5.elements) $(html5.attributes) public !doctype

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

keywordclass.php=\
and array as bool boolean break case cfunction class const continue declare \
default die directory do double echo else elseif empty enddeclare endfor \
endforeach endif endswitch endwhile eval exit extends false float for \
foreach function global goto if include include_once int integer isset list namespace \
new null object old_function or parent print real require require_once resource \
return static stdclass string switch true unset use var while xor \
abstract catch clone exception final implements interface php_user_filter \
private protected public this throw try \
__class__ __dir__ __file__ __function__ __line__ __method__ \
__namespace__ __sleep __wakeup

import phpfunctions

keywords.$(file.patterns.html)=$(keywordclass.hypertext)
keywords2.$(file.patterns.html)=$(keywordclass.javascript)
keywords3.$(file.patterns.html)=$(keywordclass.vb)
keywords4.$(file.patterns.html)=$(keywordclass.python)
keywords5.$(file.patterns.html)=$(keywordclass.php)
keywords6.$(file.patterns.html)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

keywords.$(file.patterns.php)=$(keywordclass.hypertext)
keywords5.$(file.patterns.php)=$(keywordclass.php)

docbook.elements42=\
abbrev abstract accel ackno acronym action address affiliation alt anchor \
answer appendix appendixinfo application area areaset areaspec arg article \
articleinfo artpagenums attribution audiodata audioobject author authorblurb \
authorgroup authorinitials beginpage bibliocoverage bibliodiv biblioentry \
bibliography bibliographyinfo biblioid bibliomisc bibliomixed bibliomset \
bibliorelation biblioset bibliosource blockinfo blockquote book bookinfo \
bridgehead callout calloutlist caption caution chapter chapterinfo citation \
citebiblioid citerefentry citetitle city classname classsynopsis classsynopsisinfo \
cmdsynopsis co collab collabname colophon colspec command computeroutput \
confdates confgroup confnum confsponsor conftitle constant constraint \
constraintdef constructorsynopsis contractnum contractsponsor contrib \
copyright coref corpauthor corpname country database date dedication \
destructorsynopsis edition editor email emphasis entry entrytbl envar \
epigraph equation errorcode errorname errortext errortype example \
exceptionname fax fieldsynopsis figure filename firstname firstterm \
footnote footnoteref foreignphrase formalpara funcdef funcparams \
funcprototype funcsynopsis funcsynopsisinfo function glossary glossaryinfo \
glossdef glossdiv glossentry glosslist glosssee glossseealso glossterm \
graphic graphicco group guibutton guiicon guilabel guimenu guimenuitem \
guisubmenu hardware highlights holder honorific htm imagedata imageobject \
imageobjectco important index indexdiv indexentry indexinfo indexterm \
informalequation informalexample informalfigure informaltable initializer \
inlineequation inlinegraphic inlinemediaobject interface interfacename \
invpartnumber isbn issn issuenum itemizedlist itermset jobtitle keycap \
keycode keycombo keysym keyword keywordset label legalnotice lhs lineage \
lineannotation link listitem iteral literallayout lot lotentry manvolnum \
markup medialabel mediaobject mediaobjectco member menuchoice methodname \
methodparam methodsynopsis mm modespec modifier ousebutton msg msgaud \
msgentry msgexplan msginfo msglevel msgmain msgorig msgrel msgset msgsub \
msgtext nonterminal note objectinfo olink ooclass ooexception oointerface \
option optional orderedlist orgdiv orgname otheraddr othercredit othername \
pagenums para paramdef parameter part partinfo partintro personblurb \
personname phone phrase pob postcode preface prefaceinfo primary primaryie \
printhistory procedure production productionrecap productionset productname \
productnumber programlisting programlistingco prompt property pubdate publisher \
publishername pubsnumber qandadiv qandaentry qandaset question quote refclass \
refdescriptor refentry refentryinfo refentrytitle reference referenceinfo \
refmeta refmiscinfo refname refnamediv refpurpose refsect1 refsect1info refsect2 \
refsect2info refsect3 refsect3info refsection refsectioninfo refsynopsisdiv \
refsynopsisdivinfo releaseinfo remark replaceable returnvalue revdescription \
revhistory revision revnumber revremark rhs row sbr screen screenco screeninfo \
screenshot secondary secondaryie sect1 sect1info sect2 sect2info sect3 sect3info \
sect4 sect4info sect5 sect5info section sectioninfo see seealso seealsoie \
seeie seg seglistitem segmentedlist segtitle seriesvolnums set setindex \
setindexinfo setinfo sgmltag shortaffil shortcut sidebar sidebarinfo simpara \
simplelist simplemsgentry simplesect spanspec state step street structfield \
structname subject subjectset subjectterm subscript substeps subtitle \
superscript surname sv symbol synopfragment synopfragmentref synopsis \
systemitem table tbody term tertiary tertiaryie textdata textobject tfoot \
tgroup thead tip title titleabbrev toc tocback tocchap tocentry tocfront \
toclevel1 toclevel2 toclevel3 toclevel4 toclevel5 tocpart token trademark \
type ulink userinput varargs variablelist varlistentry varname videodata \
videoobject void volumenum warning wordasword xref year

docbook.attributes=\
arch condition conformance id lang os remap role revision revisionflag security \
userlevel vendor xreflabel \
status label endterm linkend space width

keywordclass.docbook=\
$(docbook.elements42) $(docbook.attributes)

keywordclass.mako=$(keywordclass.hypertext)
keywords.$(file.patterns.mako)=$(keywordclass.hypertext)
keywords2.$(file.patterns.mako)=$(keywordclass.javascript)
keywords3.$(file.patterns.mako)=$(keywordclass.vb)
keywords4.$(file.patterns.mako)=$(keywordclass.python) include namespace inherit \
call doc text page endclass endexcept endfinally endfor endif endtry endwhile block
keywords5.$(file.patterns.mako)=$(keywordclass.php)
keywords6.$(file.patterns.mako)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

keywordclass.django= not in autoescape with \
csrf_token cycle empty block endblock filter endfilter for endfor firstof \
if endif ifchanged endifchanged ifequal endifequal include load now regroup spaceless \
endspaceless ssi url widthratio add addslashes capfirst center cut date \
default default_if_none dictsort dictsortreversed divisibleby escape escapejs \
filesizeformat first fix_ampersands float_format force_escape get_digit \
iriencode join last length length_is linebreaks linebreaksbr linenumbers ljust \
lower make_list phone2numeric pluralize pprint random removetags rjust safe \
safeseq slice slugify stringformat striptags time timesince timeuntil title \
truncatewords truncatewords_html unordered_list upper urlencode urlize \
urlizetrunc wordcount wordwrap yesno apnumber intcomma intword ordinal \
naturalday lorem

keywords.$(file.patterns.docbook)=$(keywordclass.docbook)
keywords6.$(file.patterns.docbook)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)$(chars.accented)_-$
word.characters.$(file.patterns.php)=$(chars.alpha)$(chars.numeric)$(chars.accented)_-$
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->
comment.block.hypertext=//~
comment.block.at.line.start.hypertext=1

comment.box.start.xml=
comment.stream.start.xml=

keywords.$(file.patterns.xml)=
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)



word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

colour.hypertext.sgml.back=back:#EFEFFF
colour.hypertext.server.javascript.back=back:#DFDF7F
colour.hypertext.client.vbs.back=back:#EFEFFF
colour.hypertext.server.vbs.back=back:#CFCFEF
colour.hypertext.client.python.back=back:#EFFFEF
colour.hypertext.server.python.back=back:#CFEFCF
colour.hypertext.server.php.back=back:#FFF8F8


style.hypertext.0=fore:#000000,$(font.text)
style.hypertext.1=fore:#000080
style.hypertext.2=fore:#FF0000
style.hypertext.3=fore:#008080
style.hypertext.4=fore:#FF0000
style.hypertext.5=$(colour.number)
style.hypertext.6=$(colour.string)
style.hypertext.7=$(colour.string)
style.hypertext.8=fore:#800080
style.hypertext.9=fore:#808000,$(font.text.comment)
style.hypertext.10=fore:#800080,$(font.text)
style.hypertext.11=fore:#000080
style.hypertext.12=fore:#0000FF
style.hypertext.13=fore:#0000FF
style.hypertext.14=back:#FF0000
style.hypertext.15=back:#FFFF00
style.hypertext.16=back:#FFDF00
style.hypertext.17=back:#FFDF00
style.hypertext.18=fore:#0000FF,back:#FFEFBF
style.hypertext.19=fore:#FF00FF,back:#FFEFFF
style.hypertext.20=fore:#000000,back:#FFFFD0
style.hypertext.21=fore:#000080,$(colour.hypertext.sgml.back)
style.hypertext.22=fore:#000080,$(colour.hypertext.sgml.back),bold
style.hypertext.23=fore:#006600,$(colour.hypertext.sgml.back)
style.hypertext.24=fore:#800000,$(colour.hypertext.sgml.back)
style.hypertext.25=fore:#993300,$(colour.hypertext.sgml.back)
style.hypertext.26=fore:#800000,back:#FF6666
style.hypertext.27=fore:#3366FF,$(colour.hypertext.sgml.back)
style.hypertext.28=fore:#333333,$(colour.hypertext.sgml.back)
style.hypertext.29=fore:#808000,$(colour.hypertext.sgml.back)
style.hypertext.30=fore:#808000,back:#FF0000
style.hypertext.31=fore:#000066,back:#CCCCE0
style.hypertext.34=fore:#0000FF,notbold,$(font.text)
style.hypertext.35=fore:#FF0000,notbold,$(font.text)

fontcolour.js=$(colour.embedded.js),$(font.js)
style.hypertext.40=fore:#7F7F00
style.hypertext.41=fore:#000000,bold,$(fontcolour.js),eolfilled
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled
style.hypertext.45=$(colour.number),$(fontcolour.js)
style.hypertext.46=fore:#000000,$(fontcolour.js)
style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)
style.hypertext.48=$(colour.string),$(fontcolour.js)
style.hypertext.49=$(colour.string),$(fontcolour.js)
style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)
style.hypertext.51=back:#BFBBB0,eolfilled
style.hypertext.52=back:#FFBBB0

style.hypertext.55=fore:#7F7F00
style.hypertext.56=fore:#000000,bold,$(font.js),$(colour.hypertext.server.javascript.back),eolfilled
style.hypertext.57=fore:#007F00,$(font.js),$(colour.hypertext.server.javascript.back),eolfilled
style.hypertext.58=fore:#007F00,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.59=fore:#7F7F7F,bold,$(font.js),$(colour.hypertext.server.javascript.back),eolfilled
style.hypertext.60=fore:#007F7F,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.61=fore:#000000,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.62=fore:#00007F,bold,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.63=fore:#7F007F,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.64=fore:#7F007F,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.65=fore:#000000,bold,$(font.js),$(colour.hypertext.server.javascript.back)
style.hypertext.66=back:#BFBBB0,eolfilled
style.hypertext.67=back:#FFBBB0

style.hypertext.70=
style.hypertext.71=$(font.vbs),$(colour.hypertext.client.vbs.back),fore:#000000,eolfilled
style.hypertext.72=$(font.comment),$(colour.hypertext.client.vbs.back),fore:#008000,eolfilled
style.hypertext.73=$(font.vbs),$(colour.hypertext.client.vbs.back),fore:#008080,eolfilled
style.hypertext.74=$(font.vbs),$(colour.hypertext.client.vbs.back),fore:#000080,bold,eolfilled
style.hypertext.75=$(font.vbs),$(colour.hypertext.client.vbs.back),fore:#800080,eolfilled
style.hypertext.76=$(font.vbs),$(colour.hypertext.client.vbs.back),fore:#000080,eolfilled
style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#000080,eolfilled

style.hypertext.80=
style.hypertext.81=$(font.vbs),$(colour.hypertext.server.vbs.back),fore:#000000,eolfilled
style.hypertext.82=$(font.comment),$(colour.hypertext.server.vbs.back),fore:#008000,eolfilled
style.hypertext.83=$(font.vbs),$(colour.hypertext.server.vbs.back),fore:#008080,eolfilled
style.hypertext.84=$(font.vbs),$(colour.hypertext.server.vbs.back),fore:#000080,bold,eolfilled
style.hypertext.85=$(font.vbs),$(colour.hypertext.server.vbs.back),fore:#800080,eolfilled
style.hypertext.86=$(font.vbs),$(colour.hypertext.server.vbs.back),fore:#000080,eolfilled
style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#000080,eolfilled

style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.92=fore:#007F00,$(font.comment),$(colour.hypertext.client.python.back),eolfilled
style.hypertext.93=fore:#007F7F,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.94=fore:#7F007F,$(font.monospace),$(colour.hypertext.client.python.back),eolfilled
style.hypertext.95=fore:#7F007F,$(font.monospace),$(colour.hypertext.client.python.back),eolfilled
style.hypertext.96=fore:#00007F,bold,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.97=fore:#7F0000,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.98=fore:#7F0000,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.99=fore:#0000FF,bold,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.100=fore:#007F7F,bold,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.101=bold,$(colour.hypertext.client.python.back),eolfilled
style.hypertext.102=$(colour.hypertext.client.python.back),eolfilled

style.hypertext.104=fore:#007F00,italics,$(colour.hypertext.server.php.back)

style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.107=fore:#007F00,$(font.comment),$(colour.hypertext.server.python.back),eolfilled
style.hypertext.108=fore:#007F7F,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.109=fore:#7F007F,$(font.monospace),$(colour.hypertext.server.python.back),eolfilled
style.hypertext.110=fore:#7F007F,$(font.monospace),$(colour.hypertext.server.python.back),eolfilled
style.hypertext.111=fore:#00007F,bold,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.112=fore:#7F0000,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.113=fore:#7F0000,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.114=fore:#0000FF,bold,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.115=fore:#007F7F,bold,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.116=bold,$(colour.hypertext.server.python.back),eolfilled
style.hypertext.117=$(colour.hypertext.server.python.back),eolfilled

style.hypertext.118=fore:#000033,$(colour.hypertext.server.php.back),eolfilled
style.hypertext.119=fore:#007F00,$(colour.hypertext.server.php.back)
style.hypertext.120=fore:#009F00,$(colour.hypertext.server.php.back)
style.hypertext.121=fore:#7F007F,italics,$(colour.hypertext.server.php.back)
style.hypertext.122=fore:#CC9900,$(colour.hypertext.server.php.back)
style.hypertext.123=fore:#00007F,italics,$(colour.hypertext.server.php.back)
style.hypertext.124=fore:#999999,$(font.comment),$(colour.hypertext.server.php.back)
style.hypertext.125=fore:#666666,italics,$(font.comment),$(colour.hypertext.server.php.back)
style.hypertext.126=fore:#007F00,italics,$(colour.hypertext.server.php.back)
style.hypertext.127=fore:#000000,$(colour.hypertext.server.php.back)


style.xml.0=fore:#000000,$(font.text)
style.xml.1=fore:#000080
style.xml.2=fore:#000080
style.xml.3=fore:#008080
style.xml.4=fore:#008080
style.xml.5=$(colour.number)
style.xml.6=$(colour.string)
style.xml.7=$(colour.string)
style.xml.8=fore:#800080
style.xml.9=fore:#808000
style.xml.10=fore:#800080,$(font.text)
style.xml.11=fore:#000080
style.xml.12=fore:#800080,bold
style.xml.13=fore:#800080,bold
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
style.xml.18=fore:#800000
style.xml.19=fore:#608060
style.xml.21=fore:#000080,$(colour.hypertext.sgml.back)
style.xml.22=fore:#000080,$(colour.hypertext.sgml.back),bold
style.xml.23=fore:#006600,$(colour.hypertext.sgml.back)
style.xml.24=fore:#800000,$(colour.hypertext.sgml.back)
style.xml.25=fore:#993300,$(colour.hypertext.sgml.back)
style.xml.26=fore:#800000,back:#FF6666
style.xml.27=fore:#3366FF,$(colour.hypertext.sgml.back)
style.xml.28=fore:#333333,$(colour.hypertext.sgml.back)
style.xml.29=fore:#808000,$(colour.hypertext.sgml.back)
style.xml.31=fore:#000066,back:#CCCCE0
braces.xml.style=31


module inno

file.patterns.inno=*.iss;*.isl

filter.inno=Inno Setup (iss isl)|$(file.patterns.inno)|

*filter.inno=$(filter.inno)

lexer.$(file.patterns.inno)=inno
name.$(file.patterns.inno)=innosetup

*language.innosetup=InnoSetup|iss||

comment.block.inno=;~

keywords.$(file.patterns.inno)=\
code components custommessages dirs files icons ini installdelete \
langoptions languages messages registry run setup tasks types \
uninstalldelete uninstallrun

keywords2.$(file.patterns.inno)=\
allowcancelduringinstall allownetworkdrive allownoicons \
allowrootdirectory allowuncpath alwaysrestart alwaysshowcomponentslist \
alwaysshowdironreadypage alwaysshowgrouponreadypage \
alwaysusepersonalgroup appcomments appcontact appcopyright \
appenddefaultdirname appenddefaultgroupname appid appmodifypath \
appmutex appname apppublisher apppublisherurl appreadmefile \
appsupportphone appsupporturl appupdatesurl appvername appversion \
architecturesallowed architecturesinstallin64bitmode aslrcompatible \
backcolor backcolor2 backcolordirection backsolid changesassociations \
changesenvironment closeapplications closeapplicationsfilter \
compression compressionthreads createappdir createuninstallregkey \
defaultdialogfontname defaultdirname defaultgroupname \
defaultuserinfoname defaultuserinfoorg defaultuserinfoserial \
depcompatible direxistswarning disabledirpage disablefinishedpage \
disableprogramgrouppage disablereadymemo disablereadypage \
disablestartupprompt disablewelcomepage diskclustersize diskslicesize \
diskspanning enabledirdoesntexistwarning encryption \
extradiskspacerequired flatcomponentslist infoafterfile infobeforefile \
internalcompresslevel languagedetectionmethod licensefile \
lzmaalgorithm lzmablocksize lzmadictionarysize lzmamatchfinder \
lzmanumblockthreads lzmanumfastbytes lzmauseseparateprocess \
mergeduplicatefiles minversion missingmessageswarning \
missingrunonceidswarning notrecognizedmessageswarning onlybelowversion \
output outputbasefilename outputdir outputmanifestfile password \
privilegesrequired privilegesrequiredoverridesallowed reservebytes \
restartapplications restartifneededbyrun setupiconfile setuplogging \
setupmutex showcomponentsizes showlanguagedialog showtaskstreelines \
signeduninstaller signeduninstallerdir signtool \
signtoolminimumtimebetween signtoolretrycount signtoolretrydelay \
signtoolrunminimized slicesperdisk solidcompression sourcedir \
terminalservicesaware timestamprounding timestampsinutc touchdate \
touchtime uninstallable uninstalldisplayicon uninstalldisplayname \
uninstalldisplaysize uninstallfilesdir uninstalllogmode \
uninstallrestartcomputer updateuninstalllogappname \
useduserareaswarning usepreviousappdir usepreviousgroup \
usepreviouslanguage usepreviousprivileges useprevioussetuptype \
useprevioustasks useprevioususerinfo userinfopage usesetupldr \
versioninfocompany versioninfocopyright versioninfodescription \
versioninfooriginalfilename versioninfoproductname \
versioninfoproducttextversion versioninfoproductversion \
versioninfotextversion versioninfoversion windowresizable \
windowshowcaption windowstartmaximized windowvisible \
wizardimagealphaformat wizardimagefile wizardimagestretch \
wizardresizable wizardsizepercent wizardsmallimagefile wizardstyle

keywords3.$(file.patterns.inno)=\
afterinstall appusermodelid appusermodeltoastactivatorclsid attribs \
beforeinstall check comment components description destdir destname \
excludes externalsize extradiskspacerequired filename flags \
fontinstall groupdescription hotkey iconfilename iconindex \
infoafterfile infobeforefile key languages licensefile messagesfile \
minversion name onlybelowversion parameters permissions root runonceid \
section source statusmsg string strongassemblyname subkey tasks type \
types valuedata valuename valuetype verb workingdir

keywords4.$(file.patterns.inno)=\
append define dim elif else emit endif endsub error expr file for if \
ifdef ifexist ifndef ifnexist include insert pragma redim sub undef

keywords5.$(file.patterns.inno)=\
and begin break case const continue do downto else end except exit \
false finally for function if not of on or procedure repeat then to \
true try type until uses var while with

keywords6.$(file.patterns.inno)=


style.inno.0=
style.inno.1=$(colour.number),$(font.comment)
style.inno.2=$(colour.keyword)
style.inno.3=$(colour.keyword)
style.inno.4=back:#FFFFC0
style.inno.5=$(colour.preproc)
style.inno.6=$(colour.preproc)
style.inno.7=$(colour.code.comment.line),$(font.comment)
style.inno.8=$(colour.keyword)
style.inno.9=$(colour.keyword)
style.inno.10=$(colour.string)
style.inno.11=$(colour.char)
style.inno.12=$(colour.notused)



module json

file.patterns.json=*.json;*.eslintrc;*.jshintrc;*.jsonld
*source.patterns.json=$(file.patterns.json);

filter.json=JSON (json eshintrc jshintrc)|$(file.patterns.json)|
*filter.json=$(filter.json)

lexer.$(file.patterns.json)=json
name.$(file.patterns.json)=json

*language.json=JSON|json||

lexer.json.allow.comments=1
lexer.json.escape.sequence=1

keywords.$(file.patterns.json)=false true null

keywords2.$(file.patterns.json)=@id @context @type @value @language @container \
@list @set @reverse @index @base @vocab @graph

style.json.0=fore:FFFFFF
style.json.1=fore:#007F7F
style.json.2=fore:#7F0000
style.json.3=fore:#FFFFFF,back:#FF0000,eolfilled
style.json.4=fore:#880AE8
style.json.5=fore:#0B982E
style.json.6=fore:#05BBAE,italics
style.json.7=$(style.json.6)
style.json.8=fore:#18644A
style.json.9=fore:#0000FF
style.json.10=fore:#D137C1
style.json.11=fore:#0BCEA7,bold
style.json.12=fore:#EC2806
style.json.13=fore:#FFFFFF,back:#FF0000

module kix

file.patterns.kix=*.kix
filter.kix=Kix-Script (kix)|$(file.patterns.kix)|

*filter.kix=$(filter.kix)

lexer.$(file.patterns.kix)=kix
name.$(file.patterns.kix)=kix

*language.kix=KiXtart|kix||

keywords.$(file.patterns.kix)=? and beep big break call cd cls color cookie1 copy \
	debug del dim display do until exit flushkb for each next function endfunction \
	get gets global go gosub goto if else endif md or password play quit \
	rd redim return run select case endselect set setl setm settime \
	shell sleep small use while loop

keywords2.$(file.patterns.kix)=abs addkey addprinterconnection addprogramgroup \
	addprogramitem asc ascan at backupeventlog box cdbl chr cint cleareventlog \
	close comparefiletimes createobject cstr dectohex delkey delprinterconnection \
	delprogramgroup delprogramitem deltree delvalue dir enumgroup enumipinfo enumkey \
	enumlocalgroup enumvalue execute exist existkey expandenvironmentvars fix \
	formatnumber freefilehandle getdiskspace getfileattr getfilesize getfiletime \
	getfileversion getobject iif ingroup instr instrrev int isdeclared join \
	kbhit keyexist lcase left len loadhive loadkey logevent logoff ltrim \
	memorysize messagebox open readline readprofilestring readtype readvalue \
	redirectoutput right rnd round rtrim savekey sendkeys sendmessage setascii \
	setconsole setdefaultprinter setfileattr setfocus setoption setsystemstate \
	settitle setwallpaper showprogramgroup shutdown sidtoname split srnd substr \
	trim ubound ucase unloadhive val vartype vartypename writeline \
	writeprofilestring writevalue

keywords3.$(file.patterns.kix)=address build color comment cpu crlf csd curdir \
	date day domain dos error fullname homedir homedrive homeshr hostname \
	inwin ipaddress0 ipaddress1 ipaddress2 ipaddress3 kix lanroot ldomain \
	ldrive lm logonmode longhomedir lserver maxpwage mdayno mhz monthno \
	month msecs pid primarygroup priv productsuite producttype pwage ras \
	result rserver scriptdir scriptexe scriptname serror sid site startdir \
	syslang ticks time userid userlang wdayno wksta wuserid ydayno year

comment.block.kix=;
comment.block.at.line.start.kix=1

style.kix.0=fore:#000000,$(font.vbs)
style.kix.1=$(colour.code.comment.line),$(font.code.comment.line)
style.kix.2=$(colour.string)
style.kix.3=$(colour.string)
style.kix.4=$(colour.number)
style.kix.5=fore:#B00040
style.kix.6=$(colour.preproc)
style.kix.7=$(colour.keyword),bold
style.kix.8=$(colour.keyword)
style.kix.9=$(colour.operator),bold
style.kix.10=$(colour.code.comment.box),$(font.code.comment.box)
style.kix.31=


tab.size.$(file.patterns.kix)=6
indent.size.$(file.patterns.kix)=3
use.tabs.$(file.patterns.kix)=1

statement.indent.$(file.patterns.kix)=7 if else for do while function case


module lisp

file.patterns.lisp=*.lsp;*.lisp

filter.lisp=LISP (lsp lisp)|$(file.patterns.lisp)|

file.patterns.scheme=*.scm;*.smd;*.ss
filter.scheme=Scheme (scm smd)|$(file.patterns.scheme)|


lexer.$(file.patterns.lisp)=lisp
lexer.$(file.patterns.scheme)=lisp

name.$(file.patterns.lisp)=lisp
name.$(file.patterns.scheme)=scheme

*language.lisp=LISP|lisp||
*language.scheme=Scheme|scm||

keywords.$(file.patterns.lisp)= not defun + - * / = < > <= >= princ \
eval apply funcall quote identity function complement backquote lambda set setq setf \
defun defmacro gensym make symbol intern symbol name symbol value symbol plist get \
getf putprop remprop hash make array aref car cdr caar cadr cdar cddr caaar caadr cadar \
caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr cons list append reverse last nth \
nthcdr member assoc subst sublis nsubst  nsublis remove length list length \
mapc mapcar mapl maplist mapcan mapcon rplaca rplacd nconc delete atom symbolp numberp \
boundp null listp consp minusp zerop plusp evenp oddp eq eql equal cond case and or let l if prog \
prog1 prog2 progn go return do dolist dotimes catch throw error cerror break \
continue errset baktrace evalhook truncate float rem min max abs sin cos tan expt exp sqrt \
random logand logior logxor lognot bignums logeqv lognand lognor \
logorc2 logtest logbitp logcount integer length nil

word.chars.lisp=$(chars.alpha)$(chars.numeric)_-<>.#+@$%^&=*!?
word.characters.$(file.patterns.lisp)=$(word.chars.lisp)

keywords.$(file.patterns.scheme)= + - * / = < > <= >= => \
abs acos and angle append apply asin assoc assoc assq assv atan \
begin boolean? \
caar cadr call-with-current-continuation call/cc \
call-with-input-file call-with-output-file call-with-values \
car cdr \
caar cadr cdar cddr \
caaar caadr cadar caddr cdaar cdadr cddar cdddr \
caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr \
case ceiling char->integer \
char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? \
char-downcase char-lower-case? char-numeric? char-ready? \
char-upcase char-upper-case? char-whitespace? \
char<=? char<? char=? char>=? char>? char? \
close-input-port close-output-port complex? cond cons cos \
current-input-port current-output-port \
define define-syntax delay denominator display do dynamic-wind \
else eof-object? eq? equal? eqv? eval even? exact->inexact exact? \
exp expt \
floor for-each force \
gcd \
if imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment \
lambda lcm length let let* let-syntax letrec letrec-syntax \
list list->string list->vector list-ref list-tail list? load log \
magnitude make-polar make-rectangular make-string make-vector \
map max member memq memv min modulo \
negative? newline not null-environment null? number->string number? numerator \
odd? open-input-file open-output-file or output-port? \
pair? peek-char input-port? output-port? positive? procedure? \
quasiquote quote quotient \
rational? rationalize read read-char real-part real? remainder reverse round \
scheme-report-environment set! set-car! set-cdr! sin sqrt string \
string->list string->number string->symbol string-append \
string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? \
string-copy string-fill! string-length string-ref string-set! \
string<=? string<? string=? string>=? string>? string? \
substring symbol->string symbol? syntax-rules \
transcript-off transcript-on truncate \
unquote unquote-splicing \
values vector vector->list vector-fill! vector-length vector-ref vector-set! vector? \
with-input-from-file with-output-to-file write write-char \
zero?

word.chars.scheme=$(chars.alpha)$(chars.numeric)!$%&*/:<=>?^_~+-.@
word.characters.$(file.patterns.scheme)=$(word.chars.scheme)


comment.block.lisp=;
comment.box.start.lisp=;;
comment.box.middle.lisp=;;
comment.box.end.lisp=;;



style.lisp.32=$(font.base)
style.lisp.0=fore:#808080
style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.lisp.2=$(colour.number)
style.lisp.3=$(colour.keyword),bold
style.lisp.4=fore:#EE00AA
style.lisp.5=fore:#DD9900
style.lisp.6=$(colour.string)
style.lisp.10=$(colour.operator),bold
style.lisp.9=
style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
style.lisp.11=fore:#60AA00
style.lisp.12=$(colour.code.comment.box),$(font.code.comment.box)
style.lisp.34=fore:#0000FF,bold
style.lisp.35=fore:#FF0000,bold
braces.lisp.style=10


module lot
file.patterns.lot=*.lot

filter.lot=Lot (lot)|$(file.patterns.lot)|

*filter.lot=$(filter.lot)

lexer.$(file.patterns.lot)=lot
name.$(file.patterns.lot)=lot

*language.lot=LOT|lot||

word.characters.$(file.patterns.lot)=$(chars.alpha)$(chars.numeric)

style.lot.0=fore:#000000
style.lot.1=back:#00F0FF,eolfilled
style.lot.2=back:#FFFF00,eolfilled
 style.lot.3=fore:#FFFFFF,back:#0000FF,bold,eolfilled
 style.lot.4=back:#00FF00,eolfilled
style.lot.5=back:#FF0000,eolfilled,bold
style.lot.6=back:#0000FF,bold,eolfilled

module lout

file.patterns.lout=*.lt

filter.lout=Lout (lt)|*.lt|

*filter.lout=$(filter.lout)

lexer.$(file.patterns.lout)=lout
name.$(file.patterns.lout)=lout

*language.lout=Lout|lt||

keywords.$(file.patterns.lout)= \
@OptGall @FontDef @Family @Face @Name @Metrics @ExtraMetrics \
@Mapping @Recode @Filter @FilterIn @FilterOut @FilterErr \
@Common @Rump @Meld @Insert @OneOf @Next @Plus @Minus @Wide \
@High @HShift @VShift @BeginHeaderComponent @EndHeaderComponent \
@SetHeaderComponent @ClearHeaderComponent @OneCol @OneRow \
@HMirror @VMirror @HScale @VScale @HCover @VCover @Scale \
@KernShrink @HContract @VContract @HLimited @VLimited @HExpand \
@VExpand @StartHVSpan @StartHSpan @StartVSpan @HSpan @VSpan \
@PAdjust @HAdjust @VAdjust @Rotate @Background @IncludeGraphic \
@SysIncludeGraphic @Graphic @LinkSource @LinkDest @URLLink \
@PlainGraphic @Verbatim @RawVerbatim @Case @Yield @BackEnd \
@Char @Font @Space @YUnit @ZUnit @Break @Underline @SetColour \
@SetColor @SetUnderlineColour @SetUnderlineColor @SetTexture \
@Outline @Language @CurrLang @CurrFamily @CurrFace @CurrYUnit \
@CurrZUnit @LEnv @@A @@B @@C @@D @@E @LClos @@V @LUse @LEO \
@Open @Use @NotRevealed @Tagged @Database @SysDatabase \
@Include @SysInclude @IncludeGraphicRepeated \
@SysIncludeGraphicRepeated @PrependGraphic @SysPrependGraphic \
@Target @Null @PageLabel @Galley @ForceGalley @LInput @Split \
@Tag @Key @Optimize @Merge @Enclose @Begin @End @Moment \
@Second @Minute @Hour @Day @Month @Year @Century @WeekDay \
@YearDay @DaylightSaving @SetContext @GetContext

keywords2.$(file.patterns.lout)= &&& && & ^// ^/ ^|| ^| ^& // / || |

keywords3.$(file.patterns.lout)= def langdef force horizontally into \
extend import export precedence associativity left right body macro \
named compulsory following preceding foll_or_prec now

comment.block.lout=#~

indent.maintain.$(file.patterns.lout)=1


style.lout.32=$(font.base)
style.lout.0=fore:#808080
style.lout.1=$(colour.code.comment.line),$(font.code.comment.line)
style.lout.2=$(colour.number)
style.lout.3=$(colour.keyword),bold
style.lout.4=$(colour.keyword),bold
style.lout.5=$(colour.keyword),bold
style.lout.6=$(colour.keyword)
style.lout.7=$(colour.string)
style.lout.8=$(colour.operator),bold
style.lout.9=
style.lout.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
braces.lout.style=8



module lua

file.patterns.lua=*.lua

*source.patterns.lua=$(file.patterns.lua);

shbang.lua=lua

filter.lua=Lua (lua)|$(file.patterns.lua)|

*filter.lua=$(filter.lua)

lexer.$(file.patterns.lua)=lua
name.$(file.patterns.lua)=lua

*language.lua=Lua|lua||

word.chars.lua=$(chars.alpha)$(chars.numeric)$(chars.accented)_%
word.characters.$(file.patterns.lua)=$(word.chars.lua)


keywordclass.lua4=\
and break do else elseif \
end for function if in \
local nil not or repeat \
return then until while

keywordclass2.lua4=\
_ALERT assert call collectgarbage copytagmethods \
dofile dostring error foreach foreachi \
gcinfo getglobal getn gettagmethod globals \
newtag next print rawget rawset \
setglobal settag settagmethod sort tag \
tonumber tostring tinsert tremove type \
_VERSION _ERRORMESSAGE

keywordclass3.lua4=\
strbyte strchar strfind strlen strlower \
strrep strsub strupper format gsub \
abs acos asin atan atan2 \
ceil cos deg exp floor \
log log10 max min mod \
rad sin sqrt tan frexp \
ldexp random randomseed PI

keywordclass4.lua4=\
openfile closefile readfrom writeto appendto \
remove rename flush seek tmpname read write \
clock date execute exit getenv setlocale \
_INPUT _OUTPUT _STDIN _STDOUT _STDERR -- file descriptors

keywordclass5.lua4=\
getinfo getlocal setlocal setcallhook setlinehook


keywordclass.lua50=$(keywordclass.lua4) false true

keywordclass2.lua5=\
assert collectgarbage dofile error _G \
getmetatable ipairs loadfile next pairs \
pcall print rawequal rawget rawset \
setmetatable tonumber tostring type _VERSION \
xpcall string table math coroutine io os debug

keywordclass2.lua50=$(keywordclass2.lua5) \
getfenv gcinfo loadlib loadstring require \
setfenv unpack _LOADED LUA_PATH _REQUIREDNAME

keywordclass3.lua5=\
string.byte string.char string.dump string.find string.format \
string.gsub string.len string.lower string.rep string.sub string.upper \
table.concat table.insert table.remove table.sort \
math.abs math.acos math.asin math.atan math.atan2 \
math.ceil math.cos math.deg math.exp math.floor \
math.frexp math.ldexp math.log math.max math.min \
math.pi math.pow math.rad math.random math.randomseed \
math.sin math.sqrt math.tan

keywordclass3.lua50=$(keywordclass3.lua5) \
string.gfind \
table.foreach table.foreachi table.getn table.setn \
math.mod math.log10

keywordclass4.lua50=\
coroutine.create coroutine.resume coroutine.status coroutine.wrap coroutine.yield \
io.close io.flush io.input io.lines io.open \
io.output io.read io.tmpfile io.type io.write \
io.stdin io.stdout io.stderr \
os.clock os.date os.difftime os.execute os.exit \
os.getenv os.remove os.rename os.setlocale os.time \
os.tmpname

keywordclass5.lua50=\
debug.debug debug.gethook debug.getinfo debug.getlocal debug.getupvalue \
debug.setlocal debug.setupvalue debug.sethook debug.traceback


keywordclass.lua51=$(keywordclass.lua50)

keywordclass2.lua51=$(keywordclass2.lua5) \
getfenv load loadstring select \
setfenv unpack package

keywordclass3.lua51=$(keywordclass3.lua5) \
string.gmatch string.match string.reverse \
table.maxn \
math.cosh math.fmod math.huge math.log10 math.modf \
math.sinh math.tanh

keywordclass4.package=\
require package.cpath package.loaded \
package.loadlib package.path package.preload

keywordclass4.lua51=$(keywordclass4.lua50) \
coroutine.running io.popen \
module package.loaders package.seeall \
$(keywordclass4.package)

keywordclass5.lua51=$(keywordclass5.lua50) \
debug.getfenv debug.getmetatable debug.getregistry debug.setfenv debug.setmetatable


keywordclass.lua52=$(keywordclass.lua50) goto

keywordclass2.lua52=$(keywordclass2.lua5) \
load rawlen select package bit32 _ENV

keywordclass3.bit32=\
bit32.arshift bit32.band bit32.bnot bit32.bor bit32.btest \
bit32.bxor bit32.extract bit32.replace bit32.lrotate bit32.lshift \
bit32.rrotate bit32.rshift

keywordclass3.lua52=$(keywordclass3.lua5) \
string.gmatch string.match string.reverse \
table.pack table.unpack \
math.cosh math.fmod math.huge math.modf math.sinh math.tanh \
$(keywordclass3.bit32)

keywordclass4.lua52=$(keywordclass4.lua50) \
coroutine.running io.popen \
package.config package.searchers package.searchpath \
$(keywordclass4.package)

keywordclass5.lua52=$(keywordclass5.lua50) \
debug.getmetatable debug.getregistry debug.setmetatable \
debug.getuservalue debug.setuservalue debug.upvalueid debug.upvaluejoin


keywordclass.lua53=$(keywordclass.lua50) goto

keywordclass2.lua53=$(keywordclass2.lua5) \
load rawlen select package utf8 _ENV

keywordclass3.utf8=\
utf8.char utf8.charpattern utf8.codes \
utf8.codepoint utf8.len utf8.offset

keywordclass3.lua53=\
string.byte string.char string.dump string.find string.format \
string.gmatch string.gsub string.len string.lower string.match \
string.pack string.packsize string.rep \
string.reverse string.sub string.unpack string.upper \
table.concat table.insert table.move table.pack \
table.remove table.sort table.unpack \
math.abs math.acos math.asin math.atan \
math.ceil math.cos math.deg math.exp \
math.floor math.fmod math.huge \
math.log math.max math.maxinteger math.min math.mininteger \
math.modf math.pi math.rad \
math.random math.randomseed math.sin \
math.sqrt math.tan \
math.tointeger math.type math.ult \
$(keywordclass3.utf8)

keywordclass4.lua53=$(keywordclass4.lua50) \
coroutine.isyieldable coroutine.running io.popen \
package.config package.searchers package.searchpath \
$(keywordclass4.package)

keywordclass5.lua53=$(keywordclass5.lua52)


keywordclass.lua5x=$(keywordclass.lua53)

keywordclass2.lua5x=$(keywordclass2.lua5) \
getfenv gcinfo load loadlib loadstring \
require select setfenv unpack \
_LOADED LUA_PATH _REQUIREDNAME \
package rawlen package bit32 utf8 _ENV

keywordclass3.lua5x=$(keywordclass3.lua5) \
string.gfind string.gmatch string.match string.reverse \
string.pack string.packsize string.unpack \
table.foreach table.foreachi table.getn table.setn \
table.maxn table.pack table.unpack table.move \
math.cosh math.fmod math.huge math.log10 math.modf \
math.mod math.sinh math.tanh math.maxinteger math.mininteger \
math.tointeger math.type math.ult \
$(keywordclass3.bit32) \
$(keywordclass3.utf8)

keywordclass4.lua5x=$(keywordclass4.lua50) \
coroutine.isyieldable coroutine.running io.popen \
module package.loaders package.seeall \
package.config package.searchers package.searchpath \
$(keywordclass4.package)

keywordclass5.lua5x=$(keywordclass5.lua50) \
debug.getfenv debug.getmetatable debug.getregistry debug.setfenv debug.setmetatable \
debug.getuservalue debug.setuservalue debug.upvalueid debug.upvaluejoin

keywords.$(file.patterns.lua)=$(keywordclass.lua5x)
keywords2.$(file.patterns.lua)=$(keywordclass2.lua5x)
keywords3.$(file.patterns.lua)=$(keywordclass3.lua5x)
keywords4.$(file.patterns.lua)=$(keywordclass4.lua5x)


indent.maintain.$(file.patterns.lua)=1

comment.block.lua=--~
comment.block.at.line.start.lua=1


style.lua.32=$(font.code.base),fore:#000000
style.lua.0=fore:#FF0000
style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#D0F0F0,eolfilled
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)
style.lua.3=$(colour.notused),$(font.notused)
style.lua.4=$(colour.number)
style.lua.5=$(colour.keyword)
style.lua.6=$(colour.string)
style.lua.7=$(colour.char)
style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
style.lua.9=$(colour.preproc)
style.lua.10=$(colour.operator)
style.lua.11=
style.lua.12=back:#E0C0E0,eolfilled
style.lua.13=$(style.lua.5),back:#F5FFF5
style.lua.14=$(style.lua.5),back:#F5F5FF
style.lua.15=$(style.lua.5),back:#FFF5F5
style.lua.16=$(style.lua.5),back:#FFF5FF
style.lua.17=$(style.lua.5),back:#FFFFF5
style.lua.18=$(style.lua.5),back:#FFA0A0
style.lua.19=$(style.lua.5),back:#FFF5F5
style.lua.20=fore:#7F7F00
braces.lua.style=10


module matlab

DEFAULT_M_LEXER_OCTAVE=1
DEFAULT_M_LEXER_MATLAB=0


file.patterns.octave=*.m.octave
	#~ file.patterns.octave=*.m;$(file.patterns.octave)
file.patterns.matlab=*.m;*.m.octave

filter.octave=Octave (m)|$(file.patterns.octave)|

lexer.$(file.patterns.octave)=octave


keywordclass.octave=\
__FILE__ \
__LINE__ \
break \
case \
catch \
classdef \
continue \
do \
else \
elseif \
end \
end_try_catch \
end_unwind_protect \
endclassdef \
endenumeration \
endevents \
endfor \
endif \
endmethods \
endparfor \
endproperties \
endswitch \
endwhile \
enumeration \
events \
for \
function endfunction \
get \
global \
if \
methods \
otherwise \
parfor \
persistent \
properties \
return \
set \
static \
switch \
try \
until \
unwind_protect \
unwind_protect_cleanup \
while

keywords.$(file.patterns.octave)=$(keywordclass.octave)

comment.block.octave=#

style.octave.0=fore:#000000
style.octave.1=$(colour.code.comment.line),$(font.code.comment.line)
style.octave.2=$(colour.preproc)
style.octave.3=$(colour.number)
style.octave.4=$(colour.keyword),bold
style.octave.5=$(colour.string)
style.octave.8=$(colour.string)
style.octave.6=$(colour.operator),bold
style.octave.7=


file.patterns.matlab=*.m_matlab
	#~ file.patterns.matlab=*.m;$(file.patterns.matlab)
filter.matlab=Matlab (m)|$(file.patterns.matlab)|

*filter.matlab=$(filter.matlab)

lexer.$(file.patterns.matlab)=matlab
name.$(file.patterns.matlab)=matlab

*language.matlab=Matlab|m_matlab||

keywordclass.matlab=break case catch continue else elseif end for function \
global if otherwise persistent return switch try while

keywords.$(file.patterns.matlab)=$(keywordclass.matlab)

comment.block.matlab=%~

style.matlab.0=fore:#000000
style.matlab.1=$(colour.code.comment.line),$(font.code.comment.line)
style.matlab.2=$(colour.preproc)
style.matlab.3=$(colour.number)
style.matlab.4=$(colour.keyword),bold
style.matlab.5=$(colour.string)
style.matlab.8=$(colour.string)
style.matlab.6=$(colour.operator),bold
style.matlab.7=


module metapost


file.patterns.metapost=*.mp;*.mpx
file.patterns.metafun=*.mp;*.mpx;*.mpy

filter.metapost=MetaPost (mp mpx)|$(file.patterns.metapost)|
filter.metafun=MetaFun (mp mpx mpy)|$(file.patterns.metafun)|

*filter.metapost=$(filter.metapost)

lexer.$(file.patterns.metapost)=metapost
lexer.$(file.patterns.metafun)=metapost

name.$(file.patterns.metapost)=metapost
name.$(file.patterns.metafun)=metapost

*language.metapost=Metapost|mp||




style.metapost.0=fore:#3F3F3F
style.metapost.1=fore:#007F7F
style.metapost.2=fore:#7F0000
style.metapost.3=fore:#7F7F00
style.metapost.4=fore:#007F00
style.metapost.5=fore:#000000
style.metapost.6=fore:#007F00,italics

style.metapost.34=fore:#00007F
style.metapost.35=fore:#7F007F


comment.block.metapost=%
comment.block.at.line.start.metapost=1


lexer.metapost.interface.default=1


lexer.metapost.comment.process=0


keywordclass.metapost.tex=\
    btex verbatimtex etex

keywordclass.metapost.primitives=\
    charcode day linecap linejoin miterlimit month pausing \
    prologues showstopping time tracingcapsules tracingchoices \
    tracingcommands tracingequations tracinglostchars \
    tracingmacros tracingonline tracingoutput tracingrestores \
    tracingspecs tracingstats tracingtitles truecorners \
    warningcheck year \
    false nullpicture pencircle true \
    and angle arclength arctime ASCII bluepart boolean bot \
    char color cosd cycle decimal directiontime floor fontsize \
    greenpart hex infont intersectiontimes known length llcorner \
    lrcorner makepath makepen mexp mlog normaldeviate not \
    numeric oct odd or path pair pen penoffset picture point \
    postcontrol precontrol redpart reverse rotated scaled \
    shifted sind slanted sqrt str string subpath substring \
    transform transformed ulcorner uniformdeviate unknown \
    urcorner xpart xscaled xxpart xypart ypart yscaled yxpart \
    yypart zscaled \
    addto clip input interim let newinternal save setbounds \
    shipout show showdependencies showtoken showvariable \
    special \
    begingroup endgroup of curl tension and controls \
    reflectedabout rotatedaround interpath on off beginfig \
    endfig def vardef enddef epxr suffix text primary secondary \
    tertiary primarydef secondarydef tertiarydef top bottom \
    ulft urt llft lrt randomseed also contour doublepath \
    withcolor withpen dashed if else elseif fi for endfor forever exitif \
    forsuffixes downto upto step until \
    charlist extensible fontdimen headerbyte kern ligtable \
    boundarychar chardp charext charht charic charwd designsize \
    fontmaking charexists \
    cullit currenttransform gfcorners grayfont hround \
    imagerules lowres_fix nodisplays notransforms openit \
    displaying currentwindow screen_rows screen_cols \
    pixels_per_inch cull display openwindow numspecial \
    totalweight autorounding fillin proofing tracingpens \
    xoffset chardx granularity smoothing turningcheck yoffset \
    chardy hppp tracingedges vppp \
    extra_beginfig extra_endfig mpxbreak \
    end

keywordclass.metapost.plain=\
    ahangle ahlength bboxmargin defaultpen defaultscale \
    labeloffset background currentpen currentpicture cuttings \
    defaultfont extra_beginfig extra_endfig \
    beveled black blue bp butt cc cm dd ditto down epsilon \
    evenly fullcircle green halfcircle identity in infinity left \
    mitered mm origin pensquare pt quartercircle red right \
    rounded squared unitsquare up white withdots \
    abs bbox ceiling center cutafter cutbefore dir \
    directionpoint div dotprod intersectionpoint inverse mod lft \
    round rt unitvector whatever \
    cutdraw draw drawarrow drawdblarrow fill filldraw drawdot \
    loggingall pickup tracingall tracingnone undraw unfill \
    unfilldraw \
    buildcycle dashpattern decr dotlabel dotlabels drawoptions \
    incr label labels max min thelabel z \
    beginchar blacker capsule_end change_width \
    define_blacker_pixels define_corrected_pixels \
    define_good_x_pixels define_good_y_pixels \
    define_horizontal_corrected_pixels define_pixels \
    define_whole_blacker_pixels define_whole_pixels \
    define_whole_vertical_blacker_pixels \
    define_whole_vertical_pixels endchar extra_beginchar \
    extra_endchar extra_setup font_coding_scheme\
    font_extra_space

keywordclass.metapost.all=\
    $(keywordclass.metapost.tex) \
    $(keywordclass.metapost.primitives) \
    $(keywordclass.metapost.plain)

keywordclass.metafun.all=

keywords.$(file.patterns.metapost)=$(keywordclass.metapost.all)

keywords.$(file.patterns.metafun)=$(keywordclass.metapost.all)
keywords2.$(file.patterns.metafun)=$(keywordclass.metafun.all)

keywords4.$(file.patterns.metapost)=beginfig for verbatimtex def begingroup \
    if btex forsuffixes vardef primarydef
keywords5.$(file.patterns.metapost)=etex fi endfig endgroup end endfor endif \
    enddef

import metafun-scite.properties


module mmixal


file.patterns.mmixal=*.mms
filter.mmixal=MMIXAL (mms)|$(file.patterns.mmixal)|
*filter.mmixal=$(filter.mmixal)

lexer.$(file.patterns.mmixal)=mmixal
name.$(file.patterns.mmixal)=mmixal

*language.mmixal=MMIXAL|mms||

opcodes=2ADDU 4ADDU 8ADDU 16ADDU ADD ADDU AND ANDNH ANDNL ANDNMH ANDNML \
	BDIF BEV BN BNN BNP BNZ BOD BP BSPEC BYTE BZ CMP CMPU CSEV CSN CSNN CSNP CSNZ CSOD CSP CSWAP CSZ \
	DIV DIVU ESPEC EXPR FADD FCMP FCMPE FDIV FEQL FEQLE FIX FIXU FLOT FLOTU FMUL FREM FSQRT FSUB FUN FUNE \
	GET GETA GO GREG I_BIT INCH INCL INCMH INCML IS JMP LDA LDB LDBU LDHT LDO LDOU LDSF LDT LDTU LDUNC LDVTS LDW LDWU LOC LOCAL \
	MOR MUL MULU MUX MXOR NAND NEG NEGU NNIX NOR NXOR O_BIT OCTA ODIF OR ORH ORL ORMH ORML ORN \
	PBEV PBN PBNN PBNP PBNZ PBOD PBP PBZ POP PREFIX PREGO PRELD PREST PUSHGO PUSHJ PUT \
	RESUME SAVE SET SETH SETL SETMH SETML SFLOT SFLOTU SL SLU SR SRU \
	STB STBU STCO STHT STO STOU STSF STT STTU STUNC STW STWU SUB SUBU SWYM SYNC SYNCD TDIF TETRA TRAP TRIP UNSAVE \
	WDIF WYDEXOR ZSEV ZSN ZSNN ZSNP ZSNZ ZSOD ZSP ZSZ

special_register=rA rB rC rD rE rF rG rH rI rJ rK rL rM rN rO rP rQ rR rS rT rU rV rW rX rY rZ rBB rTT rWW rXX rYY rZZ

predef_symbols=@ Text_Segment Data_Segment Pool_Segment Stack_Segment \
	StdErr StdIn StdOut \
	Fopen Fclose Fread Fwrite Fgets Fputs Fgetws Fputws Ftell Fseek \
	TextRead TextWrite BinaryRead BinaryWrite BinaryReadWrite

keywords.$(file.patterns.mmixal)=$(opcodes)
keywords2.$(file.patterns.mmixal)=$(special_register)
keywords3.$(file.patterns.mmixal)=$(predef_symbols)

style.mmixal.0=
style.mmixal.1=$(colour.code.comment.line),$(font.code.comment.line)
style.mmixal.2=$(font.base)
style.mmixal.3=
style.mmixal.4=
style.mmixal.5=$(colour.keyword),bold
style.mmixal.6=$(colour.error)
style.mmixal.7=
style.mmixal.8=
style.mmixal.9=$(colour.number)
style.mmixal.10=$(font.base)
style.mmixal.11=$(colour.char)
style.mmixal.12=$(colour.string)
style.mmixal.13=fore:#7F007F
style.mmixal.14=fore:#7F0000
style.mmixal.15=bold
style.mmixal.16=fore:#FF7777
style.mmixal.17=$(colour.code.comment.line),$(font.code.comment.line)

comment.block.mmixal=%

tab.size.$(file.patterns.mmixal)=16
indent.size.$(file.patterns.mmixal)=16


module modula3

file.patterns.m3=*.m3;*.mg;*.i3;*.ig

filter.modula3=Modula-3 (m3 i3 mg ig)|$(file.patterns.m3)|
*filter.modula3=$(filter.modula3)
lexer.$(file.patterns.m3)=modula
name.$(file.patterns.m3)=modula3
*language.modula3=Modula-3|m3||

keywords.$(file.patterns.m3)=AND ANY ARRAY AS BEGIN BITS BRANDED BY CASE CONST\
	DIV DO ELSE ELSIF END EVAL EXCEPT EXCEPTION EXIT EXPORTS FINALLY FOR FROM\
	GENERIC IF IMPORT IN INTERFACE LOCK LOOP METHODS MOD MODULE NOT OBJECT OF\
	OR OVERRIDES PROCEDURE RAISE RAISES READONLY RECORD REF REPEAT RETURN\
	REVEAL ROOT SET THEN TO TRY TYPE TYPECASE UNSAFE UNTIL UNTRACED VALUE VAR\
	WHILE WITH

keywords2.$(file.patterns.m3)=ABS ADDRESS ADR ADRSIZE BITSIZE BOOLEAN BYTESIZE\
	CARDINAL CEILING CHAR DEC DISPOSE EXTENDED FALSE FIRST FLOAT FLOOR INC\
	INTEGER ISTYPE LAST LONGINT LONGREAL LOOPHOLE MAX MIN MUTEX NARROW NEW NIL\
	NULL NUMBER ORD REAL REFANY ROUND SUBARRAY TEXT TRUE TRUNC TYPECODE VAL\
	WIDECHAR

keywords3.$(file.patterns.m3)= + < # = ; .. : - > { } | := <: * <= ( ) ^ , =>\
	/ >= [ ] . &

keywords4.$(file.patterns.m3)= EXTERNAL INLINE ASSERT TRACE FATAL UNUSED\
	OBSOLETE NOWARN LINE PRAGMA

keywords5.$(file.patterns.m3)= f n r t \ " '

keywords6.$(file.patterns.m3)= author authors file brief date proc param result

font.module.base=$(font.base)
font.modula.code=font:$(font.module.base),size:10
font.modula.comment=font:$(font.module.base),size:10,italics
font.modula.doxykey=font:$(font.module.base),size:10,bold,italics
font.modula.keywords=font:$(font.module.base),size:10,bold
font.modula.reserved=font:$(font.module.base),size:10
font.modula.strings=font:$(font.module.base),size:10,italics
font.modula.strspec=font:$(font.module.base),size:10,bold,italics
font.modula.char=font:$(font.module.base),size:10,italics
font.modula.charspec=font:$(font.module.base),size:10,bold,italics
font.modula.badstr=font:$(font.module.base),size:10,bold

style.modula.0=fore:#383838,$(font.modula.code)

style.modula.1=fore:#008000,$(font.modula.comment)

style.modula.2=fore:#3F5FBF,$(font.modula.comment)

style.modula.3=fore:#3F5FBF,$(font.modula.doxykey)

style.modula.4=fore:#000080,$(font.modula.keywords)

style.modula.5=fore:#0000C0,$(font.modula.reserved)

style.modula.6=fore:#006600,$(font.modula.code)

style.modula.7=fore:#3F0066,$(font.modula.code)

style.modula.8=fore:#006665,$(font.modula.code)

style.modula.9=fore:#FE9800,$(font.modula.strings)

style.modula.10=fore:#E38800,$(font.modula.strspec)

style.modula.11=fore:#FE9800,$(font.modula.char)

style.modula.12=fore:#E38800,$(font.modula.charspec)

style.modula.13=fore:#BF00B0,$(font.modula.code)

style.modula.14=fore:#BF00B0,$(font.modula.code)

style.modula.15=fore:#BF00B0,$(font.modula.keywords)

style.modula.16=fore:#000080,$(font.modula.code)

style.modula.17=fore:#FF0000,$(font.modula.badstr)


module nimrod

file.patterns.nimrod=*.nim

shbang.nimrod=nim

filter.nimrod=Nimrod (nim)|$(file.patterns.nimrod)|

*filter.nimrod=$(filter.nimrod)

lexer.$(file.patterns.nimrod)=nimrod
name.$(file.patterns.nimrod)=nimrod

*language.nimrod=Nimrod|nim||

keywordclass.nimrod=addr and as asm \
block break \
case cast const continue converter \
discard div \
elif else end enum except exception \
finally for from generic \
if implies import in include is isnot iterator \
lambda \
macro method mod \
nil not notin \
object of or out \
proc ptr \
raise ref return \
shl shr \
template try tuple type \
var \
when where while with without \
xor \
yield

keywords.$(file.patterns.nimrod)=$(keywordclass.nimrod)

statement.indent.$(file.patterns.nimrod)=5 elif else except finally of \
for if try while

statement.lookback.$(file.patterns.nimrod)=0
block.start.$(file.patterns.nimrod)=
block.end.$(file.patterns.nimrod)=

view.indentation.examine.*.nim=2


comment.block.nimrod=#~

style.nimrod.0=fore:#808080
style.nimrod.1=fore:#007F00,$(font.comment)
style.nimrod.2=fore:#007F7F
style.nimrod.3=fore:#7F007F,$(font.monospace)
style.nimrod.4=fore:#7F007F,$(font.monospace)
style.nimrod.5=fore:#00007F,bold
style.nimrod.6=fore:#7F0000
style.nimrod.7=fore:#7F0000
style.nimrod.8=fore:#0000FF,bold
style.nimrod.9=fore:#007F7F,bold
style.nimrod.10=bold
style.nimrod.11=
style.nimrod.12=fore:#7F7F7F
style.nimrod.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.nimrod.14=fore:#407090
style.nimrod.15=fore:#805000
style.nimrod.34=fore:#0000FF,bold
style.nimrod.35=fore:#FF0000,bold
braces.nimrod.style=10




module nncrontab

file.patterns.nncron=*.tab;*.spf

lexer.$(file.patterns.nncron)=nncrontab
name.$(file.patterns.nncron)=nnCron

*language.nnCron=nnCron|tab||

filter.nncrontab=nnCron files (tab spf)|$(file.patterns.nncron)|

*filter.nncrontab=$(filter.nncrontab)

word.characters.$(file.patterns.nncron)=$(chars.alpha)$(chars.numeric)%-

comment.block.nncrontab=\ 


keywords.$(file.patterns.nncron)=\
AGAIN ALLOT AND Action BEGIN CASE COMPARE CONSTANT CREATE DO Days ELSE \
ENDCASE ENDOF EVAL-SUBST EVALUATE FALSE Hours I IF LEAVE LOOP Minutes \
Months NOT OF OFF ON OR PAD REPEAT Rule SET THEN TRUE Time UNTIL VALUE \
VARIABLE WHILE WeekDays Years

keywords2.$(file.patterns.nncron)=\
</JScript> </SCRIPT> </VBScript> <JScript> <VBScript> ACCESS-DATE BEEP \
CALL_DIAL CALL_HANGUP CHAR CLIPBOARD CONSOLE CREATION-DATE CUR-DATE DATE- \
DATE-INTERVAL DELAY DIAL DIR-CREATE DIR-DELETE DIR-EMPTY DIR-SIZE Day@ \
Domain ERR-MSG EXIST FILE-ACCESS-DATE FILE-APPEND FILE-COPY FILE-CREATE \
FILE-CREATION-DATE FILE-CROP FILE-DATE FILE-DELETE FILE-EMPTY FILE-EXIST \
FILE-MOVE FILE-RENAME FILE-SIZE FILE-WRITE FILE-WRITE-DATE FOR-CHILD-WINDOWS \
FOR-FILES FOR-WINDOWS FREE-SPACE GET-CUR-TIME GET-REG GET-VER GetTickCount \
HANGUP HIDE-ICON HINT HINT-OFF HINT-POS HINT-SIZE HINTW HOST-EXIST Hour@ \
IDLE INTERVAL IS-ARCHIVE IS-DIR IS-HIDDEN IS-READONLY IS-SYSTEM KILL LAUNCH \
LOG LOGGEDON LOGOFF LogonBatch LogonInteractive LogonNetwork MOUSE-LBCLK \
MOUSE-LBDCLK MOUSE-LBDN MOUSE-LBUP MOUSE-MOVE MOUSE-MOVER MOUSE-MOVEW \
MOUSE-RBCLK MOUSE-RBDCLK MOUSE-RBDN MOUSE-RBUP MSG Min@ Mon@ \
MonitorResponseTime NHOST-EXIST No ONLINE PAUSE PLAY-SOUND PLAY-SOUNDW \
POP3-CHECK POWEROFF PROC-EXIST PROC-TIME PURGE-OLD PURGE-OLDA PURGE-OLDW \
Password QSTART-APP QSTART-APPW QUERY QUIT RASDomain RASError RASPassword \
RASPhone RASSecPassword RASUser RE-ALL RE-MATCH REBOOT REG-DELETE-KEY \
REG-DELETE-VALUE REG-DWORD REG-SZ REMINDER RUN SEND-KEYS SEND-KEYS-DELAY \
SHOW-ICON SHUTDOWN START-APP START-APPW START-QUIT START-TIME Sec@ \
SecPassword THINT THINTW TimeSec@ TMSG TQUERY User WDay@ WIN-ACTIVATE \
WIN-ACTIVE WIN-CLICK WIN-CLOSE WIN-EXIST WIN-HIDE WIN-HWND WIN-MAXIMIZE \
WIN-MINIMIZE WIN-MOVE WIN-MOVER WIN-RESTORE WIN-SEND-KEYS WIN-SHOW \
WIN-TERMINATE WIN-TOPMOST WIN-VER WIN-WAIT WINAPI WRITE-DATE WatchClipboard \
WatchConnect WatchDir WatchDisconnect WatchDriveInsert WatchDriveRemove \
WatchFile WatchProc WatchProcStop WatchWinActivate WatchWinCreate \
WatchWinDestroy WatchWindow WinNT Year@ Yes

keywords3.$(file.patterns.nncron)=\
ALL AboveNormalPriority AsService BelowNormalPriority FILESONLY \
HighPriority IdlePriority LoadProfile NoActive NoDel NoLog NoRunAs \
NormalPriority OnceADay OnceAHour OnceAMonth OnceAWeek RECURSIVE \
RealtimePriority RunOnce SWHide ShowMaximized ShowMinimized ShowNoActivate \
ShowNormal StartIn StartPos StartSize TODEPTH WATCH-CHANGE-ATTRIBUTES \
WATCH-CHANGE-DIR-NAME WATCH-CHANGE-FILE-NAME WATCH-CHANGE-LAST-WRITE \
WATCH-CHANGE-SECURITY WATCH-CHANGE-SIZE WaitFor WatchSubtree WithoutProfile

style.nncrontab.0=
style.nncrontab.1=fore:#007F00,$(font.comment)
style.nncrontab.2=$(colour.string),back:#606060,fore:#FFFF00
style.nncrontab.3=fore:#00007F,bold
style.nncrontab.4=fore:#000000,bold
style.nncrontab.5=fore:#00007F,italics
style.nncrontab.6=fore:#000000,bold,back:#FFE0FF
style.nncrontab.7=fore:#007F7F
style.nncrontab.8=fore:#7F007F,$(font.monospace)
style.nncrontab.9=back:#FFFFE0
style.nncrontab.10=back:#FF0000

module nsis

filter.nsis=NSIS (nsi nsh)|*.nsi;*.nsh|
*filter.nsis=$(filter.nsis)
file.patterns.nsis=*.nsi;*.nsh
lexer.$(file.patterns.nsis)=nsis
name.$(file.patterns.nsis)=nsis
*language.nsis=NSIS|nsi||

nsis.uservars=1

keywords.$(file.patterns.nsis)=!addincludedir !addplugindir MakeNSIS Portions \
Contributors: Abort AddBrandingImage AddSize AutoCloseWindow BGFont \
BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI \
ClearErrors ComponentText GetDLLVersion GetDLLVersionLocal GetFileTime \
GetFileTimeLocal CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut \
SetDatablockOptimize DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue \
Delete DetailPrint DirText DirShow DirVar DirVerify GetInstDirError AllowRootDirInstall \
CheckBitmap EnableWindow EnumRegKey EnumRegValue Exch Exec ExecWait \
ExecShell ExpandEnvStrings FindWindow FindClose FindFirst FindNext File FileBufSize \
FlushINI ReserveFile FileClose FileErrorText FileOpen FileRead FileWrite FileReadByte \
FileWriteByte FileSeek Function FunctionEnd GetDlgItem GetFullPathName \
GetTempFileName HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent \
InstallDirRegKey InstallColors InstallDir InstProgressFlags InstType IntOp IntCmp \
IntCmpU IntFmt IsWindow Goto LangString LangStringUP LicenseData \
LicenseForceSelection LicenseLangString LicenseText LicenseBkColor \
LoadLanguageFile LogSet LogText MessageBox Nop Name OutFile Page \
PageCallbacks PageEx PageExEnd Pop Push Quit ReadINIStr ReadRegDWORD \
ReadRegStr ReadEnvStr Reboot RegDLL Rename Return RMDir Section SectionEnd \
SectionIn SubSection SectionGroup SubSectionEnd SectionGroupEnd SearchPath \
SectionSetFlags SectionGetFlags SectionSetInstTypes SectionGetInstTypes \
SectionGetText SectionSetText SectionGetSize SectionSetSize GetCurInstType \
SetCurInstType InstTypeSetText InstTypeGetText SendMessage SetAutoClose \
SetCtlColors SetBrandingImage SetCompress SetCompressor SetCompressorDictSize \
SetCompressionLevel SetDateSave SetDetailsView SetDetailsPrint SetErrors \
SetErrorLevel GetErrorLevel SetFileAttributes SetFont SetOutPath SetOverwrite \
SetPluginUnload SetRebootFlag SetShellVarContext SetSilent ShowInstDetails \
ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep StrCmp StrCpy \
StrLen SubCaption UninstallExeName UninstallCaption UninstallIcon UninstPage \
UninstallText UninstallSubCaption UnRegDLL WindowIcon WriteINIStr WriteRegBin \
WriteRegDWORD WriteRegStr WriteRegExpandStr WriteUninstaller XPStyle !packhdr \
!system !execute !AddIncludeDir !include !cd !ifdef !ifndef !endif !define !undef !else !echo !warning \
!error !verbose !macro !macroend !insertmacro !ifmacrodef !ifmacrondef MiscButtonText \
DetailsButtonText UninstallButtonText InstallButtonText SpaceTexts \
CompletedText GetFunctionAddress GetLabelAddress GetCurrentAddress \
!AddPluginDir InitPluginsDir AllowSkipFiles Var VIAddVersionKey VIProductVersion LockWindow


keywords2.$(file.patterns.nsis)=$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 \
$R0 $R1 $R2 $R3 $R4 $R5 $R6 $R7 $R8 $R9 $\t $\" $\' $\` \
$VARNAME $0, $INSTDIR $OUTDIR $CMDLINE $LANGUAGE $PROGRAMFILES \
$COMMONFILES $DESKTOP $EXEDIR ${NSISDIR} $WINDIR $SYSDIR $TEMP \
$STARTMENU $SMPROGRAMS $SMSTARTUP $QUICKLAUNCH $DOCUMENTS \
$SENDTO $RECENT $FAVORITES $MUSIC $PICTURES $VIDEOS $NETHOOD \
$FONTS $TEMPLATES $APPDATA $PRINTHOOD $INTERNET_CACHE $COOKIES \
$HISTORY $PROFILE $ADMINTOOLS $RESOURCES $RESOURCES_LOCALIZED \
$CDBURN_AREA $HWNDPARENT $PLUGINSDIR $$ $\r $\n

keywords3.$(file.patterns.nsis)=ARCHIVE FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_HIDDEN \
FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_OFFLINE FILE_ATTRIBUTE_READONLY \
FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_TEMPORARY HIDDEN HKCC HKCR HKCU \
HKDD HKEY_CLASSES_ROOT HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_DYN_DATA \
HKEY_LOCAL_MACHINE HKEY_PERFORMANCE_DATA HKEY_USERS HKLM HKPD HKU IDABORT \
IDCANCEL IDIGNORE IDNO IDOK IDRETRY IDYES MB_ABORTRETRYIGNORE MB_DEFBUTTON1 \
MB_DEFBUTTON2 MB_DEFBUTTON3 MB_DEFBUTTON4 MB_ICONEXCLAMATION \
MB_ICONINFORMATION MB_ICONQUESTION MB_ICONSTOP MB_OK MB_OKCANCEL \
MB_RETRYCANCEL MB_RIGHT MB_SETFOREGROUND MB_TOPMOST MB_YESNO \
MB_YESNOCANCEL NORMAL OFFLINE READONLY SW_SHOWMAXIMIZED SW_SHOWMINIMIZED \
SW_SHOWNORMAL SYSTEM TEMPORARY auto colored false force hide ifnewer nevershow \
normal off on show silent silentlog smooth true try lzma zlib bzip2 none listonly textonly \
both top left bottom right license components directory instfiles uninstConfirm custom \
all leave current ifdiff lastused LEFT RIGHT CENTER dlg_id ALT CONTROL EXT SHIFT \
open print manual alwaysoff


style.nsis.0=fore:#000000,$(font.base)
style.nsis.1=fore:#007F00,$(font.comment)
style.nsis.2=fore:#999999,back:#EEEEEE
style.nsis.3=fore:#999999,back:#EEEEEE
style.nsis.4=fore:#999999,back:#EEEEEE
style.nsis.5=fore:#00007F,bold
style.nsis.6=fore:#CC3300
style.nsis.7=fore:#FF9900
style.nsis.8=fore:#000000
style.nsis.9=fore:#00007F,bold
style.nsis.10=fore:#00007F,bold
style.nsis.11=fore:#00007F,bold
style.nsis.12=fore:#00007F,bold
style.nsis.13=fore:#CC3300,back:#EEEEEE
style.nsis.14=fore:#007F7F
style.nsis.15=fore:#00007F,bold
style.nsis.16=fore:#00007F,bold
style.nsis.17=fore:#00007F,bold
style.nsis.18=fore:#007F00,$(font.comment),bold



comment.block.nsis=;
comment.block.at.line.start.nsis=1
comment.stream.start.nsis=/*
comment.stream.end.nsis=*/
comment.box.start.nsis=/*
comment.box.middle.nsis=;
comment.box.end.nsis=*/

module opal

filter.opal=OPAL (impl sign)|*.impl;*.sign|

*filter.opal=$(filter.opal)

file.patterns.opal=*.impl;*.sign
lexer.$(file.patterns.opal)=opal
name.$(file.patterns.opal)=opal
*language.opal=Opal|impl||

keywordclass.opal_keywords=ALL AND ANDIF ANY AS ASSERT AXM COMPLETELY DATA DEF DERIVE \
DFD DISCRIMINATORS ELSE EX EXTERNAL FI FIX FUN IF IMPLEMENTATION IMPLIES IMPORT \
IN INHERIT INJECTIONS INTERFACE INTERNAL LAW LAZY LEFTASSOC LET MODULE NOT ONLY \
OR ORIF OTHERWISE POST PRE PRED PRIORITY PROPERTIES REALIZES REQUIRE RIGHTASSOC \
SELECTORS SIGNATURE SORT SPC SPEC SPECIFICATION STRUCTURE THE THEN THEORY THM \
TYPE UNIQ WHERE

keywordclass.opal_sorts=aEntry agent align anchor ans arg arg1 arg2 array \
arrowWhere bag bitmap bool bstree byte callback canvasEditor capStyle channel \
char childstat codom codomFrom codomTo color colorModel com composeOp config \
configCom cursor dArray data data1 data11 data2 data21 data3 data31 data4 \
data41 dataFrom dataTo defaultPrio denotation device dist distOut dom domFrom \
domTo drawing dyn emitter env event eventInfo file filemode filestat filetype \
first first1 first2 first3 fission fmt font from from1 from2 funct group groupid \
heap iconfig image in inData index inode input int inter interdom interpreter \
iseq items joinStyle justifyHow long manager managerRequest map mapEntry mark \
mid modifier nat natMap OBJECT option orient out outData output packOp pair \
parser permission point positionRequest process procstat quad range real \
regulator rel relief res res1 res2 result role sap script scroller scrollView \
scrollWindow searchOpt second seekMode selector semaphor seq seqEntry set \
setEntry short sigaction sighandler sigmask signal size sizeRequest some \
sreal state stateId stateRequest string subrel tag textEditor time to tree \
triple union user userid version view void wconfig wconfigCom wday widget \
window wrapStyle

keywords.$(file.patterns.opal)=$(keywordclass.opal_keywords)
keywords2.$(file.patterns.opal)=$(keywordclass.opal_sorts)


style.opal.0=fore:#000000,$(font.opal)
style.opal.1=fore:#007F00,italics,$(font.comment)
style.opal.2=fore:#007F00,italics,$(font.comment)
style.opal.3=fore:#007F7F
style.opal.4=fore:#00007F,bold
style.opal.5=fore:#007F7F
style.opal.6=fore:#7F007F,italics,$(font.comment)
style.opal.7=fore:#000000
style.opal.8=fore:#A00000

style.opal.32=fore:#000000
style.opal.34=fore:#FF0000,back:#FFFF00,bold
style.opal.35=fore:#FF0000,back:#00FF00,bold

module oscript


file.patterns.oscript=*.osx
filter.oscript=OScript (osx)|$(file.patterns.oscript)|
*filter.oscript=$(filter.oscript)
lexer.$(file.patterns.oscript)=oscript
name.$(file.patterns.oscript)=oscript

*language.oscript=OScript(osx)|osx||

word.chars.oscript=$(chars.alpha)$(chars.numeric)_$
word.characters.$(file.patterns.oscript)=$(word.chars.oscript)

comment.block.oscript=//~
comment.stream.start.oscript=/*
comment.stream.end.oscript=*/
comment.box.start.oscript=/*
comment.box.middle.oscript= *
comment.box.end.oscript= */

statement.indent.$(file.patterns.oscript)=6 case default else for if \
repeat switch while
statement.lookback.$(file.patterns.oscript)=20
statement.end.$(file.patterns.oscript)=10 ;
block.start.$(file.patterns.oscript)=10 if
block.end.$(file.patterns.oscript)=10 end
indent.maintain.$(file.patterns.oscript)=1
indent.size.$(file.patterns.oscript)=4
use.tabs.$(file.patterns.oscript)=1
tab.size.$(file.patterns.oscript)=4

preprocessor.symbol.$(file.patterns.oscript)=#
preprocessor.start.$(file.patterns.oscript)=ifdef ifndef
preprocessor.middle.$(file.patterns.oscript)=else
preprocessor.end.$(file.patterns.oscript)=endif


api.$(file.patterns.oscript)=$(SciteDefaultHome)\api\oscript.api
autocomplete.oscript.ignorecase=1
calltip.oscript.ignorecase=1
calltip.oscript.use.escapes=1
calltip.oscript.word.characters=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$.


keywordclass.type=\
assoc boolean bytes date dynamic error extern file integer list long object \
point real recarray record script string

keywordclass.operator=\
and eq ge gt le lt ne not or xor

keywordclass.oscript.control=\
break breakif by case continue continueif default downto else elseif end for \
goto if in repeat switch to until while

keywordclass.function=\
function return void

keywordclass.miscellaneous=\
dll inbyref inout linked nodebug super this xcmd xfcn

keywordclass.constant=\
false true undefined

keywordclass.coreconstant=\
booleantype bytestype datatype dynamictype errortype externtype integertype \
listtype longtype objecttype objreftype pointtype realtype scripttype \
stringtype undefinedtype voidtype

keywordclass.corefunction=\
datatypename echo echodebug echoerror echoinfo echostamp echowarn \
getfeatures isdefined iserror isfeature isinvokable isnoterror isnotset \
isobject isset isundefined length nparameters parameters pointh pointv type

keywordclass.builtintype=\
cachetree capiconnect capierr capilog capilogin compiler dapisession \
dapinode dapiversion dapistream filecopy fileprefs frame javaobject \
mailmessage pop3session smtpsession ssloptions patfind patchange regex \
socket sqlconnection sqlcursor uapisession uapiuser wapisession wapimap \
wapimaptask wapiwork wapisubwork domattr domcdatasection domcharacterdata \
domcomment domdocument domdocumentfragment domdocumenttype domelement \
domentity domentityreference domimplementation domnamednodemap domnode \
domnodelist domnotation domparser domprocessinginstruction domtext saxparser \
xslprocessor

keywordclass.builtinobject=\
capi dapi env global language logging math memcached otds pattern security \
sql str system uapi vis wapi web zip

keywordclass.weblingo=\
call html oscript


keywords.$(file.patterns.oscript)=$(keywordclass.oscript.control) \
$(keywordclass.function) $(keywordclass.miscellaneous)

keywords2.$(file.patterns.oscript)=$(keywordclass.constant) \
$(keywordclass.coreconstant)

keywords3.$(file.patterns.oscript)=$(keywordclass.operator)

keywords4.$(file.patterns.oscript)=$(keywordclass.type) \
$(keywordclass.builtintype)

keywords5.$(file.patterns.oscript)=$(keywordclass.corefunction)

keywords6.$(file.patterns.oscript)=$(keywordclass.builtinobject)


style.oscript.0=
style.oscript.1=$(colour.code.comment.line),$(font.code.comment.line)
style.oscript.2=$(colour.code.comment.box),$(font.code.comment.box)
style.oscript.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.oscript.4=$(colour.preproc)
style.oscript.5=$(colour.number)
style.oscript.6=$(colour.string)
style.oscript.7=$(colour.string)
style.oscript.8=fore:#FF7F3F
style.oscript.9=
style.oscript.10=fore:#7F007F
style.oscript.11=$(colour.keyword),bold
style.oscript.12=$(colour.operator),bold
style.oscript.13=fore:#FF00FF
style.oscript.14=fore:#00007F
style.oscript.15=fore:#0000FF
style.oscript.16=fore:#007F7F
style.oscript.17=
style.oscript.18=

braces.oscript.style=12



module others

file.patterns.props=*.properties;*.session;*.ini;*.inf;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure

*source.patterns.props=$(file.patterns.props);
*source.patterns.batch=$(file.patterns.batch);
*source.patterns.diff=$(file.patterns.diff);
*source.patterns.make=$(file.patterns.make);*.iface;

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

*filter.properties=$(filter.properties)
*filter.text=$(filter.text)

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff

name.$(file.patterns.text)=_text
name.$(file.patterns.props)=properties
name.$(file.patterns.batch)=batch
name.*.err=errorlist
name.$(file.patterns.make)=makefile
name.*.iface=makefile
name.$(file.patterns.diff)=difference

*language.batch=Batch|bat||
*language.difference=diff files|diff||
*language.errorlist=Errorlist|err||
*language.properties=INI and similar|ini||
*language.makefile=Makefile|mak||
*language._text=Text|txt||

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000


style.props.0=
style.props.1=fore:#007F7F,$(font.comment)
style.props.2=$(colour.string),back:#E0F0F0,eolfilled
style.props.3=$(colour.other.operator)
style.props.4=$(colour.preproc)
style.props.5=
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF


keywordclass.batch=\
assoc aux break call cd chcp chdir choice cls cmdextversion \
color com1 com2 com3 com4 con copy ctty date defined \
del dir do dpath echo else endlocal erase errorlevel exist \
exit for ftype goto if in lpt1 lpt2 lpt3 lpt4 md mkdir move \
not nul path pause popd prompt prn pushd rd rem ren \
rename rmdir set setlocal shift start time title type ver \
verify vol
keywords.$(file.patterns.batch)=$(keywordclass.batch)


style.batch.0=fore:#000000
style.batch.1=fore:#007F00,$(font.comment)
style.batch.2=$(colour.keyword),bold
style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled
style.batch.4=$(colour.preproc)
style.batch.5=fore:#007090,$(font.monospace),bold
style.batch.6=fore:#800080
style.batch.7=fore:#000000

comment.block.batch=REM ~


style.makefile.0=fore:#000000
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
style.makefile.2=$(colour.preproc)
style.makefile.3=fore:#000080
style.makefile.4=$(colour.other.operator)
style.makefile.5=fore:#A00000
style.makefile.9=$(colour.error),eolfilled
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~


style.errorlist.32=fore:#B06000,$(font.small)
style.errorlist.0=fore:#000000
style.errorlist.1=fore:#FF0000
style.errorlist.2=fore:#800080
style.errorlist.3=fore:#808000
style.errorlist.4=fore:#0000FF
style.errorlist.5=fore:#B06000
style.errorlist.6=fore:#FF0000
style.errorlist.7=fore:#FF0000
style.errorlist.8=fore:#FF0000
style.errorlist.9=fore:#FF00FF
style.errorlist.10=fore:#007F00
style.errorlist.11=fore:#00007F
style.errorlist.12=fore:#007F7F
style.errorlist.13=fore:#7F0000
style.errorlist.14=fore:#FF0000
style.errorlist.15=fore:#FF0000
style.errorlist.16=fore:#FF0000
style.errorlist.17=fore:#FF0000
style.errorlist.18=fore:#FF0000
style.errorlist.19=fore:#FF0000
style.errorlist.20=fore:#FF0000
style.errorlist.21=fore:#000000
style.errorlist.22=fore:#800080
style.errorlist.25=fore:#CF008F,$(font.monospace.small)
style.errorlist.23=fore:#000000,notvisible,back:#FFFFFF,$(error.background)
style.errorlist.24=back:#FFE0A0
style.errorlist.33=$(font.small)
style.errorlist.40=fore:#000000
style.errorlist.41=fore:#800000,$(error.background)
style.errorlist.42=fore:#008000,$(error.background)
style.errorlist.43=fore:#808000,$(error.background)
style.errorlist.44=fore:#000080,$(error.background)
style.errorlist.45=fore:#800080,$(error.background)
style.errorlist.46=fore:#008080,$(error.background)
style.errorlist.47=fore:#A0A0A0,$(error.background)
style.errorlist.48=fore:#000000,bold,$(error.background)
style.errorlist.49=fore:#800000,bold,$(error.background)
style.errorlist.50=fore:#008000,bold,$(error.background)
style.errorlist.51=fore:#808000,bold,$(error.background)
style.errorlist.52=fore:#000080,bold,$(error.background)
style.errorlist.53=fore:#800080,bold,$(error.background)
style.errorlist.54=fore:#008080,bold,$(error.background)
style.errorlist.55=fore:#A0A0A0,bold,$(error.background)

error.background=back:#FFF7E7,eolfilled

lexer.errorlist.value.separate=1


style.diff.0=fore:#000000
style.diff.1=fore:#007F00
style.diff.2=fore:#7F7F00
style.diff.3=fore:#7F0000
style.diff.4=fore:#7F007F
style.diff.5=fore:#007F7F
style.diff.6=fore:#00007F
style.diff.7=fore:#7F7F7F
style.diff.8=fore:#00007F,back:#F0FAFF,eolfilled
style.diff.9=fore:#007F7F,back:#F0FAFF,eolfilled
style.diff.10=fore:#00007F,back:#FFFAF0,eolfilled
style.diff.11=fore:#007F7F,back:#FFFAF0,eolfilled



module pascal

filter.pascal=Pascal (dpr dpk pas dfm inc pp)|*.dpr;*.dpk;*.pas;*.dfm;*.inc;*.pp|

*filter.pascal=$(filter.pascal)

file.patterns.pascal=*.dpr;*.pas;*.dfm;*.inc;*.pp
file.patterns.pascal.package=*.dpk
file.patterns.pascal.all=$(file.patterns.pascal);$(file.patterns.pascal.package)
lexer.$(file.patterns.pascal.all)=pascal
name.$(file.patterns.pascal.all)=pascal
*language.pascal=Pascal|pas||

keywordclass.pascal=absolute abstract and array as asm assembler automated begin case \
cdecl class const constructor delayed deprecated destructor dispid dispinterface \
div do downto dynamic else end except experimental export exports external far \
file final finalization finally for forward function goto helper if \
implementation in inherited initialization inline interface is label library \
message mod near nil not object of on operator or out overload override packed \
pascal platform private procedure program property protected public published \
raise record reference register reintroduce repeat resourcestring safecall \
sealed set shl shr static stdcall strict string then threadvar to try type unit \
unsafe until uses var varargs virtual while winapi with xor

keywordclass.pascal.smart=add default implements index name nodefault read readonly \
remove stored write writeonly

keywordclass.pascal.package=package contains requires

keywords.$(file.patterns.pascal)=$(keywordclass.pascal) $(keywordclass.pascal.smart)
keywords.$(file.patterns.pascal.package)=$(keywordclass.pascal) $(keywordclass.pascal.smart) $(keywordclass.pascal.package)

lexer.pascal.smart.highlighting=1


style.pascal.32=$(font.base)
style.pascal.0=fore:#808080
style.pascal.1=
style.pascal.2=$(colour.code.comment.box),$(font.code.comment.box)
style.pascal.3=$(colour.code.comment.box),$(font.code.comment.box)
style.pascal.4=$(colour.code.comment.line),$(font.code.comment.line)
style.pascal.5=$(colour.preproc)
style.pascal.6=$(colour.preproc)
style.pascal.7=$(colour.number)
style.pascal.8=$(colour.number)
style.pascal.9=$(colour.keyword),bold
style.pascal.10=$(colour.string)
style.pascal.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.pascal.12=$(colour.char)
style.pascal.13=$(colour.operator),bold
style.pascal.14=fore:#804080

braces.pascal.style=13

comment.block.pascal=//~
comment.stream.start.pascal={
comment.stream.end.pascal=}
comment.box.start.pascal=(*
comment.box.middle.pascal= *
comment.box.end.pascal= *)

statement.indent.$(file.patterns.pascal)=9 case class do else for then \
private protected public published repeat try while type
statement.end.$(file.patterns.pascal)=13 ;
statement.lookback.$(file.patterns.pascal)=20
block.start.$(file.patterns.pascal)=9 begin
block.end.$(file.patterns.pascal)=9 end




module perl

file.patterns.perl=*.pl;*.pm;*.pod
file.patterns.bash=*.sh;*.bsh;configure;*.ksh
file.patterns.awk=*.awk

*source.patterns.perl=$(file.patterns.perl);
*source.patterns.bash=$(file.patterns.bash);

shbang.perl=pl
shbang.sh=sh
shbang.bash=sh

shbang.gawk=awk
shbang.nawk=awk
shbang.mawk=awk

filter.perl=Perl (pl pm)|$(file.patterns.perl)|
filter.bash=Bash (sh bsh)|$(file.patterns.bash)|
filter.awk=GAWK  (awk)|$(file.patterns.awk)|

*filter.perl=$(filter.perl)
*filter.bash=$(filter.bash)

*language.perl=Perl|pl||
*language.shell=Shell|sh||

lexer.$(file.patterns.perl)=perl
lexer.$(file.patterns.bash)=bash
lexer.$(file.patterns.awk)=perl

name.$(file.patterns.perl)=perl
name.$(file.patterns.bash)=shell
name.$(file.patterns.awk)=perl

keywords.$(file.patterns.perl)=\
NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push quotemeta qu \
rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
xor \
given when default break say state UNITCHECK __SUB__ fc

keywords.$(file.patterns.awk)=\
BEGIN END \
if else while do for in break continue delete exit function return \
print printf sprintf \
system close getline next nextfile fflush \
atan2 cos exp int log rand sin sqrt srand \
asort asorti gensub sub gsub index length match split \
strtonum substr tolower toupper \
mktime strftime systime \
and compl lshift or rshift xor \
bindtextdomain dcgettext dcngettext \
ARGC ARGIND ARGV BINMODE CONVFMT ENVIRON ERRNO FIELDWIDTHS \
FILENAME FNR FS IGNORECASE LINT NF NR OFMT OFS ORS PROCINFO \
RS RT RSTART RLENGTH SUBSEP TEXTDOMAIN


comment.block.awk=#~
block.start.$(file.patterns.awk)=10 {
block.end.$(file.patterns.awk)=10 }


word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~
block.start.$(file.patterns.perl)=10 {
block.end.$(file.patterns.perl)=10 }

colour.perl.heredoc=$(colour.embedded.comment)


bash_keywords1=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname dirs do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg popd pr print \
printf ps pushd pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat

bash_keywords2=chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes

keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)

word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.bash=#~

colour.bash.heredoc=$(colour.embedded.comment)

style.perl.32=
style.perl.0=fore:#808080,$(font.base)
style.perl.1=$(colour.error)
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)
style.perl.3=fore:#004000,back:#E0FFE0,$(font.text),eolfilled
style.perl.4=$(colour.number)
style.perl.5=$(colour.keyword),bold
style.perl.6=$(colour.string),$(font.monospace)
style.perl.7=$(colour.char),$(font.monospace)
style.perl.8=$(colour.notused),$(font.notused)
style.perl.9=$(colour.notused),$(font.notused)
style.perl.10=$(colour.operator),bold
style.perl.11=fore:#000000
style.perl.12=fore:#000000,back:#FFE0E0
style.perl.13=fore:#000000,back:#FFFFE0
style.perl.14=fore:#000000,back:#FFE0FF
style.perl.15=fore:#000000,back:#E0E0E0
style.perl.16=back:#FF0000
style.perl.17=fore:#000000,back:#A0FFA0
style.perl.18=fore:#000000,back:#F0E080
style.perl.19=fore:#FFFF00,back:#8080A0
style.perl.20=$(style.perl.6),back:#90FFFF
style.perl.21=fore:#600000,back:#FFF0D8,eolfilled
style.perl.22=fore:#000000,back:#DDD0DD
style.perl.23=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.perl.24=fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.perl.25=fore:#7F007F,back:#DDD0DD,eolfilled,italics
style.perl.26=fore:#7F007F,$(font.monospace),notbold
style.perl.27=$(style.perl.6)
style.perl.28=$(style.perl.20)
style.perl.29=$(style.perl.17)
style.perl.30=$(style.perl.13)
style.perl.31=fore:#004000,back:#C0FFC0,$(font.monospace),eolfilled
style.perl.40=$(style.perl.10),italics
style.perl.41=fore:#C000C0,bold
style.perl.42=fore:#C000C0,back:#FFF0FF,eolfilled
style.perl.44=$(style.perl.18)

style.perl.43=$(style.perl.6),fore:#D00000,bold
style.perl.54=$(style.perl.17),fore:#D00000,bold
style.perl.55=$(style.perl.18),fore:#D00000,bold
style.perl.57=$(style.perl.20),fore:#D00000,bold
style.perl.61=$(style.perl.24),fore:#D00000,bold
style.perl.62=$(style.perl.61)
style.perl.64=$(style.perl.43)
style.perl.65=$(style.perl.57)
style.perl.66=$(style.perl.54)

braces.perl.style=10

style.bash.32=
style.bash.0=fore:#808080,$(font.base)
style.bash.1=$(colour.error)
style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)
style.bash.3=$(colour.number)
style.bash.4=$(colour.keyword),bold
style.bash.5=$(colour.string),$(font.monospace)
style.bash.6=$(colour.char),$(font.monospace)
style.bash.7=$(colour.operator),bold
style.bash.8=fore:#000000
style.bash.9=fore:#000000,back:#FFE0E0
style.bash.10=fore:#000000,back:#FFFFE0
style.bash.11=fore:#FFFF00,back:#A08080
style.bash.12=fore:#000000,back:#DDD0DD
style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
braces.bash.style=7


module pov

file.patterns.pov=*.pov;*.inc

filter.pov=POV-Ray SDL (pov)|$(file.patterns.pov)|

*filter.pov=$(filter.pov)

indent.size.*.pov=2
tab.size.*.pov=2
use.tabs.*.pov=0
indent.size.*.inc=2
tab.size.*.inc=2
use.tabs.*.inc=0

lexer.$(file.patterns.pov)=pov
name.$(file.patterns.pov)=povray

*language.povray=POV-Ray SDL|pov||

word.chars.pov=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.pov)=$(word.chars.pov)

api.*.pov=POV-Ray_SDL.api
autocomplete.pov.start.characters=.
calltip.pov.word.characters=.$(word.chars.pov)

comment.block.at.line.start.pov=1
comment.block.pov=//~
comment.stream.start.pov=/*
comment.stream.end.pov=*/
comment.box.start.pov=/*
comment.box.middle.pov= *
comment.box.end.pov= */


preprocessor.symbol.$(file.patterns.pov)=#
preprocessor.start.$(file.patterns.pov)=if ifdef ifndef switch while macro
preprocessor.middle.$(file.patterns.pov)=else
preprocessor.end.$(file.patterns.pov)=end

keywordclass.pov=declare local include undef fopen fclose read write default version \
case range break debug error warning \
if ifdef ifndef switch while macro else end

keywords.$(file.patterns.pov)=$(keywordclass.pov)

keywords2.$(file.patterns.pov)=camera light_source light_group \
object blob sphere cylinder box cone height_field julia_fractal \
lathe prism sphere_sweep superellipsoid sor text torus \
bicubic_patch disc mesh mesh2 polygon triangle smooth_triangle \
plane poly cubic quartic quadric isosurface parametric \
union intersection difference merge function array spline \
vertex_vectors normal_vectors uv_vectors face_indices normal_indices uv_indices \
texture texture_list interior_texture \
texture_map material_map image_map color_map colour_map pigment_map \
normal_map slope_map bump_map density_map \
pigment normal material interior finish reflection irid slope pigment_pattern image_pattern \
warp media scattering density background fog sky_sphere rainbow \
global_settings radiosity photons pattern \
transform looks_like projected_through contained_by clipped_by bounded_by

keywords3.$(file.patterns.pov)=linear_spline quadratic_spline cubic_spline natural_spline bezier_spline b_spline \
read write append inverse open \
perspective orthographic fisheye ultra_wide_angle omnimax panoramic \
spherical spotlight jitter circular orient \
media_attenuation media_interaction shadowless parallel \
refraction collect pass_through global_lights hierarchy sturm smooth \
gif tga iff pot png pgm ppm jpeg tiff sys ttf \
quaternion hypercomplex linear_sweep conic_sweep \
type all_intersections split_union cutaway_textures \
no_shadow no_image no_reflection double_illuminate hollow \
uv_mapping all use_index use_color use_colour no_bump_scale \
conserve_energy fresnel \
average agate boxed bozo bumps cells crackle cylindrical density_file dents \
facets granite leopard marble onion planar quilted radial ripples spotted waves wood wrinkles \
solid use_alpha interpolate magnet noise_generator toroidal \
ramp_wave triangle_wave sine_wave scallop_wave cubic_wave poly_wave \
once map_type method fog_type hf_gray_16 charset ascii utf8 \
rotate scale translate matrix location right up direction sky \
angle look_at aperture blur_samples focal_point confidence variance \
radius falloff tightness point_at area_light adaptive fade_distance fade_power \
threshold strength water_level tolerance max_iteration precision slice \
u_steps v_steps flatness inside_vector \
accuracy max_gradient evaluate max_trace precompute \
target ior dispersion dispersion_samples caustics \
color colour rgb rgbf rgbt rgbft red green blue filter transmit gray hf \
fade_color fade_colour quick_color quick_colour \
brick checker hexagon brick_size mortar bump_size \
ambient diffuse brilliance crand phong phong_size metallic specular \
roughness reflection_exponent exponent thickness \
gradient spiral1 spiral2 agate_turb form metric \
offset df3 coords size mandel exterior julia \
control0 control1 altitude turbulence octaves omega lambda \
repeat flip black-hole orientation dist_exp major_radius \
frequency phase intervals samples ratio absorption emission aa_threshold aa_level \
eccentricity extinction distance turb_depth fog_offset fog_alt width arc_angle falloff_angle \
adc_bailout ambient_light assumed_gamma irid_wavelength number_of_waves \
always_sample brigthness count error_bound gray_threshold load_file \
low_error_factor max_sample minimum_reuse nearest_count \
pretrace_end pretrace_start recursion_limit save_file \
spacing gather max_trace_level autostop expand_thresholds

keywords4.$(file.patterns.pov)=x y z t u v \
yes no true false on off \
clock clock_delta clock_on final_clock final_frame frame_number \
image_height image_width initial_clock initial_frame pi version

keywords5.$(file.patterns.pov)=abs acos acosh asc asin asinh atan atanh atan2 \
ceil cos cosh defined degrees dimensions dimension_size div exp file_exists floor \
inside int ln log max min mod pow prod radians rand seed select sin sinh sqrt strcmp \
strlen sum tan tanh val vdot vlength min_extent max_extent trace vaxis_rotate \
vcross vrotate vnormalize vturbulence chr concat str strlwr strupr substr vstr \
sqr cube reciprocal pwr

keywords6.$(file.patterns.pov)=

keywords7.$(file.patterns.pov)=

keywords8.$(file.patterns.pov)=


style.pov.32=$(font.code.base)
style.pov.0=fore:#FF0080
style.pov.1=$(colour.code.comment.box),$(font.code.comment.box)
style.pov.2=$(colour.code.comment.line),$(font.code.comment.line)
style.pov.3=$(colour.number)
style.pov.4=$(colour.operator)
style.pov.5=
style.pov.6=$(colour.string)
style.pov.7=back:#E0C0E0,eolfilled,$(font.computer),bold
style.pov.8=$(colour.preproc)
style.pov.9=fore:#804020,$(font.code.comment.doc),italics
style.pov.10=$(colour.keyword),back:#FFD0D0
style.pov.11=$(colour.keyword),back:#FFFFD0
style.pov.12=$(colour.keyword),bold
style.pov.13=$(colour.keyword),back:#D0D0FF
style.pov.14=$(colour.keyword),back:#D0FFD0
style.pov.15=$(colour.keyword),back:#D0D0D0
style.pov.16=$(colour.keyword),back:#E0E0E0
braces.pov.style=4


module powerpro
file.patterns.powerpro=*.powerpro

filter.powerpro=PowerPro (powerpro)|$(file.patterns.powerpro)|
*filter.powerpro=$(filter.powerpro)
lexer.$(file.patterns.powerpro)=powerpro
name.$(file.patterns.powerpro)=powerpro
*language.powerpro=PowerPro|powerpro||

keywordclass.control=\
break do else elseif endfor endif for function global gt if ifelse \
ifx jump local lt quit static

keywords.$(file.patterns.powerpro)=$(keywordclass.control)

keywordclass.plugins=\
win.debug win.debugshow win.exists win.getdisplayrect win.getfocus win.gethandle win.getrect \
win.getsystemmetrics win.gettext win.maximize win.minimize win.move win.sendkeys win.setdebug \
win.setfocus win.setrect win.settext win.show

keywordclass.functions=\
bar case clip env exec fill flag floattostring format formattime ftos \
index input inputcancel inputdefault inputdialog join length messagebox mouse \
not note readline remove replace replacechars replaceg revindex select \
stof validpath visiblewindow wait wait.activity wait.for wait.forinterval wait.message \
wait.quit wait.ready wait.sleep wait.until wallpaper window window word

keywords2.$(file.patterns.powerpro)=$(keywordclass.plugins)|$(keywordclass.functions)

calltip.powerpro.word.characters=$(chars.alpha)$(chars.numeric)_
comment.block.powerpro=//~
comment.stream.start.powerpro=/*
comment.stream.end.powerpro=*/
comment.box.start.powerpro=/*
comment.box.middle.powerpro= *
comment.box.end.powerpro= */

word.characters.*.powerpro=$(chars.alpha)$(chars.numeric)@$_

style.powerpro.32=$(font.base)
style.powerpro.0=#fore:$(font.base)
style.powerpro.1=$(colour.code.comment.box),$(font.code.comment.box)
style.powerpro.2=$(colour.code.comment.line),$(font.code.comment.line)
style.powerpro.3=$(colour.number)
style.powerpro.4=fore:#0000FF
style.powerpro.5=fore:#B00040
style.powerpro.6=fore:#0000FF
style.powerpro.7=fore:#0000FF
style.powerpro.8=$(colour.string)
style.powerpro.9=$(colour.char)
style.powerpro.10=$(colour.preproc)
style.powerpro.11=$(colour.operator),bold
braces.powerpro.style=11
style.powerpro.12=#0000FF
style.powerpro.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.powerpro.14=$(colour.char)
style.powerpro.15=$(colour.string)
style.powerpro.16=fore:#B00040,bold



module powershell

file.patterns.powershell=*.ps1

filter.powershell=PowerShell (ps1)|$(file.patterns.powershell)|

*filter.powershell=$(filter.powershell)

lexer.$(file.patterns.powershell)=powershell
name.$(file.patterns.powershell)=powershell

*language.powershell=PowerShell|ps1||

word.characters.$(file.patterns.powershell)=$(chars.alpha)$(chars.numeric)_-$

keywords.$(file.patterns.powershell)=\
begin break catch continue data do dynamicparam else elseif end exit filter \
finally for foreach from function if in local param private process return \
switch throw trap try until where while

keywords2.$(file.patterns.powershell)=\
add-computer add-content add-history add-member add-pssnapin add-type \
checkpoint-computer clear-content clear-eventlog clear-history clear-item \
clear-itemproperty clear-variable compare-object complete-transaction \
connect-wsman convert-path convertfrom-csv convertfrom-securestring \
convertfrom-stringdata convertto-csv convertto-html convertto-securestring \
convertto-xml copy-item copy-itemproperty debug-process disable-computerrestore \
disable-psbreakpoint disable-pssessionconfiguration disable-wsmancredssp \
disconnect-wsman enable-computerrestore enable-psbreakpoint enable-psremoting \
enable-pssessionconfiguration enable-wsmancredssp enter-pssession exit-pssession \
export-alias export-clixml export-console export-counter export-csv \
export-formatdata export-modulemember export-pssession foreach-object \
format-custom format-list format-table format-wide get-acl get-alias \
get-authenticodesignature get-childitem get-command get-computerrestorepoint \
get-content get-counter get-credential get-culture get-date get-event \
get-eventlog get-eventsubscriber get-executionpolicy get-formatdata get-help \
get-history get-host get-hotfix get-item get-itemproperty get-job get-location \
get-member get-module get-psbreakpoint get-pscallstack get-psdrive \
get-psprovider get-pssession get-pssessionconfiguration get-pssnapin \
get-pfxcertificate get-process get-random get-service get-tracesource \
get-transaction get-uiculture get-unique get-variable get-wsmancredssp \
get-wsmaninstance get-winevent get-wmiobject group-object import-alias \
import-clixml import-counter import-csv import-localizeddata import-module \
import-pssession invoke-command invoke-expression invoke-history invoke-item \
invoke-wsmanaction invoke-wmimethod join-path limit-eventlog measure-command \
measure-object move-item move-itemproperty new-alias new-event new-eventlog \
new-item new-itemproperty new-module new-modulemanifest new-object new-psdrive \
new-pssession new-pssessionoption new-service new-timespan new-variable \
new-wsmaninstance new-wsmansessionoption new-webserviceproxy out-default \
out-file out-gridview out-host out-null out-printer out-string pop-location \
push-location read-host receive-job register-engineevent register-objectevent \
register-pssessionconfiguration register-wmievent remove-computer remove-event \
remove-eventlog remove-item remove-itemproperty remove-job remove-module \
remove-psbreakpoint remove-psdrive remove-pssession remove-pssnapin \
remove-variable remove-wsmaninstance remove-wmiobject rename-item \
rename-itemproperty reset-computermachinepassword resolve-path restart-computer \
restart-service restore-computer resume-service select-object select-string \
select-xml send-mailmessage set-acl set-alias set-authenticodesignature \
set-content set-date set-executionpolicy set-item set-itemproperty set-location \
set-psbreakpoint set-psdebug set-pssessionconfiguration set-service \
set-strictmode set-tracesource set-variable set-wsmaninstance \
set-wsmanquickconfig set-wmiinstance show-eventlog sort-object split-path \
start-job start-process start-service start-sleep start-transaction \
start-transcript stop-computer stop-job stop-process stop-service \
stop-transcript suspend-service tee-object test-computersecurechannel \
test-connection test-modulemanifest test-path test-wsman trace-command \
undo-transaction unregister-event unregister-pssessionconfiguration \
update-formatdata update-list update-typedata use-transaction wait-event \
wait-job wait-process where-object write-debug write-error write-eventlog \
write-host write-output write-progress write-verbose write-warning

keywords3.$(file.patterns.powershell)=\
ac asnp cat cd chdir clc clear clhy cli clp cls clv compare copy cp cpi cpp cvpa \
dbp del diff dir ebp echo epal epcsv epsn erase etsn exsn fc fl foreach ft fw \
gal gbp gc gci gcm gcs gdr ghy gi gjb gl gm gmo gp gps group gsn gsnp gsv gu gv \
gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn ise iwmi kill lp ls man md \
measure mi mount move mp mv nal ndr ni nmo nsn nv ogv oh popd ps pushd pwd r rbp \
rcjb rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rv rvpa rwmi sajb sal \
saps sasv sbp sc select set si sl sleep sort sp spjb spps spsv start sv swmi tee \
type where wjb write

keywords4.$(file.patterns.powershell)=\
clear-host disable-psremoting enable-psremoting get-verb help importsystemmodules \
mkdir more prompt psedit tabexpansion


comment.block.powershell=#~
comment.block.at.line.start.powershell=1

style.powershell.0=fore:#000000
style.powershell.1=fore:#008000
style.powershell.2=fore:#800000
style.powershell.3=fore:#800000
style.powershell.4=fore:#FF0000
style.powershell.5=fore:#800080
style.powershell.6=fore:#000000,bold
style.powershell.7=$(style.powershell.0)
style.powershell.8=fore:#000080,bold
style.powershell.9=fore:#008080,bold
style.powershell.10=fore:#008080,italics
style.powershell.11=fore:#808000,bold
style.powershell.12=
style.powershell.13=$(style.powershell.1)
style.powershell.14=fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.powershell.15=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.powershell.16=fore:#3060A0

module ps

file.patterns.ps=*.ps

filter.ps=PostScript (ps)|$(file.patterns.ps)|

*filter.ps=$(filter.ps)

lexer.$(file.patterns.ps)=ps
name.$(file.patterns.ps)=postscript

*language.postscript=PostScript|ps||

ps.tokenize=0
ps.level=3

comment.block.ps=%~

keywords.$(file.patterns.ps)=\
$error = == FontDirectory StandardEncoding UserObjects abs add aload \
anchorsearch and arc arcn arcto array ashow astore atan awidthshow begin bind \
bitshift bytesavailable cachestatus ceiling charpath clear cleardictstack \
cleartomark clip clippath closefile closepath concat concatmatrix copy copypage \
cos count countdictstack countexecstack counttomark currentcmykcolor \
currentcolorspace currentdash currentdict currentfile currentflat currentfont \
currentgray currenthsbcolor currentlinecap currentlinejoin currentlinewidth \
currentmatrix currentmiterlimit currentpagedevice currentpoint currentrgbcolor \
currentscreen currenttransfer cvi cvlit cvn cvr cvrs cvs cvx def defaultmatrix \
definefont dict dictstack div dtransform dup echo end eoclip eofill eq \
erasepage errordict exch exec execstack executeonly executive exit exp false \
file fill findfont flattenpath floor flush flushfile for forall ge get \
getinterval grestore grestoreall gsave gt idetmatrix idiv idtransform if ifelse \
image imagemask index initclip initgraphics initmatrix inustroke invertmatrix \
itransform known kshow le length lineto ln load log loop lt makefont mark \
matrix maxlength mod moveto mul ne neg newpath noaccess nor not null nulldevice \
or pathbbox pathforall pop print prompt pstack put putinterval quit rand rcheck \
rcurveto read readhexstring readline readonly readstring rectstroke repeat \
resetfile restore reversepath rlineto rmoveto roll rotate round rrand run save \
scale scalefont search setblackgeneration setcachedevice setcachelimit \
setcharwidth setcolorscreen setcolortransfer setdash setflat setfont setgray \
sethsbcolor setlinecap setlinejoin setlinewidth setmatrix setmiterlimit \
setpagedevice setrgbcolor setscreen settransfer setvmthreshold show showpage \
sin sqrt srand stack start status statusdict stop stopped store string \
stringwidth stroke strokepath sub systemdict token token transform translate \
true truncate type ueofill undefineresource userdict usertime version vmstatus \
wcheck where widthshow write writehexstring writestring xcheck xor

keywords2.$(file.patterns.ps)=\
GlobalFontDirectory ISOLatin1Encoding SharedFontDirectory UserObject arct \
colorimage cshow currentblackgeneration currentcacheparams currentcmykcolor \
currentcolor currentcolorrendering currentcolorscreen currentcolorspace \
currentcolortransfer currentdevparams currentglobal currentgstate \
currenthalftone currentobjectformat currentoverprint currentpacking \
currentpagedevice currentshared currentstrokeadjust currentsystemparams \
currentundercolorremoval currentuserparams defineresource defineuserobject \
deletefile execform execuserobject filenameforall fileposition filter \
findencoding findresource gcheck globaldict glyphshow gstate ineofill infill \
instroke inueofill inufill inustroke languagelevel makepattern packedarray \
printobject product realtime rectclip rectfill rectstroke renamefile \
resourceforall resourcestatus revision rootfont scheck selectfont serialnumber \
setbbox setblackgeneration setcachedevice2 setcacheparams setcmykcolor setcolor \
setcolorrendering setcolorscreen setcolorspace setcolortranfer setdevparams \
setfileposition setglobal setgstate sethalftone setobjectformat setoverprint \
setpacking setpagedevice setpattern setshared setstrokeadjust setsystemparams \
setucacheparams setundercolorremoval setuserparams setvmthreshold shareddict \
startjob uappend ucache ucachestatus ueofill ufill undef undefinefont \
undefineresource undefineuserobject upath ustroke ustrokepath vmreclaim \
writeobject xshow xyshow yshow

keywords3.$(file.patterns.ps)=\
cliprestore clipsave composefont currentsmoothness findcolorrendering \
setsmoothness shfill

keywords4.$(file.patterns.ps)=\
.begintransparencygroup .begintransparencymask .bytestring .charboxpath \
.currentaccuratecurves .currentblendmode .currentcurvejoin .currentdashadapt \
.currentdotlength .currentfilladjust2 .currentlimitclamp .currentopacityalpha \
.currentoverprintmode .currentrasterop .currentshapealpha \
.currentsourcetransparent .currenttextknockout .currenttexturetransparent \
.dashpath .dicttomark .discardtransparencygroup .discardtransparencymask \
.endtransparencygroup .endtransparencymask .execn .filename .filename \
.fileposition .forceput .forceundef .forgetsave .getbitsrect .getdevice \
.inittransparencymask .knownget .locksafe .makeoperator .namestring .oserrno \
.oserrorstring .peekstring .rectappend .runandhide .setaccuratecurves \
.setblendmode .setcurvejoin .setdashadapt .setdebug .setdefaultmatrix \
.setdotlength .setfilladjust2 .setlimitclamp .setmaxlength .setopacityalpha \
.setoverprintmode .setrasterop .setsafe .setshapealpha .setsourcetransparent \
.settextknockout .settexturetransparent .stringbreak .stringmatch .tempfile \
.type1decrypt .type1encrypt .type1execchar .unread arccos arcsin copydevice \
copyscanlines currentdevice finddevice findlibfile findprotodevice flushpage \
getdeviceprops getenv makeimagedevice makewordimagedevice max min \
putdeviceprops setdevice


style.ps.0=$(font.base)
style.ps.1=$(colour.code.comment.line),$(font.code.comment.line)
style.ps.2=$(colour.code.comment.doc),$(font.code.comment.doc)
style.ps.3=fore:#3060A0,$(font.code.comment.doc)
style.ps.4=$(colour.number)
style.ps.5=$(colour.operator)
style.ps.6=$(colour.keyword),bold
style.ps.7=$(colour.preproc)
style.ps.8=$(colour.preproc),bold
style.ps.9=$(colour.keyword)
style.ps.10=fore:#3060A0
style.ps.11=$(colour.operator),bold
style.ps.12=$(colour.string),$(font.text)
style.ps.13=fore:#3F7F3F
style.ps.14=$(colour.string)
style.ps.15=$(colour.error)
braces.ps.style=11



module purebasic

file.patterns.purebasic=*.pb

filter.purebasic=PureBasic (pb)|$(file.patterns.purebasic)|

*filter.purebasic=$(filter.purebasic)

lexer.$(file.patterns.purebasic)=purebasic
name.$(file.patterns.purebasic)=purebasic

*language.purebasic=PureBasic(pb)|pb||


keywords.$(file.patterns.purebasic)=and break case continue data \
datasection declare declarecdll declaredll default deftype dim else \
elseif end enddatasection endenumeration endif endinterface endprocedure \
endselect endstructure endstructureunion enumeration extends fakereturn \
for foreach forever global gosub goto if includebinary includefile \
includepath interface newlist next or procedure procedurecdll \
proceduredll procedurereturn protected read repeat restore return select \
shared static step structure structureunion to until wend while xincludefile

keywords2.$(file.patterns.purebasic)=compilercase compilerdefault \
compilerelse compilerendif compilerendselect compilerif compilerselect

style.purebasic.0=fore:#000000
style.purebasic.1=$(colour.code.comment.line),$(font.code.comment.line)
style.purebasic.2=$(colour.number)
style.purebasic.3=$(colour.keyword)
style.purebasic.4=$(colour.string)
style.purebasic.6=$(colour.operator)
style.purebasic.7=$(style.purebasic.0)
style.purebasic.10=$(colour.preproc)
style.purebasic.11=$(colour.keyword)
style.purebasic.12=$(colour.keyword)
style.purebasic.13=$(colour.number)
style.purebasic.15=$(colour.preproc)
style.purebasic.16=$(colour.error)
style.purebasic.17=$(colour.number)
style.purebasic.18=$(colour.number)


module python

file.patterns.py=*.py;*.pyw
file.patterns.scons=SConstruct;SConscript

*source.patterns.python=$(file.patterns.py);

shbang.python=py

filter.python=Python (py pyw)|$(file.patterns.py)|

*filter.python=$(filter.python)

lexer.$(file.patterns.py)=python
lexer.$(file.patterns.scons)=python

name.$(file.patterns.py)=python
name.$(file.patterns.scons)=python

*language.python=Python|py||

keywordclass.python2=and as assert break class continue def del elif \
else except exec finally for from global if import in is lambda not \
or pass print raise return try while with yield

keywordclass.python3=False None True and as assert break class continue \
def del elif else except finally for from global if import in is lambda \
nonlocal not or pass raise return try while with yield

keywordclass.python=$(keywordclass.python2)

keywordclass.cython=cdef cimport cpdef

keywords.$(file.patterns.py)=$(keywordclass.python) $(keywordclass.cython)
keywords.$(file.patterns.scons)=$(keywordclass.python)



substyles.python.11=2

substylewords.11.1.$(file.patterns.py)=\
__main__ _dummy_thread _thread abc aifc argparse \
array ast asynchat asyncio asyncore atexit audioop \
base64 bdb binascii binhex bisect builtins bz2 \
calendar cgi cgitb chunk cmath cmd code codecs \
codeop collections colorsys compileall concurrent \
configparser contextlib copy copyreg crypt csv \
ctypes curses datetime dbm decimal difflib dis \
distutils dummy_threading email ensurepip enum \
errno faulthandler fcntl filecmp fileinput fnmatch \
formatter fpectl fractions ftplib functools gc getopt \
getpass gettext glob grp gzip hashlib heapq hmac \
html http http imaplib imghdr importlib inspect io \
ipaddress itertools json keyword linecache locale \
logging lzma macpath mailbox mailcap marshal math \
mimetypes mmap modulefinder msilib msvcrt \
multiprocessing netrc nis nntplib numbers operator \
os os ossaudiodev parser pathlib pdb pickle \
pickletools pipes pkgutil platform plistlib poplib posix \
pprint pty pwd py_compile pyclbr queue quopri \
random re readline reprlib resource rlcompleter runpy \
sched select selectors shelve shlex shutil signal site \
smtpd smtplib sndhdr socket socketserver spwd \
sqlite3 ssl stat statistics string stringprep struct \
subprocess sunau symbol symtable sys sysconfig \
syslog tabnanny tarfile telnetlib tempfile termios \
textwrap threading time timeit tkinter token \
tokenize trace traceback tracemalloc tty turtle \
types unicodedata unittest urllib uu uuid venv warnings \
wave weakref webbrowser winreg winsound wsgiref \
xdrlib xml xmlrpc zipfile zipimport zlib
style.python.11.1=fore:#DD9900

substylewords.11.2.$(file.patterns.py)=__future__ \
with_statement unicode_literals print_function
style.python.11.2=fore:#EE00AA,italics

statement.indent.$(file.patterns.py)=5 class def elif else except finally \
for if try while with

statement.lookback.$(file.patterns.py)=0
block.start.$(file.patterns.py)=
block.end.$(file.patterns.py)=

view.indentation.examine.*.py=2

tab.timmy.whinge.level=1


comment.block.python=#~

indent.python.colon=1

style.python.0=fore:#808080
style.python.1=fore:#007F00,$(font.comment)
style.python.2=fore:#007F7F
style.python.3=fore:#7F007F,$(font.monospace)
style.python.4=fore:#7F007F,$(font.monospace)
style.python.5=fore:#00007F,bold
style.python.6=fore:#7F0000
style.python.7=fore:#7F0000
style.python.8=fore:#0000FF,bold
style.python.9=fore:#007F7F,bold
style.python.10=bold
style.python.11=
style.python.12=fore:#7F7F7F
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.python.14=fore:#407090
style.python.15=fore:#805000
style.python.16=fore:#7F007F,$(font.monospace)
style.python.17=fore:#7F007F,$(font.monospace)
style.python.18=fore:#7F0000
style.python.19=fore:#7F0000
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
braces.python.style=10



module r

file.patterns.r=*.r;*.R;*.rsource;*.S;
file.patterns.r.like=$(file.patterns.r)

filter.r=R and S+ (R S rsouce)|$(file.patterns.r)|

*filter.r=$(filter.r)

lexer.$(file.patterns.r)=r
name.$(file.patterns.r)=r

*language.r=R|R||

keywordclass.r=if else repeat while function for in next break TRUE FALSE NULL NA Inf NaN

keywords.$(file.patterns.r)=$(keywordclass.r)

keywords2.$(file.patterns.r)=abbreviate abline abs acf acos acosh addmargins aggregate agrep alarm alias alist all anova any aov aperm append apply approx approxfun apropos ar args arima array arrows asin asinh assign assocplot atan atanh attach attr attributes autoload autoloader ave axis backsolve barplot basename beta bindtextdomain binomial biplot bitmap bmp body box boxplot bquote break browser builtins bxp by bzfile c call cancor capabilities casefold cat category cbind ccf ceiling character charmatch chartr chol choose chull citation class close cm cmdscale codes coef coefficients col colnames colors colorspaces colours comment complex confint conflicts contour contrasts contributors convolve cophenetic coplot cor cos cosh cov covratio cpgram crossprod cummax cummin cumprod cumsum curve cut cutree cycle data dataentry date dbeta dbinom dcauchy dchisq de debug debugger decompose delay deltat demo dendrapply density deparse deriv det detach determinant deviance dexp df dfbeta dfbetas dffits dgamma dgeom dget dhyper diag diff diffinv difftime digamma dim dimnames dir dirname dist dlnorm dlogis dmultinom dnbinom dnorm dotchart double dpois dput drop dsignrank dt dump dunif duplicated dweibull dwilcox eapply ecdf edit effects eigen emacs embed end environment eval evalq example exists exp expression factanal factor factorial family fft fifo file filter find fitted fivenum fix floor flush for force formals format formula forwardsolve fourfoldplot frame frequency ftable function gamma gaussian gc gcinfo gctorture get getenv geterrmessage gettext gettextf getwd gl glm globalenv gray grep grey grid gsub gzcon gzfile hat hatvalues hcl hclust head heatmap help hist history hsv httpclient iconv iconvlist identical identify if ifelse image influence inherits integer integrate interaction interactive intersect invisible isoreg jitter jpeg julian kappa kernapply kernel kmeans knots kronecker ksmooth labels lag lapply layout lbeta lchoose lcm legend length letters levels lfactorial lgamma library licence license line lines list lm load loadhistory loadings local locator loess log logb logical loglin lowess ls lsfit machine mad mahalanobis makepredictcall manova mapply match matlines matplot matpoints matrix max mean median medpolish menu merge message methods mget min missing mode monthplot months mosaicplot mtext mvfft names napredict naprint naresid nargs nchar ncol next nextn ngettext nlevels nlm nls noquote nrow numeric objects offset open optim optimise optimize options order ordered outer pacf page pairlist pairs palette par parse paste pbeta pbinom pbirthday pcauchy pchisq pdf pentagamma person persp pexp pf pgamma pgeom phyper pi pico pictex pie piechart pipe plclust plnorm plogis plot pmatch pmax pmin pnbinom png pnorm points poisson poly polygon polym polyroot postscript power ppoints ppois ppr prcomp predict preplot pretty princomp print prmatrix prod profile profiler proj promax prompt provide psigamma psignrank pt ptukey punif pweibull pwilcox q qbeta qbinom qbirthday qcauchy qchisq qexp qf qgamma qgeom qhyper qlnorm qlogis qnbinom qnorm qpois qqline qqnorm qqplot qr qsignrank qt qtukey quantile quarters quasi quasibinomial quasipoisson quit qunif quote qweibull qwilcox rainbow range rank raw rbeta rbind rbinom rcauchy rchisq readline real recover rect reformulate regexpr relevel remove reorder rep repeat replace replicate replications require reshape resid residuals restart return rev rexp rf rgamma rgb rgeom rhyper rle rlnorm rlogis rm rmultinom rnbinom rnorm round row rownames rowsum rpois rsignrank rstandard rstudent rt rug runif runmed rweibull rwilcox sample sapply save savehistory scale scan screen screeplot sd search searchpaths seek segments seq sequence serialize setdiff setequal setwd shell sign signif sin single sinh sink smooth solve sort source spectrum spline splinefun split sprintf sqrt stack stars start stderr stdin stdout stem step stepfun stl stop stopifnot str strftime strheight stripchart strptime strsplit strtrim structure strwidth strwrap sub subset substitute substr substring sum summary sunflowerplot supsmu svd sweep switch symbols symnum system t table tabulate tail tan tanh tapply tempdir tempfile termplot terms tetragamma text time title toeplitz tolower topenv toupper trace traceback transform trigamma trunc truncate try ts tsdiag tsp typeof unclass undebug union unique uniroot unix unlink unlist unname unserialize unsplit unstack untrace unz update upgrade url var varimax vcov vector version vi vignette warning warnings weekdays weights which while window windows with write wsbrowser xedit xemacs xfig xinch xor xtabs xyinch yinch zapsmall

keywords3.$(file.patterns.r)=acme aids aircondit amis aml banking barchart barley beaver bigcity boot brambles breslow bs bwplot calcium cane capability cav censboot channing city claridge cloth cloud coal condense contourplot control corr darwin densityplot dogs dotplot ducks empinf envelope environmental ethanol fir frets gpar grav gravity grob hirose histogram islay knn larrows levelplot llines logit lpoints lsegments lset ltext lvqinit lvqtest manaus melanoma melanoma motor multiedit neuro nitrofen nodal ns nuclear oneway parallel paulsen poisons polar qq qqmath remission rfs saddle salinity shingle simplex singer somgrid splom stripplot survival tau tmd tsboot tuna unit urine viewport wireframe wool xyplot


word.chars.r=$(chars.alpha)$(chars.numeric)_.#
word.characters.$(file.patterns.r)=$(word.chars.r)
comment.block.r=#~

statement.indent.$(file.patterns.r.like)=5 for if
statement.end.$(file.patterns.r.like)=10 ;
statement.lookback.$(file.patterns.r.like)=20
block.start.$(file.patterns.r.like)=10 {
block.end.$(file.patterns.r.like)=10 }


style.r.32=$(font.base)
style.r.0=fore:#808080
style.r.1=$(colour.code.comment.box),$(font.code.comment.box)
style.r.2=$(colour.keyword),bold
style.r.3=fore:#7f0000,bold
style.r.4=fore:#7f007F,bold
style.r.5=$(colour.number)
style.r.6=$(colour.string)
style.r.7=$(colour.string)
style.r.8=$(colour.operator),bold
style.r.9=$(colour.identifier)
style.r.10=$(colour.operator),bold
style.r.11=$(colour.operator),$(font.monospace),back:#E0C0E0,eolfilled

braces.r.style=8

module rebol

file.patterns.rebol=*.reb

filter.rebol=REBOL (reb)|$(file.patterns.rebol)|

*filter.rebol=$(filter.rebol)

lexer.$(file.patterns.rebol)=rebol
name.$(file.patterns.rebol)=rebol

*language.rebol=REBOL|reb||

keywords.$(file.patterns.rebol)=about abs absolute add \
alert alias all alter and \
any any-block? any-function? any-string? any-type? \
any-word? append arccosine arcsine arctangent \
array as-pair ask at attempt \
back binary? bind bitset? block? \
break brightness? browse build-tag caret-to-offset \
catch center-face change change-dir char? \
charset checksum choose clean-path clear \
clear-fields close comment complement component? \
compose compress confirm connected? construct \
context copy cosine datatype? date? \
debase decimal? decode-cgi decompress dehex \
delete detab difference dir? dirize \
disarm dispatch divide do do-events \
does dump-face dump-obj echo either \
else email? empty? enbase entab \
equal? error? even? event? exclude \
exists? exit exp extract fifth \
file? find first flash focus \
for forall foreach forever form \
forskip found? fourth free func \
function function? get get-modes get-word? \
greater-or-equal? greater? halt has hash? \
head head? help hide hide-popup \
if image? import-email in in-window? \
index? info? inform input input? \
insert integer? intersect issue? join \
last launch layout length? lesser-or-equal? \
lesser? library? license link? list-dir \
list? lit-path? lit-word? load load-image \
log-10 log-2 log-e logic? loop \
lowercase make make-dir make-face max \
maximum maximum-of min minimum minimum-of \
modified? mold money? multiply native? \
negate negative? next none? not \
not-equal? now number? object? odd? \
offset-to-caret offset? op? open or \
pair? paren? parse parse-xml path? \
pick poke port? positive? power \
prin print probe protect protect-system \
query quit random read read-io \
recycle reduce refinement? reform rejoin \
remainder remold remove remove-each rename \
repeat repend replace request request-color \
request-date request-download request-file request-list request-pass \
request-text resend return reverse routine? \
same? save script? second secure \
select send series? set set-modes \
set-net set-path? set-word? show show-popup \
sign? sine size-text size? skip \
sort source span? split-path square-root \
strict-equal? strict-not-equal? string? struct? stylize \
subtract suffix? switch tag? tail \
tail? tangent third throw time? \
to to-binary to-bitset to-block to-char \
to-date to-decimal to-email to-file to-get-word \
to-hash to-hex to-idate to-image to-integer \
to-issue to-list to-lit-path to-lit-word to-local-file \
to-logic to-money to-pair to-paren to-path \
to-rebol-file to-refinement to-set-path to-set-word to-string \
to-tag to-time to-tuple to-url to-word \
trace trim try tuple? type? \
unfocus union unique unprotect unset \
unset? until unview update upgrade \
uppercase url? usage use value? \
view viewed? wait what what-dir \
while within? word? write write-io xor zero?

keywords2.$(file.patterns.rebol)=action? any-block? any-function? any-string? \
any-type? any-word? binary? bitset? block? char? component? connected? \
datatype? date? decimal? dir? email? empty? equal? error? even? event? exists? \
file? found? function? get-word? greater-or-equal greater? hash? head? image? \
index? info? input? integer? issue? length? lesser-or-equal? lesser? library? \
link-app? link? list? lit-path? lit-word? logic? modified? money? native? negative? \
none? not-equal? number? object? odd? offset? op? pair? paren? path? port? \
positive? rebol-command? rebol-encap? rebol-link? rebol-pro? rebol-view? \
refinement? routine? same? script? series? set-path? set-word? sign? size? \
strict-equal? strict-not-equal string? struct? suffix? tag? tail? time? tuple? type? \
unset? url? value? view? word? zero?

keywords3.$(file.patterns.rebol)=action! any-block! any-function! any-string! any-type! \
 any-word! binary! bitset! block! char! datatype! date! decimal! email! error! \
 event! file! function! get-word! hash! image! integer! issue! library! list! lit-path! \
 lit-word! logic! money! native! none! number! object! op! pair! paren! path! \
 port! refinement! routine! series! set-path! set-word! string! struct! symbol! tag! \
 time! tuple! unset! url! word!

word.chars.rebol=$(chars.alpha)$(chars.numeric)?!.?-*&|=_~
word.characters.$(file.patterns.rebol)=$(word.chars.rebol)

comment.block.rebol=;
comment.box.start.rebol=;;
comment.box.middle.rebol=;;
comment.box.end.rebol=;;


style.rebol.32=$(font.base)
style.rebol.0=fore:#000000,bold
style.rebol.1=$(colour.code.comment.box),$(font.code.comment.box)
style.rebol.2=$(colour.code.comment.box),$(font.code.comment.box)
style.rebol.3=$(colour.code.comment.box),$(font.code.comment.box),bold
style.rebol.4=$(colour.operator),bold
style.rebol.5=$(colour.string)
style.rebol.6=$(colour.string)
style.rebol.7=$(colour.string)
style.rebol.8=$(colour.number)
style.rebol.9=fore:#005090
style.rebol.10=fore:#005090
style.rebol.11=fore:#C000C0
style.rebol.12=fore:#003070
style.rebol.13=fore:#800000
style.rebol.14=fore:#C00000
style.rebol.15=fore:#0080FF
style.rebol.16=fore:#0080FF
style.rebol.17=fore:#0080FF
style.rebol.18=fore:#8000FF
style.rebol.19=fore:#8000FF

style.rebol.20=
style.rebol.21=$(colour.keyword),bold
style.rebol.22=fore:#8000C0,bold
style.rebol.23=fore:#800060,bold
style.rebol.24=fore:#DD9900
style.rebol.25=fore:#DD9900
style.rebol.26=fore:#DD9900
style.rebol.27=fore:#DD9900
style.rebol.28=fore:#DD9900

style.rebol.34=fore:#0000FF,bold
style.rebol.35=fore:#FF0000,bold
braces.rebol.style=0



module registry

file.patterns.registry=*.reg
filter.registry=Registration files (reg)|$(file.patterns.registry)|
lexer.$(file.patterns.registry)=registry
name.$(file.patterns.registry)=registry

*language.registry=Registration files|reg||

comment.block.registry=;;

[Styles]

style.registry.32=$(font.text)
style.registry.0=fore:#000000
style.registry.1=$(colour.code.comment.line)
style.registry.2=fore:#0000FF
style.registry.3=$(colour.string)
style.registry.4=fore:#7F0B0C
style.registry.5=fore:#00007F,bold
style.registry.6=fore:#530155
style.registry.7=fore:#FF0000
style.registry.8=fore:#7D8187,bold
style.registry.9=fore:#7B5F15
style.registry.10=$(style.registry.9)
style.registry.11=fore:#0B6561
style.registry.12=bold

module ruby

file.patterns.rb=*.rb;*.rbw;*.rake;*.rjs;Rakefile

*source.patterns.ruby=$(file.patterns.rb);

shbang.ruby=rb

filter.ruby=Ruby (rb rbw)|$(file.patterns.rb)|

*filter.ruby=$(filter.ruby)

lexer.$(file.patterns.rb)=ruby
name.$(file.patterns.rb)=ruby

*language.ruby=Ruby|rb||

keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \
defined? ensure module redo super until BEGIN break do false next rescue \
then when END case else for nil retry true while alias class elsif if \
not return undef yield
keywords.$(file.patterns.rb)=$(keywordclass.ruby)

statement.indent.$(file.patterns.rb)=5 def class if do elsif else case while for

block.start.$(file.patterns.rb)=5 do
block.end.$(file.patterns.rb)=5 end

indent.opening.$(file.patterns.rb)=1
indent.closing.$(file.patterns.rb)=1

comment.block.ruby=#~

style.ruby.0=fore:#808080
style.ruby.1=back:#FF0000
style.ruby.2=fore:#007F00,$(font.comment)
style.ruby.3=fore:#004000,back:#C0FFC0,$(font.monospace),eolfilled
style.ruby.4=fore:#007F7F
style.ruby.5=fore:#00007F,bold
style.ruby.6=fore:#7F007F,$(font.monospace)
style.ruby.7=fore:#7F007F,$(font.monospace)
style.ruby.8=fore:#0000FF,bold
style.ruby.9=fore:#007F7F,bold
style.ruby.10=bold
style.ruby.11=
style.ruby.12=fore:#000000,back:#A0FFA0
style.ruby.13=fore:#800080
style.ruby.14=fore:#C0A030
style.ruby.15=fore:#A000A0,bold
style.ruby.16=fore:#B00080
style.ruby.17=fore:#8000B0
style.ruby.18=fore:#FFFF00,back:#A08080
style.ruby.19=fore:#600000,back:#FFF0D8,eolfilled
style.ruby.20=fore:#000000,back:#DDD0DD
style.ruby.21=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.ruby.22=fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.ruby.23=fore:#7F007F,back:#DDD0DD,eolfilled,italics
style.ruby.24=fore:#7F007F,$(font.monospace),notbold
style.ruby.25=$(colour.string),$(font.monospace)
style.ruby.26=fore:#FFFF00,back:#A08080
style.ruby.27=fore:#000000,back:#A0FFA0
style.ruby.28=fore:#000000,back:#FFFFE0
style.ruby.29=$(style.ruby.5)
style.ruby.30=back:#FF8080
style.ruby.31=back:#FF8080
style.ruby.40=back:#FF8080
style.ruby.41=back:#FF0000

style.ruby.34=fore:#0000FF,bold
style.ruby.35=fore:#FF0000,bold
braces.ruby.style=10


module rust

file.patterns.rust=*.rs
filter.rust=Rust (rs)|$(file.patterns.rust)|
*filter.rust=$(filter.rust)
lexer.$(file.patterns.rust)=rust
name.$(file.patterns.rust)=rust
*language.rust=Rust|rs||

word.chars.rust=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.rust)=$(word.chars.rust)
calltip.rust.word.characters=$(chars.alpha)$(chars.numeric)_

comment.block.at.line.start.rust=1
comment.block.rust=//~
comment.stream.start.rust=/*
comment.stream.end.rust=*/
comment.box.start.rust=/*
comment.box.middle.rust= *
comment.box.end.rust= */

statement.indent.$(file.patterns.rust)=6
statement.end.$(file.patterns.rust)=16 ;
statement.lookback.$(file.patterns.rust)=20
block.start.$(file.patterns.rust)=16 {
block.end.$(file.patterns.rust)=16 }
braces.rust.style=16

keywords.$(file.patterns.rust)=alignof as be box break const continue crate do else enum extern false fn for if impl in let loop match mod mut offsetof once priv proc pub pure ref return self sizeof static struct super trait true type typeof unsafe unsized use virtual while yield

keywords2.$(file.patterns.rust)=bool char f32 f64 i16 i32 i64 i8 int str u16 u32 u64 u8 uint

keywords3.$(file.patterns.rust)=Self


style.rust.32=$(font.base)
style.rust.0=fore:#808080
style.rust.1=$(colour.code.comment.box),$(font.code.comment.box)
style.rust.2=$(colour.code.comment.line),$(font.code.comment.line)
style.rust.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.rust.4=$(colour.code.comment.doc),$(font.code.comment.doc)
style.rust.5=$(colour.number)
style.rust.6=$(colour.keyword),bold
style.rust.7=$(colour.keyword),bold
style.rust.8=$(colour.keyword)
style.rust.9=$(colour.keyword),bold
style.rust.10=$(colour.keyword),bold
style.rust.11=$(colour.keyword),bold
style.rust.12=$(colour.keyword),bold
style.rust.13=$(colour.string)
style.rust.14=fore:#B090B0
style.rust.15=$(colour.char)
style.rust.16=$(colour.operator),bold
style.rust.17=
style.rust.18=fore:#007F7F
style.rust.19=$(colour.preproc)
style.rust.20=fore:#000000,$(font.monospace),back:#E0C0E0
style.rust.21=$(colour.string)
style.rust.22=fore:#B090B0
style.rust.23=$(colour.char)



module scriptol

filter.scriptol=Scriptol (sol)|*.sol|

*filter.scriptol=$(filter.scriptol)

lexer.*.sol=scriptol
name.*.sol=scriptol

*language.scriptol=Scriptol|sol||

file.patterns.sol=*.sol

keywordclass.scriptol= act action alias always and array as \
bool boolean break by byte \
class case catch const constant continue \
dyn def define dict do double \
echo else elsif end enum error false file for float forever function \
globak gtk \
in if ifdef import include int integer java javax \
let long match mod nil not natural null number \
or print protected public real return redo \
scan script scriptol sol short super static step until using \
var text then this true try \
void volatile while when \
undef zero
keywords.$(file.patterns.sol)=$(keywordclass.scriptol)

statement.indent.*.sol=
statement.lookback.*.sol=1
block.start.*.sol=10

comment.block.scriptol=`~

style.scriptol.0=fore:#000000
style.scriptol.1=fore:#808080
style.scriptol.2=fore:#007F00,$(font.comment)
style.scriptol.3=fore:#007F00,$(font.comment)
style.scriptol.4=fore:#007F00
style.scriptol.5=fore:#007F00,$(font.comment)
style.scriptol.6=fore:#007F7F
style.scriptol.7=fore:#7F007F,$(font.monospace)
style.scriptol.8=fore:#7F007F,$(font.monospace)
style.scriptol.9=fore:#FF0000,$(font.monospace),back:#E0C0E0,eolfilled
style.scriptol.10=fore:#00007F,bold
style.scriptol.11=bold
style.scriptol.12=fore:#333333
style.scriptol.13=
style.scriptol.14=fore:#0000FF,bold
style.scriptol.15=




module smalltalk

file.patterns.smalltalk=*.st

filter.smalltalk=Smalltalk (st)|$(file.patterns.smalltalk)|

*filter.smalltalk=$(filter.smalltalk)

lexer.$(file.patterns.smalltalk)=smalltalk
name.$(file.patterns.smalltalk)=smalltalk

*language.smalltalk=Smalltalk|st||

keywords.$(file.patterns.smalltalk)=\
    ifTrue: ifFalse: whileTrue: whileFalse: ifNil: ifNotNil: whileTrue whileFalse repeat isNil notNil


style.smalltalk.0=
style.smalltalk.1=$(colour.string),eolfilled
style.smalltalk.2=$(colour.number)
style.smalltalk.3=$(colour.code.comment.box)
style.smalltalk.4=fore:#800080
style.smalltalk.5=$(colour.operator)
style.smalltalk.6=$(colour.keyword),bold
style.smalltalk.7=$(colour.keyword),bold
style.smalltalk.8=$(colour.keyword),bold
style.smalltalk.9=$(colour.keyword),bold
style.smalltalk.10=bold
style.smalltalk.11=fore:#A00000,bold
style.smalltalk.12=bold
style.smalltalk.13=fore:#008000
style.smalltalk.14=bold
style.smalltalk.15=$(colour.char)
style.smalltalk.16=$(colour.keyword),bold

module sorcins

file.patterns.sorcins=*.ins
filter.sorcins=SORCUS Installation File (ins)|$(file.patterns.sorcins)|

*filter.sorcins=$(filter.sorcins)

lexer.$(file.patterns.sorcins)=sorcins
name.$(file.patterns.sorcins)=sorcins

#*language.sorcins=SORCUS Installation File(ins)|ins||

commands=ARGUSCONNECTCHANNELS \
    M2DEVICE M2INST M2PAR M2PROC M2FUNC M2CMD M2LOADMODUL \
    M6DEVICE M6INST M6PAR M6PROC M6FUNC M6CMD M6LOADMODUL \
    M7DEVICE M7INST M7PAR M7PROC M7FUNC M7CMD M7LOADMODUL \
    M8DEVICE M8INST M8PAR M8PROC M8FUNC M8CMD M8LOADMODUL \
    MAXRESET MAXCONNECTCPU MAXLOADOSX MAXINST MAXPROC \
    MAXFUNC MAXPAR MAXLOADMDD MAXFLASHFILE

parameter=board slot layer osx file no usage task tasktype level irq flags \
    datasize func para start progno name count index TIMEOUT RESET

constants=MAX_NI_TASK MAX_TI_TASK MAX_II_TASK MAX_DI_TASK

keywords.$(file.patterns.sorcins)=$(commands)
keywords2.$(file.patterns.sorcins)=$(parameter)
keywords3.$(file.patterns.sorcins)=$(constants)

comment.block.sorcins=;

style.sorcins.0=
style.sorcins.1=fore:#0000ff
style.sorcins.2=fore:#808080
style.sorcins.3=fore:#008000
style.sorcins.4=fore:#ff0000
style.sorcins.5=
style.sorcins.6=
style.sorcins.7=
style.sorcins.8=
style.sorcins.9=fore:#ff00ff

module specman

file.patterns.specman=*.e_specman

filter.specman=Specman (e)|\
$(file.patterns.specman)|

*filter.specman=$(filter.specman)

lexer.$(file.patterns.specman)=specman
name.$(file.patterns.specman)=specman

*language.specman=Specman E|e_specman||

keywords.$(file.patterns.specman)= \
struct unit \
integer real bool int long uint nibble byte bits bytes bit time string \
var instance event \
verilog vhdl \
on compute start expect check that routine \
specman is also first only with like \
list of all radix hex dec bin ignore illegal \
traceable untraceable \
cover using count_only trace_only at_least transition item ranges \
cross text call task within \
packing low high \
locker address \
body code vec chars \
byte_array external_pointer \
choose matches \
if then else when try \
case casex casez default \
and or not xor \
until repeat while for from to step each do break continue \
before next always -kind network \
index it me in new return result select \
cycle sample events forever \
wait  change  negedge rise fall delay sync sim true detach eventually emit \
gen keep keeping soft before \
define as computed type extend \
variable global sys \
import \
untyped symtab ECHO DOECHO \
initialize non_terminal testgroup delayed exit finish \
out append print outf appendf \
post_generate pre_generate setup_test finalize_test extract_test \
init run copy as_a a set_config dut_error add clear lock quit \
lock unlock release swap quit to_string value stop_run \
crc_8 crc_32 crc_32_flip get_config add0 all_indices and_all \
apply average count delete exists first_index get_indices \
has insert is_a_permutation is_empty key key_exists key_index \
last last_index max max_index max_value min min_index \
min_value or_all pop pop0 push push0 product resize reverse \
sort split sum top top0 unique clear is_all_iterations \
get_enclosing_unit hdl_path exec deep_compare deep_compare_physical \
pack unpack warning error fatal \
size \
files load module ntv source_ref script read write \
initial idle others posedge clock cycles \
statement action command member exp block num file

keywords2.$(file.patterns.specman)= \
TRUE FALSE \
MAX_INT MIN_INT NULL UNDEF \

keywords3.$(file.patterns.specman)= \
any_sequence_item sequence any_sequence_driver driver \
created_driver  parent_sequence \
bfm_interaction_mode PULL_MODE PUSH_MODE MAIN SIMPLE RANDOM \
max_random_count max_random_depth num_of_last_items \
NORMAL NONE FULL LOW HIGH MEDIUM logger message \
get_tags show_units show_actions show_message ignore_tags \
set_style set_screen set_file set_flush_frequency \
set_format set_units set_actions at_message_verbosity \
short_name short_name_path short_name_style \
\
private protected package rerun any_env \
unqualified_clk clk reset_start reset_end \
message_logger verbosity tags to_file \
\
body pre_body post_body get_next_item send_to_bfm \
get_depth get_driver nice_string get_index grab \
is_blocked is_relevant ungrab mid_do post_do post_trace \
pre_do current_grabber get_current_item get_num_items_sent \
get_sequence_trace_list get_trace_list is_grabbed \
try_next_item check_is_relevant delay_clock \
get_sub_drivers regenerate_data wait_for_sequences \
stop

keywords4.$(file.patterns.specman)=

word.chars.specman=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.specman)=$(word.chars.specman)
comment.block.specman=//~
comment.block.at.line.start.specman=1
comment.stream.start.specman=
comment.stream.end.specman=
comment.box.start.specman=
comment.box.middle.specman=
comment.box.end.specman=


indent.maintain.$(file.patterns.specman)=1;


preprocessor.symbol.$(file.patterns.specman)=#
preprocessor.start.$(file.patterns.specman)=ifdef ifndef
preprocessor.middle.$(file.patterns.specman)=else
preprocessor.end.$(file.patterns.specman)=}



style.specman.32=$(font.base)
style.specman.0=fore:#808080
style.specman.1=$(font.base)
style.specman.2=$(colour.code.comment.line),$(font.code.comment.line)
style.specman.3=fore:red
style.specman.4=$(colour.number)
style.specman.5=$(colour.keyword),bold
style.specman.6=$(colour.string)
style.specman.7=fore:#B00040
style.specman.8=fore:#804080,bold
style.specman.9=$(colour.preproc)
style.specman.10=$(colour.operator),bold
style.specman.11=
style.specman.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.specman.13=fore:#007F00,back:#E0FFE0
style.specman.14=fore:#00005F
style.specman.19=back:#E0F0FF

braces.specman.style=10


module spice

file.patterns.spice=*.scp;*.out
filter.spice=Spice (out scp)|$(file.patterns.spice)|
*filter.spice=$(filter.spice)
lexer.$(file.patterns.spice)=spice
name.$(file.patterns.spice)=spice

*language.spice=Spice|scp||

keywordclass.spice.command=\
ac  alias  alter  alterparam append askvalues assertvalid autoscale \
break compose copy copytodoc dc  delete  destroy  destroyvec diff  display \
disto  dowhile  echo  else  end  errorstop  fftinit filter foreach  fourier \
freqtotime function  functionundef goto  homecursors if isdisplayed label \
let  linearize listing  load  loadaccumulator makelabel movelabel makesmithplot \
movecursorleft movecursorright  msgbox nameplot  newplot nextparam noise \
nopoints  op plot plotf plotref poly print  printcursors  printevent printname \
printplot printstatus printtext printtol printunits printval printvector \
pwl  pz  quit  removesmithplot rename repeat  resume  rotate  runs rusage \
save sendplot sendscript sens  set  setcursor setdoc setlabel setlabeltype \
setmargins setnthtrigger  setunits setvec setparam setplot  setquery \
setscaletype settracecolor settracestyle setsource settrigger  setvec \
setxlimits setylimits show  showmod  sort status  step  stop  switch \
tf  timetofreq  timetowave tran  unalias  unlet  unset  unalterparam \
update version view   wavefilter  wavetotime where  while  write
keywordclass.spice.functions=\
abs askvalue atan average ceil cos db differentiate differentiatex \
exp finalvalue floor getcursorx getcursory getcursory0 getcursory1 \
getparam im ln initialvalue integrate integratex interpolate isdef \
isdisplayed j log length mag, max maxscale mean meanpts min minscale \
nextplot  nextvector  norm operatingpoint ph phase phaseextend pk_pk \
pos pulse re rms rmspts rnd sameplot  sin sqrt stddev stddevpts tan \
tfall tolerance trise unitvec vector
keywordclass.spice.params=param nodeset include options dcconv subckt ends model


keywordclass.spice=$(keywordclass.spice.command) $(keywordclass.spice.functions) $(keywordclass.spice.params)

keywords.$(file.patterns.spice)=$(keywordclass.spice.command)
keywords2.$(file.patterns.spice)=$(keywordclass.spice.functions)
keywords3.$(file.patterns.spice)=$(keywordclass.spice.params)

style.spice.0=fore:#808080
style.spice.1=
style.spice.2=$(colour.keyword)
style.spice.3=$(colour.keyword),bold
style.spice.4=fore:#0040E0
style.spice.5=$(colour.number)
style.spice.6=$(colour.operator),bold
style.spice.7=$(colour.char)
style.spice.8=$(colour.code.comment.line),$(font.code.comment.line)

comment.block.spice=*~

braces.spice.style=4

statement.indent.$(file.patterns.spice)=5 begin declare else elsif exception for if is loop while
statement.lookback.$(file.patterns.spice)=20
block.start.$(file.patterns.spice)=10 then is
block.end.$(file.patterns.spice)=10 end

calltip.spice.word.characters=._$(chars.alpha)

module sql

filter.sql=SQL (sql)|*.sql|

*filter.sql=$(filter.sql)

file.patterns.sql=*.sql
file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp

lexer.$(file.patterns.sql)=sql
lexer.$(file.patterns.plsql)=sql

name.$(file.patterns.sql)=sql
name.$(file.patterns.plsql)=sql

*language.sql=SQL|sql||


style.sql.0=fore:#808080
style.sql.1=fore:#007F00,$(font.comment)
style.sql.2=fore:#007F00,$(font.comment)
style.sql.3=fore:#7F7F7F
style.sql.4=fore:#007F7F
style.sql.5=fore:#00007F,bold
style.sql.6=fore:#7F007F,$(font.monospace)
style.sql.7=fore:#7F007F,$(font.monospace)
style.sql.8=$(colour.preproc)
style.sql.9=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
style.sql.10=bold
style.sql.11=
style.sql.13=fore:#007F00,$(font.comment)
style.sql.15=fore:#007F00,$(font.comment)
style.sql.16=fore:#B00040
style.sql.17=fore:#3060A0,$(font.code.comment.doc)
style.sql.18=fore:#804020,$(font.code.comment.doc)
style.sql.19=fore:#4B0082
style.sql.20=fore:#B00040
style.sql.21=fore:#8B0000
style.sql.22=fore:#800080
style.sql.23=fore:#DD9900
style.sql.24=fore:#EE00AA

braces.sql.style=10




keywords.$(file.patterns.sql)=\
absolute action add admin after aggregate \
alias all allocate alter and any are array as asc \
assertion at authorization \
before begin binary bit blob body boolean both breadth by \
call cascade cascaded case cast catalog char character \
check class clob close collate collation column commit \
completion connect connection constraint constraints \
constructor continue corresponding create cross cube current \
current_date current_path current_role current_time current_timestamp \
current_user cursor cycle \
data date datetime day deallocate dec decimal declare default \
deferrable deferred delete depth deref desc describe descriptor \
destroy destructor deterministic dictionary diagnostics disconnect \
distinct domain double drop dynamic \
each else end end-exec equals escape every except \
exception exec execute exists exit external \
false fetch first float for foreign found from free full \
function \
general get global go goto grant group grouping \
having host hour \
identity if ignore immediate in indicator initialize initially \
inner inout input insert int integer intersect interval \
into is isolation iterate \
join \
key \
language large last lateral leading left less level like \
limit local localtime localtimestamp locator \
map match merge minute modifies modify module month \
names national natural nchar nclob new next no none \
not null numeric \
object of off old on only open operation option \
or order ordinality out outer output \
package pad parameter parameters partial path postfix precision prefix \
preorder prepare preserve primary \
prior privileges procedure public \
read reads real recursive ref references referencing relative \
restrict result return returns revoke right \
role rollback rollup routine row rows \
savepoint schema scroll scope search second section select \
sequence session session_user set sets size smallint some| space \
specific specifictype sql sqlexception sqlstate sqlwarning start \
state statement static structure system_user \
table temporary terminate than then time timestamp \
timezone_hour timezone_minute to trailing transaction translation \
treat trigger true \
under union unique unknown \
unnest update usage user using \
value values varchar variable varying view \
when whenever where with without work write \
year \
zone

keywords.$(file.patterns.plsql)=\
all alter and any array as asc at authid avg begin between \
binary_integer \
body boolean bulk by char char_base check close cluster collect \
comment commit compress connect constant create current currval \
cursor date day declare decimal default delete desc distinct \
do drop else elsif end exception exclusive execute exists exit \
extends false fetch float for forall from function goto group \
having heap hour if immediate in index indicator insert integer \
interface intersect interval into is isolation java level like \
limited lock long loop max min minus minute mlslabel mod mode \
month natural naturaln new nextval nocopy not nowait null number \
number_base ocirowid of on opaque open operator option or order \
organization others out package partition pctfree pls_integer \
positive positiven pragma prior private procedure public raise \
range raw real record ref release return reverse rollback row \
rowid rownum rowtype savepoint second select separate set share \
smallint space sql sqlcode sqlerrm start stddev subtype successful \
sum synonym sysdate table then time timestamp to trigger true \
type uid union unique update use user validate values varchar \
varchar2 variance view when whenever where while with work write \
year zone

keywords3.$(file.patterns.sql)=\
param author since return see deprecated todo

keywords4.$(file.patterns.sql)=\
acc~ept a~ppend archive log attribute \
bre~ak bti~tle \
c~hange cl~ear col~umn comp~ute conn~ect copy \
def~ine del desc~ribe disc~onnect \
e~dit exec~ute exit \
get \
help ho~st \
i~nput \
l~ist \
passw~ord pau~se pri~nt pro~mpt \
quit \
recover rem~ark repf~ooter reph~eader r~un \
sav~e set sho~w shutdown spo~ol sta~rt startup store \
timi~ng tti~tle \
undef~ine \
var~iable \
whenever oserror whenever sqlerror \

keywords5.$(file.patterns.sql)=\
dbms_output.disable dbms_output.enable dbms_output.get_line \
dbms_output.get_lines dbms_output.new_line dbms_output.put \
dbms_output.put_line \

module tacl

file.patterns.TACL=*.tacl
filter.tacl=TACL (TACL)|$(file.patterns.TACL)|
*filter.tacl=$(filter.tacl)

lexer.$(file.patterns.TACL)=TACL
name.$(file.patterns.TACL)=tacl

*language.tacl=TACL|tacl||

keywords.$(file.patterns.TACL)=activate add adddsttransition adduser alter altpri assign attachseg backupcpu break builtins buscmd clear columnize comment compute copy dump copyvar create createseg debug debugnow default delete deluser detachseg env exit fileinfo filenames files filetovar help history home info initterm inlecho inleof inlout inlprefix inlto join keep keys lights load loaded files logoff logon o obey outvar param password pause pmsearch pmsg pop ppd purge push rcvdump receivedump reload remotepassword rename reset rpasswrd run rund seginfo set setprompt settime show sink status stop suspend switch system systimes time timestamp_to_text useusers variables varinfo vartofile vchange vcopy vdelete vfind vinsert vlist vmove volume vtree wakeup who xbusdown xbusup ybusdown ybusup _comparev _contime_to_text _contime_to_text_date _contime_to_text_time _debugger _execute _longest _month3

comment.block.TACL===

style.TACL.0=fore:#808080,$(font.monospace)

style.TACL.1=$(colour.text.comment),$(font.code.comment)
style.TACL.2=$(colour.code.comment.line),$(font.code.comment.line)
style.TACL.3=$(colour.code.comment.document),$(font.code.comment.document)
style.TACL.4=$(colour.number),$(font.monospace)
style.TACL.5=$(colour.keyword),bold,$(font.monospace)
style.TACL.6=$(colour.string),$(font.monospace),$(font.monospace)
style.TACL.7=$(colour.char),$(font.monospace),$(font.monospace)
style.TACL.8=back:#C0C0C0,bold,$(font.monospace)
style.TACL.9=$(colour.preproc),$(font.preproc),$(font.monospace)
style.TACL.10=$(colour.operator),bold,$(font.monospace)
style.TACL.11=$(colour.identifier),$(font.identifier),$(font.monospace)
style.TACL.16=fore:#0020F0,$(font.monospace)



module tal
file.patterns.TAL=*.TAL
filter.tal=TAL (TAL)|$(file.patterns.TAL)|
*filter.tal=$(filter.tal)

lexer.$(file.patterns.TAL)=TAL
name.$(file.patterns.TAL)=tal

*language.tal=TAL|tal||

keywords.$(file.patterns.TAL)=and assert baddr begin by call callable case cbaddr code cwaddr define do downto drop else end entry external fixed for forward goto if int interrupt label land literal lor main not of or otherwise priv proc procaddr real resident return rscan scan sgbaddr sgwaddr sgxbaddr sgxwaddr stack store string struct subproc then to unsigned until use variable waddr while xor
keywords2.$(file.patterns.TAL)=at below bit_filler block bytes c cobol elements ext extensible filler fortran language name pascal private unspecified words

comment.block.TAL=--

style.TAL.0=fore:#808080

style.TAL.1=fore:#008000,$(font.code.comment)
style.TAL.2=$(colour.code.comment.line),$(font.code.comment.line)
style.TAL.3=$(colour.code.comment.document),$(font.code.comment.document)
style.TAL.4=$(colour.number)
style.TAL.5=$(colour.keyword),bold
style.TAL.6=$(colour.string),$(font.monospace)
style.TAL.7=$(colour.char),$(font.monospace)
style.TAL.8=$(colour.keyword),bold
style.TAL.9=$(colour.preproc),$(font.preproc)
style.TAL.10=$(colour.operator),bold
style.TAL.11=$(colour.identifier),$(font.identifier)




module tcl

file.patterns.tcl=*.tcl;*.exp
file.patterns.itcl=*.itcl
file.patterns.tcl.like=$(file.patterns.tcl);$(file.patterns.itcl);

filter.tcl=Tcl (tcl)|$(file.patterns.tcl)|
filter.itcl=itcl (itcl)|$(file.patterns.itcl)|

*filter.tcl=$(filter.tcl)

lexer.$(file.patterns.tcl)=tcl
lexer.$(file.patterns.itcl)=tcl

name.$(file.patterns.tcl)=tcl
name.$(file.patterns.itcl)=tcl

*language.tcl=TCL|tcl||

keywordclass.tcl=after append array auto_execok \
auto_import auto_load auto_load_index auto_qualify \
beep bgerror binary break case catch cd clock \
close concat continue dde default echo else elseif \
encoding eof error eval exec exit expr fblocked \
fconfigure fcopy file fileevent flush for foreach format \
gets glob global history http if incr info \
interp join lappend lindex linsert list llength load \
loadTk lrange lreplace lsearch lset lsort memory msgcat \
namespace open package pid pkg::create pkg_mkIndex Platform-specific proc \
puts pwd re_syntax read regexp registry regsub rename \
resource return scan seek set socket source split \
string subst switch tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell \
time trace unknown unset update uplevel upvar variable \
vwait while

keywordclass.tk=bell bind bindtags bitmap button canvas checkbutton clipboard \
colors console cursors destroy entry event focus font \
frame grab grid image Inter-client keysyms label labelframe \
listbox lower menu menubutton message option options pack \
panedwindow photo place radiobutton raise scale scrollbar selection \
send spinbox text tk tk_chooseColor tk_chooseDirectory tk_dialog tk_focusNext \
tk_getOpenFile tk_messageBox tk_optionMenu tk_popup tk_setPalette tkerror tkvars tkwait \
toplevel winfo wish wm

keywordclass.itcl=@scope body class code common component configbody \
constructor define destructor hull import inherit itcl itk itk_component \
itk_initialize itk_interior itk_option iwidgets keep method \
private protected public

keywordclass.TkCommands=tk_bisque tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \
tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox tk_optionMenu \
tk_popup tk_setPalette tk_textCopy tk_textCut tk_textPaste \
tkButtonAutoInvoke tkButtonDown tkButtonEnter tkButtonInvoke tkButtonLeave \
tkButtonUp tkCancelRepeat tkCheckRadioDown tkCheckRadioEnter tkCheckRadioInvoke \
tkColorDialog tkColorDialog_BuildDialog tkColorDialog_CancelCmd tkColorDialog_Config tkColorDialog_CreateSelector \
tkColorDialog_DrawColorScale tkColorDialog_EnterColorBar tkColorDialog_HandleRGBEntry tkColorDialog_HandleSelEntry tkColorDialog_InitValues \
tkColorDialog_LeaveColorBar tkColorDialog_MoveSelector tkColorDialog_OkCmd tkColorDialog_RedrawColorBars tkColorDialog_RedrawFinalColor \
tkColorDialog_ReleaseMouse tkColorDialog_ResizeColorBars tkColorDialog_RgbToX tkColorDialog_SetRGBValue tkColorDialog_StartMove \
tkColorDialog_XToRgb tkConsoleAbout tkConsoleBind tkConsoleExit tkConsoleHistory \
tkConsoleInit tkConsoleInsert tkConsoleInvoke tkConsoleOutput tkConsolePrompt \
tkConsoleSource tkDarken tkEntryAutoScan tkEntryBackspace tkEntryButton1 \
tkEntryClosestGap tkEntryGetSelection tkEntryInsert tkEntryKeySelect tkEntryMouseSelect \
tkEntryNextWord tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \
tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu tkFocusGroup_BindIn \
tkFocusGroup_BindOut tkFocusGroup_Create tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out \
tkFocusOK tkGenerateMenuSelect tkIconList tkIconList_Add tkIconList_Arrange \
tkIconList_AutoScan tkIconList_Btn1 tkIconList_Config tkIconList_Create tkIconList_CtrlBtn1 \
tkIconList_Curselection tkIconList_DeleteAll tkIconList_Double1 tkIconList_DrawSelection tkIconList_FocusIn \
tkIconList_FocusOut tkIconList_Get tkIconList_Goto tkIconList_Index tkIconList_Invoke \
tkIconList_KeyPress tkIconList_Leave1 tkIconList_LeftRight tkIconList_Motion1 tkIconList_Reset \
tkIconList_ReturnKey tkIconList_See tkIconList_Select tkIconList_Selection tkIconList_ShiftBtn1 \
tkIconList_UpDown tkListbox tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \
tkListboxBeginToggle tkListboxCancel tkListboxDataExtend tkListboxExtendUpDown tkListboxKeyAccel_Goto \
tkListboxKeyAccel_Key tkListboxKeyAccel_Reset tkListboxKeyAccel_Set tkListboxKeyAccel_Unset tkListboxMotion \
tkListboxSelectAll tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave \
tkMbMotion tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup \
tkMenuEscape tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke \
tkMenuLeave tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \
tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox tkMotifFDialog \
tkMotifFDialog_ActivateDList tkMotifFDialog_ActivateFEnt tkMotifFDialog_ActivateFList tkMotifFDialog_ActivateSEnt tkMotifFDialog_BrowseDList \
tkMotifFDialog_BrowseFList tkMotifFDialog_BuildUI tkMotifFDialog_CancelCmd tkMotifFDialog_Config tkMotifFDialog_Create \
tkMotifFDialog_FileTypes tkMotifFDialog_FilterCmd tkMotifFDialog_InterpFilter tkMotifFDialog_LoadFiles tkMotifFDialog_MakeSList \
tkMotifFDialog_OkCmd tkMotifFDialog_SetFilter tkMotifFDialog_SetListMode tkMotifFDialog_Update tkPostOverPoint \
tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo tkScaleActivate tkScaleButton2Down \
tkScaleButtonDown tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \
tkScreenChanged tkScrollButton2Down tkScrollButtonDown tkScrollButtonDrag tkScrollButtonUp \
tkScrollByPages tkScrollByUnits tkScrollDrag tkScrollEndDrag tkScrollSelect \
tkScrollStartDrag tkScrollTopBottom tkScrollToPos tkTabToWindow tkTearOffMenu \
tkTextAutoScan tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \
tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord tkTextPaste \
tkTextPrevPara tkTextPrevPos tkTextPrevWord tkTextResetAnchor tkTextScrollPages \
tkTextSelectTo tkTextSetCursor tkTextTranspose tkTextUpDownLine tkTraverseToMenu \
tkTraverseWithinMenu

keywords.$(file.patterns.tcl.like)=$(keywordclass.tcl)
keywords2.$(file.patterns.tcl.like)=$(keywordclass.tk)
keywords3.$(file.patterns.tcl.like)= $(keywordclass.TkCommands)
keywords4.$(file.patterns.itcl)=$(keywordclass.itcl)
keywords5.$(file.patterns.tcl.like)=expand

comment.block.tcl=#~
comment.box.start.tcl=##
comment.box.middle.tcl= #
comment.box.end.tcl= ##

style.tcl.32=$(font.base)
style.tcl.0=fore:#808080
style.tcl.1=$(colour.code.comment.line),$(font.comment),back:#f0FFE0
style.tcl.2=$(colour.code.comment.line),$(font.code.comment.line)
style.tcl.3=$(colour.number)
style.tcl.4=$(colour.string),bold,back:#FFF0F0
style.tcl.5=$(colour.string),back:#FFf0f0,eolfilled
style.tcl.6=$(colour.operator),bold
style.tcl.7=$(colour.keyword)
style.tcl.8=$(colour.preproc)
style.tcl.9=$(colour.preproc),back:#effff0
style.tcl.10=$(colour.char)
style.tcl.11=$(colour.keyword),back:#FFFF80,bold
style.tcl.12=$(colour.keyword),bold
style.tcl.13=$(colour.keyword),back:#e0ffff,bold
style.tcl.14=$(colour.keyword),back:#FFf0f0,bold
style.tcl.15=$(colour.keyword),back:#FFD0D0,bold
style.tcl.16=$(style.tcl.7),back:#FFD0FF,bold
style.tcl.17=$(style.tcl.7),back:#FFFFD0,bold
style.tcl.18=$(style.tcl.7),back:#FFA0A0,bold,
style.tcl.19=$(style.tcl.7),back:#FFD0D0
style.tcl.20=$(colour.code.comment.box),$(font.code.comment.box),back:#f0FFf0,eolfilled
style.tcl.21=$(colour.embedded.comment),$(font.embedded.comment),back:#f0FFf0

style.tcl.34=fore:#f0f0f0,bold,back:#7070ff
style.tcl.35=fore:#FF0000,bold,back:#FF00FF

braces.tcl.style=6

module tex



file.patterns.tex=*.tex;*.sty
file.patterns.latex=*.tex;*.sty;*.aux;*.toc;*.idx
file.patterns.context=*.tex;*.tui;*.tuo;*.sty


filter.tex=TeX (tex sty)|$(file.patterns.tex)|
filter.latex=LaTeX (tex sty aux toc idx)|$(file.patterns.latex)|
filter.context=ConTeXt (tex tui tuo sty)|$(file.patterns.context)|

lexer.$(file.patterns.tex)=tex
lexer.$(file.patterns.latex)=tex
lexer.$(file.patterns.context)=tex

name.$(file.patterns.tex)=tex
name.$(file.patterns.latex)=tex
name.$(file.patterns.context)=tex

*language.tex=TeX|tex||




style.tex.0=fore:#3F3F3F
style.tex.1=fore:#007F7F
style.tex.2=fore:#7F0000
style.tex.3=fore:#7F7F00
style.tex.4=fore:#007F00
style.tex.5=

style.tex.34=fore:#00007F
style.tex.35=fore:#7F007F


comment.block.tex=%
comment.block.at.line.start.tex=1


lexer.tex.interface.default=0


lexer.tex.use.keywords=1


lexer.tex.comment.process=0


lexer.tex.auto.if=1


keywordclass.primitives.tex=\
    above abovedisplayshortskip abovedisplayskip \
    abovewithdelims accent adjdemerits advance afterassignment \
    aftergroup atop atopwithdelims \
    badness baselineskip batchmode begingroup \
    belowdisplayshortskip belowdisplayskip binoppenalty botmark \
    box boxmaxdepth brokenpenalty \
    catcode char chardef cleaders closein closeout clubpenalty \
    copy count countdef cr crcr csname \
    day deadcycles def defaulthyphenchar defaultskewchar \
    delcode delimiter delimiterfactor delimeters \
    delimitershortfall delimeters dimen dimendef discretionary \
    displayindent displaylimits displaystyle \
    displaywidowpenalty displaywidth divide \
    doublehyphendemerits dp dump \
    edef else emergencystretch end endcsname endgroup endinput \
    endlinechar eqno errhelp errmessage errorcontextlines \
    errorstopmode escapechar everycr everydisplay everyhbox \
    everyjob everymath everypar everyvbox exhyphenpenalty \
    expandafter  \
    fam fi finalhyphendemerits firstmark floatingpenalty font \
    fontdimen fontname futurelet \
    gdef global group globaldefs \
    halign hangafter hangindent hbadness hbox hfil horizontal \
    hfill horizontal hfilneg hfuzz hoffset holdinginserts hrule \
    hsize hskip hss horizontal ht hyphenation hyphenchar \
    hyphenpenalty hyphen \
    if ifcase ifcat ifdim ifeof iffalse ifhbox ifhmode ifinner \
    ifmmode ifnum ifodd iftrue ifvbox ifvmode ifvoid ifx \
    ignorespaces immediate indent input inputlineno input \
    insert insertpenalties interlinepenalty \
    jobname \
    kern \
    language lastbox lastkern lastpenalty lastskip lccode \
    leaders left lefthyphenmin leftskip leqno let limits \
    linepenalty line lineskip lineskiplimit long looseness \
    lower lowercase \
    mag mark mathaccent mathbin mathchar mathchardef mathchoice \
    mathclose mathcode mathinner mathop mathopen mathord \
    mathpunct mathrel mathsurround maxdeadcycles maxdepth \
    meaning medmuskip message mkern month moveleft moveright \
    mskip multiply muskip muskipdef \
    newlinechar noalign noboundary noexpand noindent nolimits \
    nonscript scriptscript nonstopmode nulldelimiterspace \
    nullfont number \
    omit openin openout or outer output outputpenalty over \
    overfullrule overline overwithdelims \
    pagedepth pagefilllstretch pagefillstretch pagefilstretch \
    pagegoal pageshrink pagestretch pagetotal par parfillskip \
    parindent parshape parskip patterns pausing penalty \
    postdisplaypenalty predisplaypenalty predisplaysize \
    pretolerance prevdepth prevgraf \
    radical raise read relax relpenalty right righthyphenmin \
    rightskip romannumeral \
    scriptfont scriptscriptfont scriptscriptstyle scriptspace \
    scriptstyle scrollmode setbox setlanguage sfcode shipout \
    show showbox showboxbreadth showboxdepth showlists showthe \
    skewchar skip skipdef spacefactor spaceskip span special \
    splitbotmark splitfirstmark splitmaxdepth splittopskip \
    string \
    tabskip textfont textstyle the thickmuskip thinmuskip time \
    toks toksdef tolerance topmark topskip tracingcommands \
    tracinglostchars tracingmacros tracingonline tracingoutput \
    tracingpages tracingparagraphs tracingrestores tracingstats \
    uccode uchyph underline unhbox unhcopy unkern unpenalty \
    unskip unvbox unvcopy uppercase \
    vadjust valign vbadness vbox vcenter vfil vfill vfilneg \
    vfuzz voffset vrule vsize vskip vsplit vss vtop \
    wd widowpenalty write \
    xdef xleaders xspaceskip \
    year

keywordclass.primitives.etex=\
    beginL beginR botmarks \
    clubpenalties currentgrouplevel currentgrouptype \
    currentifbranch currentiflevel currentiftype \
    detokenize dimexpr displaywidowpenalties \
    endL endR eTeXrevision eTeXversion everyeof \
    firstmarks fontchardp fontcharht fontcharic fontcharwd \
    glueexpr glueshrink glueshrinkorder gluestretch \
    gluestretchorder gluetomu \
    ifcsname ifdefined iffontchar interactionmode \
    interactionmode interlinepenalties \
    lastlinefit lastnodetype \
    marks topmarks middle muexpr mutoglue \
    numexpr \
    pagediscards parshapedimen parshapeindent parshapelength \
    predisplaydirection \
    savinghyphcodes savingvdiscards scantokens showgroups \
    showifs showtokens splitdiscards splitfirstmarks \
    TeXXeTstate tracingassigns tracinggroups tracingifs \
    tracingnesting tracingscantokens \
    unexpanded unless \
    widowpenalties

keywordclass.primitives.pdftex=\
    pdfadjustspacing pdfannot pdfavoidoverfull \
    pdfcatalog pdfcompresslevel \
    pdfdecimaldigits pdfdest pdfdestmargin \
    pdfendlink pdfendthread \
    pdffontattr pdffontexpand pdffontname pdffontobjnum pdffontsize \
    pdfhorigin \
    pdfimageresolution pdfincludechars pdfinfo \
    pdflastannot pdflastdemerits pdflastobj \
    pdflastvbreakpenalty pdflastxform pdflastximage \
    pdflastximagepages pdflastxpos pdflastypos \
    pdflinesnapx pdflinesnapy pdflinkmargin pdfliteral \
    pdfmapfile pdfmaxpenalty pdfminpenalty pdfmovechars \
    pdfnames \
    pdfobj pdfoptionpdfminorversion pdfoutline pdfoutput \
    pdfpageattr pdfpageheight pdfpageresources pdfpagesattr \
    pdfpagewidth pdfpkresolution pdfprotrudechars \
    pdfrefobj pdfrefxform pdfrefximage \
    pdfsavepos pdfsnaprefpoint pdfsnapx pdfsnapy pdfstartlink \
    pdfstartthread \
    pdftexrevision pdftexversion pdfthread pdfthreadmargin \
    pdfuniqueresname \
    pdfvorigin \
    pdfxform pdfximage

keywordclass.primitives.omega=\
    odelimiter omathaccent omathchar oradical omathchardef omathcode odelcode \
    leftghost rightghost \
    charwd charht chardp charit \
    localleftbox localrightbox \
    localinterlinepenalty localbrokenpenalty \
    pagedir bodydir pardir textdir mathdir \
    boxdir nextfakemath \
    pagewidth pageheight pagerightoffset pagebottomoffset \
    nullocp nullocplist ocp externalocp ocplist pushocplist popocplist clearocplists ocptracelevel \
    addbeforeocplist addafterocplist removebeforeocplist removeafterocplist \
    OmegaVersion \
    InputTranslation OutputTranslation DefaultInputTranslation DefaultOutputTranslation \
    noInputTranslation noOutputTranslation \
    InputMode OutputMode DefaultInputMode DefaultOutputMode \
    noInputMode noOutputMode noDefaultInputMode noDefaultOutputMode


keywordclass.macros.plain.partial=\
    TeX \
    bgroup egroup endgraf space empty null \
    newcount newdimen newskip newmuskip newbox newtoks newhelp newread newwrite newfam newlanguage newinsert newif \
    maxdimen magstephalf magstep \
    frenchspacing nonfrenchspacing normalbaselines obeylines obeyspaces raggedright ttraggedright \
    thinspace negthinspace enspace enskip quad qquad \
    smallskip medskip bigskip removelastskip topglue vglue hglue \
    break nobreak allowbreak filbreak goodbreak smallbreak medbreak bigbreak \
    line leftline rightline centerline rlap llap underbar strutbox strut \
    cases matrix pmatrix bordermatrix eqalign displaylines eqalignno leqalignno \
    pageno folio tracingall showhyphens fmtname fmtversion \
    hphantom vphantom phantom smash

keywordclass.macros.eplain.partial=\
    eTeX \
    newmarks grouptype interactionmode nodetype iftype \
    tracingall loggingall tracingnone


keywordclass.primitives.pdftex.experimental=

keywordclass.primitives.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.primitives.pdftex.experimental) \
    $(keywordclass.primitives.omega)


keywordclass.macros.context.undocumented.en=
keywordclass.macros.context.undocumented.nl=
keywordclass.macros.context.undocumented.de=
keywordclass.macros.context.undocumented.cz=
keywordclass.macros.context.undocumented.it=
keywordclass.macros.context.undocumented.ro=

keywordclass.macros.context.extras=

keywordclass.macros.context.nl=
keywordclass.macros.context.en=
keywordclass.macros.context.de=
keywordclass.macros.context.cz=
keywordclass.macros.context.it=
keywordclass.macros.context.ro=

import cont-en-scite
import cont-nl-scite
import cont-de-scite
import cont-cz-scite
import cont-it-scite
import cont-ro-scite

import cont-xx-scite


keywordclass.macros.latex.all=

import latex-scite


keywordclass.tex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.macros.plain.partial)

keywordclass.etex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.macros.plain.partial) \
    $(keywordclass.macros.eplain.partial)

keywordclass.latex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.macros.latex.all)

keywordclass.pdflatex.all=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.macros.latex.all)


keywordclass.context.base=\
    $(keywordclass.primitives.tex) \
    $(keywordclass.primitives.etex) \
    $(keywordclass.primitives.pdftex) \
    $(keywordclass.primitives.pdftex.experimental) \
    $(keywordclass.primitives.omega) \
    $(keywordclass.macros.plain.partial) \
    $(keywordclass.macros.eplain.partial)

keywordclass.context.all=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.en) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.en)

keywordclass.context.all.nl=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.nl) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.nl)

keywordclass.context.all.en=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.en) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.en)

keywordclass.context.all.de=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.de) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.de)

keywordclass.context.all.cz=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.cz) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.cz)

keywordclass.context.all.it=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.it) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.it)

keywordclass.context.all.ro=\
    $(keywordclass.context.base) \
    $(keywordclass.macros.context.ro) \
    $(keywordclass.macros.context.extras) \
    $(keywordclass.macros.context.undocumented.ro)


keywords.$(file.patterns.tex)=$(keywordclass.tex.all)
keywords.$(file.patterns.latex)=$(keywordclass.latex.all)
keywords.$(file.patterns.context)=$(keywordclass.context.all)


keywords.$(file.patterns.context)=$(keywordclass.context.base)

keywords2.$(file.patterns.context)=$(keywordclass.context.all.nl)
keywords3.$(file.patterns.context)=$(keywordclass.context.all.en)
keywords4.$(file.patterns.context)=$(keywordclass.context.all.de)
keywords5.$(file.patterns.context)=$(keywordclass.context.all.cz)
keywords6.$(file.patterns.context)=$(keywordclass.context.all.it)
keywords7.$(file.patterns.context)=$(keywordclass.context.all.ro)



keywords8.$(file.patterns.context)=$(keywordclass.pdflatex.all)


word.characters.$(file.patterns.tex)=$(chars.alpha)$(chars.numeric)$(chars.accented)\@
word.characters.$(file.patterns.latex)=$(chars.alpha)$(chars.numeric)$(chars.accented)\@
word.characters.$(file.patterns.context)=$(chars.alpha)$(chars.numeric)$(chars.accented)\@!?


module txt2tags

file.patterns.txt2tags=*.t2t

shbang.txt2tags=txt2tags

filter.txt2tags=Txt2tags (t2t)|$(file.patterns.txt2tags)|

*filter.txt2tags=$(filter.txt2tags)

lexer.$(file.patterns.txt2tags)=txt2tags
name.$(file.patterns.txt2tags)=txt2tags

*language.txt2tags=txt2tags|t2t||

style.txt2tags.0=fore:#000000

style.txt2tags.1=fore:#000000

style.txt2tags.2=fore:#445675,bold

style.txt2tags.3=fore:#445675

style.txt2tags.4=fore:#653A39,italics

style.txt2tags.5=fore:#386742

style.txt2tags.6=fore:#E20700,bold

style.txt2tags.7=fore:#E20700,bold

style.txt2tags.8=fore:#A81D05,bold

style.txt2tags.9=fore:#871704,bold

style.txt2tags.10=fore:#871704,bold

style.txt2tags.11=fore:#871704,bold

style.txt2tags.12=fore:#871704,bold

style.txt2tags.13=fore:#E300EE

style.txt2tags.14=fore:#E300EE

style.txt2tags.15=fore:#015F52

style.txt2tags.16=fore:#644A9B

style.txt2tags.17=fore:#ff901e

style.txt2tags.18=fore:#0930DE,italics

style.txt2tags.19=fore:#009f00

style.txt2tags.20=fore:#009f00

style.txt2tags.21=fore:#005f00

style.txt2tags.22=fore:#777777

style.txt2tags.23=fore:#C0036E

style.txt2tags.24=fore:#848B00

style.txt2tags.25=fore:#C05600




module vb

file.patterns.vb=*.vb;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob
file.patterns.xojo=*.xojo
file.patterns.vblike=$(file.patterns.vb);$(file.patterns.xojo);
file.patterns.wscript=*.vbs;*.dsm

*source.patterns.vb=$(file.patterns.vb);$(file.patterns.wscript);

filter.vb=VB (vb vbp vbs bas frm cls ctl pag dsr dob)|$(file.patterns.vb);$(file.patterns.wscript);*.vbp;*.vbg;*.mak;*.vbw|

*filter.vb=$(filter.vb)

lexer.$(file.patterns.vblike)=vb
lexer.$(file.patterns.wscript)=vbscript

name.$(file.patterns.vb)=vb
name.$(file.patterns.xojo)=xojo
name.$(file.patterns.wscript)=vbscript

*language.vb=VB|vb||
*language.xojo=Xojo|xojo||
*language.vbscript=VB Script|vbs||

keywordclass.vb6=\
addressof alias and as attribute base begin binary boolean byref byte byval call case cdbl \
cint clng compare const csng cstr currency date decimal declare defbool defbyte defcur \
defdate defdbl defdec defint deflng defobj defsng defstr defvar dim do double each else \
elseif empty end enum eqv erase error event exit explicit false for friend function get \
global gosub goto if imp implements in input integer is len let lib like load lock long \
loop lset me mid midb mod new next not nothing null object on option optional or paramarray \
preserve print private property public raiseevent randomize redim rem resume return rset \
seek select set single static step stop string sub text then time to true type typeof \
unload until variant wend while with withevents xor

keywordclass.vb=$(keywordclass.vb6)

keywordclass.vbotherstatements=\
appactivate beep chdir chdrive close filecopy get input kill line unlock mkdir name \
open print put reset rmdir savepicture savesetting seek sendkeys setattr width write

keywordclass.vbnet=\
addhandler andalso ansi assembly auto catch cbool cbyte cchar cdate cdec char class \
cobj continue csbyte cshort ctype cuint culng cushort custom default delegate directcast \
endif externalsource finally gettype handles imports inherits interface isfalse isnot \
istrue module mustinherit mustoverride my mybase myclass namespace narrowing notinheritable \
notoverridable of off operator orelse overloads overridable overrides partial protected \
readonly region removehandler sbyte shadows shared short strict structure synclock \
throw try trycast uinteger ulong unicode ushort using when widening writeonly

keywords.$(file.patterns.vb)=$(keywordclass.vb6) $(keywordclass.vbnet)
keywords.$(file.patterns.xojo)=$(keywordclass.vb6) $(keywordclass.vbnet)
keywords.$(file.patterns.wscript)=$(keywordclass.vb6)

keywords2.$(file.patterns.vb)=$(keywordclass.vbotherstatements)

comment.block.vb='~
comment.block.vbscript='~

style.vb.32=$(font.base)
style.vb.0=
style.vb.1=$(colour.code.comment.line),$(font.code.comment.line)
style.vb.2=$(colour.number)
style.vb.3=$(colour.keyword)
style.vb.4=$(colour.string)
style.vb.5=$(colour.preproc)
style.vb.6=$(colour.operator)
style.vb.7=
style.vb.8=$(colour.number)
style.vb.9=$(style.stringeol)
style.vb.10=$(style.vb.5),back:#D0FFD0
style.vb.11=$(style.vb.5),back:#D0D0FF
style.vb.12=$(style.vb.5),back:#FFD0D0

style.xojo.32=$(font.base)
style.xojo.0=
style.xojo.1=$(colour.code.comment.line),$(font.code.comment.line)
style.xojo.2=$(colour.number)
style.xojo.3=$(colour.keyword)
style.xojo.4=$(colour.string)
style.xojo.5=$(colour.preproc)
style.xojo.6=$(colour.operator)
style.xojo.7=
style.xojo.8=$(colour.number)
style.xojo.9=$(style.stringeol)
style.xojo.10=$(style.vb.5),back:#D0FFD0
style.xojo.11=$(style.vb.5),back:#D0D0FF
style.xojo.12=$(style.vb.5),back:#FFD0D0

style.vbscript.0=$(style.vb.0)
style.vbscript.1=$(style.vb.1)
style.vbscript.2=$(style.vb.2)
style.vbscript.3=$(style.vb.3)
style.vbscript.4=$(style.vb.4)
style.vbscript.5=$(style.vb.5)
style.vbscript.6=$(style.vb.6)
style.vbscript.7=$(style.vb.7)
style.vbscript.8=$(style.vb.8)
style.vbscript.9=$(style.vb.9)
style.vbscript.10=$(style.vb.10)
style.vbscript.11=$(style.vb.11)
style.vbscript.12=$(style.vb.12)


module verilog

file.patterns.verilog=*.v;*.vh
filter.verilog=Verilog (verilog)|$(file.patterns.verilog)|

*filter.verilog=$(filter.verilog)

lexer.$(file.patterns.verilog)=verilog
name.$(file.patterns.verilog)=verilog

*language.verilog=Verilog|v||

word.chars.verilog=$(chars.alpha)$(chars.numeric)_`$#
word.characters.$(file.patterns.verilog)=$(word.chars.verilog)

calltip.verilog.word.characters=$(chars.alpha)$(chars.numeric)_$

comment.block.verilog=//~
comment.stream.start.verilog=/*
comment.stream.end.verilog=*/
comment.box.start.verilog=/*
comment.box.middle.verilog= *
comment.box.end.verilog= */

fold.verilog.flags=0

statement.lookback.$(file.patterns.verilog)=20
statement.end.$(file.patterns.verilog)=10 ;
block.start.$(file.patterns.verilog)=5 begin case casex casez
block.end.$(file.patterns.verilog)=5 begin end endcase
statement.indent.$(file.patterns.verilog)=5 always else for if while

indent.maintain.$(file.patterns.verilog)=0

preprocessor.symbol.$(file.patterns.verilog)=`
preprocessor.start.$(file.patterns.verilog)=ifdef ifndef
preprocessor.middle.$(file.patterns.verilog)=else
preprocessor.end.$(file.patterns.verilog)=endif

keywordclass.verilog= \
always and assign automatic \
begin buf bufif0 bufif1 \
case casex casez cell cmos config \
deassign default defparam design disable \
edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event \
for force forever fork function \
generate genvar \
highz0 highz1 \
if ifnone incdir include initial inout input instance integer \
join \
large liblist library localparam \
macromodule medium module \
nand negedge nmos nor noshowcancelled not notif0 notif1 \
or output \
parameter pmos posedge primitive pull0 pull1 pulldown pullup pulsestyle_ondetect pulsestyle_onevent \
rcmos real realtime reg release repeat rnmos rpmos rtran rtranif0 rtranif1 \
scalared showcancelled signed small specify specparam strong0 strong1 supply0 supply1 \
table task time tran tranif0 tranif1 tri tri0 tri1 triand trior trireg \
unsigned use uwire \
vectored \
wait wand weak0 weak1 while wire wor \
xnor xor

keywords.$(file.patterns.verilog)=$(keywordclass.verilog)

keywords2.$(file.patterns.verilog)=
keywords3.$(file.patterns.verilog)= \
$async$and$array $async$and$plane $async$nand$array $async$nand$plane $async$nor$array $async$nor$plane $async$or$array $async$or$plane \
$bitstoreal \
$countdrivers \
$display $displayb $displayh $displayo \
$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson $dist_t $dist_uniform \
$dumpall $dumpfile $dumpflush $dumplimit $dumpoff $dumpon $dumpportsall $dumpportsflush $dumpportslimit $dumpportsoff $dumpportson $dumpvars \
$fclose $fdisplayh $fdisplay $fdisplayf $fdisplayb $feof $ferror $fflush $fgetc $fgets $finish $fmonitorb $fmonitor $fmonitorf $fmonitorh $fopen $fread $fscanf $fseek $fsscanf $fstrobe $fstrobebb $fstrobef $fstrobeh $ftel $fullskew $fwriteb $fwritef $fwriteh $fwrite \
$getpattern \
$history $hold \
$incsave $input $itor \
$key \
$list $log \
$monitorb $monitorh $monitoroff $monitoron $monitor $monitoro \
$nochange $nokey $nolog \
$period $printtimescale \
$q_add $q_exam $q_full $q_initialize $q_remove \
$random $readmemb $readmemh $readmemh $realtime $realtobits $recovery $recrem $removal $reset_count $reset $reset_value $restart $rewind $rtoi \
$save $scale $scope $sdf_annotate $setup $setuphold $sformat $showscopes $showvariables $showvars $signed $skew $sreadmemb $sreadmemh $stime $stop $strobeb $strobe $strobeh $strobeo $swriteb $swriteh $swriteo $swrite $sync$and$array $sync$and$plane $sync$nand$array $sync$nand$plane $sync$nor$array $sync$nor$plane $sync$or$array $sync$or$plane \
$test$plusargs $time $timeformat $timeskew \
$ungetc $unsigned \
$value$plusargs \
$width $writeb $writeh $write $writeo
keywords4.$(file.patterns.verilog)=
keywords5.$(file.patterns.verilog)= synopsys parallel_case infer_mux TODO



file.patterns.systemverilog=*.sv;*.svh
filter.systemverilog=systemverilog (systemverilog)|$(file.patterns.systemverilog)|
lexer.$(file.patterns.systemverilog)=verilog

word.chars.systemverilog=$(chars.alpha)$(chars.numeric)_`$#
word.characters.$(file.patterns.systemverilog)=$(word.chars.systemverilog)

statement.lookback.$(file.patterns.systemverilog)=20
statement.end.$(file.patterns.systemverilog)=10 ;
block.start.$(file.patterns.systemverilog)=5 begin case casex casez
block.end.$(file.patterns.systemverilog)=5 begin end endcase
statement.indent.$(file.patterns.systemverilog)=5 always else for if while

indent.maintain.$(file.patterns.systemverilog)= 0

preprocessor.symbol.$(file.patterns.systemverilog)=`
preprocessor.start.$(file.patterns.systemverilog)=ifdef ifndef
preprocessor.middle.$(file.patterns.systemverilog)=else
preprocessor.end.$(file.patterns.systemverilog)=endif

keywords.$(file.patterns.systemverilog)=\
alias always always_comb always_ff always_latch and assert assign assume \
automatic before begin bind bins binsof bit break buf bufif0 bufif1 byte case \
casex casez cell chandle class clocking cmos config const constraint context \
continue cover covergroup coverpoint cross deassign default defparam design \
disable dist do edge else end endcase endclass endclocking endconfig \
endfunction endgenerate endgroup endinterface endmodule endpackage \
endprimitive endprogram endproperty endspecify endsequence endtable endtask \
enum event expect export extends extern final first_match for force foreach \
forever fork forkjoin function generate genvar highz0 highz1 if iff ifnone \
ignore_bins illegal_bins import incdir include initial inout input inside \
instance int integer interface intersect join join_any join_none large liblist \
library local localparam logic longint macromodule matches medium modport \
module nand negedge new nmos nor noshowcancelled not notif0 notif1 null or \
output package packed parameter pmos posedge primitive priority program \
property protected pull0 pull1 pulldown pullup pulsestyle_onevent \
pulsestyle_ondetect pure rand randc randcase randsequence rcmos real realtime \
ref reg release repeat return rnmos rpmos rtran rtranif0 rtranif1 scalared \
sequence shortint shortreal showcancelled signed small solve specify specparam \
static string strong0 strong1 struct super supply0 supply1 table tagged task \
this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 \
triand trior trireg type typedef union unique unsigned use uwire var vectored \
virtual void wait wait_order wand weak0 weak1 while wildcard wire with within \
wor xnor xor

keywords2.$(file.patterns.systemverilog)=

keywords3.$(file.patterns.systemverilog)=\
$acos $acosh $asin $asinh $assertfailoff $assertfailon $assertkill \
$assertnonvacuouson $assertoff $asserton $assertpassoff $assertpasson \
$assertvacuousoff $async$and$array $async$and$plane $async$nand$array \
$async$nand$plane $async$nor$array $async$nor$plane $async$or$array \
$async$or$plane $atan $atan2 $atanh $bits $bitstoreal $bitstoshortreal $cast \
$ceil $changed $changed_gclk $changing_gclk $clog2 $cos $cosh $countdrivers \
$countones $coverage_control $coverage_get $coverage_get_max $coverage_merge \
$coverage_save $dimensions $display $displayb $displayh $displayo \
$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson \
$dist_t $dist_uniform $dumpall $dumpfile $dumpflush $dumplimit $dumpoff \
$dumpon $dumpports $dumpportsall $dumpportsflush $dumpportslimit $dumpportsoff \
$dumpportson $dumpvars $error $exit $exp $falling_gclk $fatal $fclose \
$fdisplay $fdisplayb $fdisplayf $fdisplayh $fdisplayo $fell $fell_gclk $feof \
$ferror $fflush $fgetc $fgets $finish $floor $fmonitor $fmonitorb $fmonitorf \
$fmonitorh $fmonitoro $fopen $fread $fscanf $fseek $fsscanf $fstrobe $fstrobeb \
$fstrobebb $fstrobef $fstrobeh $fstrobeo $ftel $ftell $fullskew $future_gclk \
$fwrite $fwriteb $fwritef $fwriteh $fwriteo $get_coverage $getpattern $high \
$history $hold $hypot $increment $incsave $info $input $isunbounded $isunknown \
$itor $key $left $list $ln $load_coverage_db $log $log10 $low $monitor \
$monitorb $monitorh $monitoro $monitoroff $monitoron $nochange $nokey $nolog \
$onehot $onehot0 $past $past_gclk $period $pow $printtimescale $q_add $q_exam \
$q_full $q_initialize $q_remove $random $readmemb $readmemh $realtime \
$realtobits $recovery $recrem $removal $reset $reset_count $reset_value \
$restart $rewind $right $rising_gclk $root $rose $rose_gclk $rtoi $sampled \
$save $scale $scope $sdf_annotate $set_coverage_db_name $setup $setuphold \
$sformat $sformatf $shortrealtobits $showscopes $showvariables $showvars \
$signed $sin $sinh $size $skew $sqrt $sreadmemb $sreadmemh $sscanf $stable \
$stable_gclk $steady_gclk $stime $stop $strobe $strobeb $strobeh $strobeo \
$swrite $swriteb $swriteh $swriteo $sync$and$array $sync$and$plane \
$sync$nand$array $sync$nand$plane $sync$nor$array $sync$nor$plane \
$sync$or$array $sync$or$plane $system $tan $tanh $test$plusargs $time \
$timeformat $timeskew $typename $ungetc $unit $unpacked_dimensions $unsigned \
$urandom $urandom_range $value$plusargs $warning $width $write $writeb $writeh \
$writememb $writememh $writeo

keywords4.$(file.patterns.systemverilog)=
keywords5.$(file.patterns.systemverilog)= synopsys parallel_case infer_mux TODO



style.verilog.32=$(font.base)
style.verilog.0=fore:#808080
style.verilog.1=$(colour.code.comment.box),$(font.code.comment.box)
style.verilog.2=$(colour.code.comment.line),$(font.code.comment.line)
style.verilog.3=fore:#3F7F3F,$(font.code.comment.line),back:#E0F0FF,eolfilled
style.verilog.4=$(colour.number)
style.verilog.5=fore:#7f005f,bold
style.verilog.6=$(colour.string),$(font.string.literal)
style.verilog.7=fore:#007F7F
style.verilog.8=fore:#804020
style.verilog.9=$(colour.preproc)
style.verilog.10=fore:#007070
style.verilog.11=
style.verilog.12=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
style.verilog.19=fore:#2a00ff
style.verilog.20=fore:#2A00FF
style.verilog.21=fore:#7F0000
style.verilog.22=fore:#00007F
style.verilog.23=fore:#0000FF
style.verilog.24=fore:#005032,bold

lexer.verilog.portstyling=1
lexer.verilog.allupperkeywords=1

lexer.verilog.track.preprocessor=1
lexer.verilog.update.preprocessor=1


style.verilog.64=back:#E0E0E0,eolfilled
style.verilog.65=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.66=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.67=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.68=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.69=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.70=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.71=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.72=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.73=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.74=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.75=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.76=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.83=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.84=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.85=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.86=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.87=back:#E0E0E0,eolfilled,fore:#808080,italics
style.verilog.88=back:#E0E0E0,eolfilled,fore:#808080,italics

braces.verilog.style=10


module vhdl

file.patterns.vhdl=*.vhd;*.vhdl
filter.vhdl=VHDL (vhd vhdl)|$(file.patterns.vhdl)|

*filter.vhdl=$(filter.vhdl)

lexer.$(file.patterns.vhdl)=vhdl
name.$(file.patterns.vhdl)=vhdl

*language.vhdl=VHDL|vhd||

word.chars.vhdl=$(chars.alpha)$(chars.numeric)_
word.characters.$(file.patterns.vhdl)=$(word.chars.vhdl)


comment.block.vhdl=--



indent.maintain.$(file.patterns.vhdl)=1;


keywords.$(file.patterns.vhdl)=access after alias all architecture array assert attribute begin block \
body buffer bus case component configuration constant disconnect downto else elsif end entity exit file \
for function generate generic group guarded if impure in inertial inout is label library linkage literal \
loop map new next null of on open others out package port postponed procedure process pure range record \
register reject report return select severity shared signal subtype then to transport type unaffected \
units until use variable wait when while with

keywords2.$(file.patterns.vhdl)=                                                                            \
 abs and mod nand nor not or rem rol ror sla sll sra srl xnor xor

keywords3.$(file.patterns.vhdl)=                                                                            \
 left right low high ascending image value pos val succ pred leftof rightof base range reverse_range        \
 length delayed stable quiet transaction event active last_event last_active last_value driving             \
 driving_value simple_name path_name instance_name

keywords4.$(file.patterns.vhdl)=                                                                            \
 now readline read writeline write endfile resolved to_bit to_bitvector to_stdulogic to_stdlogicvector      \
 to_stdulogicvector to_x01 to_x01z to_UX01 rising_edge falling_edge is_x shift_left shift_right rotate_left \
 rotate_right resize to_integer to_unsigned to_signed std_match to_01

keywords5.$(file.patterns.vhdl)=                                                                            \
 std ieee work standard textio std_logic_1164 std_logic_arith std_logic_misc std_logic_signed               \
 std_logic_textio std_logic_unsigned numeric_bit numeric_std math_complex math_real vital_primitives        \
 vital_timing

keywords6.$(file.patterns.vhdl)=                                                                            \
 boolean bit character severity_level integer real time delay_length natural positive string bit_vector     \
 file_open_kind file_open_status line text side width std_ulogic std_ulogic_vector std_logic                \
 std_logic_vector X01 X01Z UX01 UX01Z unsigned signed


style.vhdl.32=$(font.base)
style.vhdl.0=fore:#800080
style.vhdl.1=$(colour.code.comment.line),$(font.code.comment.line)
style.vhdl.2=fore:#3F7F3F,$(font.code.comment.line)
style.vhdl.3=$(colour.number)
style.vhdl.4=$(colour.string)
style.vhdl.5=
style.vhdl.6=
style.vhdl.7=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
style.vhdl.8=$(colour.keyword)
style.vhdl.9=fore:#007F7F
style.vhdl.10=fore:#804020
style.vhdl.11=fore:#808020
style.vhdl.12=fore:#208020
style.vhdl.13=fore:#208080
style.vhdl.14=fore:#804020,$(font.code.comment.doc)
style.vhdl.15=$(colour.code.comment.box),$(font.code.comment.box)
braces.vhdl.style=5

module yaml

file.patterns.yaml=*.yaml;*.yml
filter.yaml=YAML (yaml)|$(file.patterns.yaml)|
*filter.yaml=$(filter.yaml)
lexer.$(file.patterns.yaml)=yaml
name.$(file.patterns.yaml)=yaml
*language.yaml=YAML|yaml||

tabsize.$(file.patterns.yaml)=2
indent.size.$(file.patterns.yaml)=2
use.tabs.$(file.patterns.yaml)=0

comment.block.yaml=#~

keywords.$(file.patterns.yaml)=true false yes no

style.yaml.0=$(font.text),fore:#000000
style.yaml.1=$(font.comment),fore:#008800
style.yaml.2=$(font.base),fore:#000088,bold
style.yaml.3=$(font.base),fore:#880088
style.yaml.4=$(font.base),fore:#880000
style.yaml.5=$(font.base),fore:#008888
style.yaml.6=$(font.comment),fore:#FFFFFF,bold,back:#000088,eolfilled
style.yaml.7=$(font.text),fore:#333366
style.yaml.8=$(font.text),fore:#FFFFFF,italics,bold,back:#FF0000,eolfilled
style.yaml.9=$(colour.operator)
